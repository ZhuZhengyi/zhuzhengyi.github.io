# [盛最多水的容器](https://leetcode-cn.com/problems/container-with-most-water/description/ "https://leetcode-cn.com/problems/container-with-most-water/description/")

| Category   | Difficulty      | Likes | Dislikes |
| ---------- | --------------- | ----- | -------- |
| algorithms | Medium (61.40%) | 1147  | -        |

**Tags**

[`array`](https://leetcode.com/tag/array "https://leetcode.com/tag/array") | [`two-pointers`](https://leetcode.com/tag/two-pointers "https://leetcode.com/tag/two-pointers")

**Companies**

`bloomberg`

给定 *n* 个非负整数 *a*1，*a*2，...，*a*n，每个数代表坐标中的一个点 (*i*, *ai*) 。在坐标内画 *n* 条垂直线，垂直线 *i* 的两个端点分别为 (*i*, *ai*) 和 (*i*, 0)。找出其中的两条线，使得它们与 *x* 轴共同构成的容器可以容纳最多的水。

**说明：**你不能倾斜容器，且 *n* 的值至少为 2。

![](https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/07/25/question_11.jpg)

图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。

**示例:**

```
输入: [1,8,6,2,5,4,8,3,7]
输出: 49
```

---

[Discussion](https://leetcode-cn.com/problems/container-with-most-water/comments/ "https://leetcode-cn.com/problems/container-with-most-water/comments/") | [Solution](https://leetcode-cn.com/problems/container-with-most-water/solution/ "https://leetcode-cn.com/problems/container-with-most-water/solution/")

## 解法

```python
class Solution:
    '''
    ## 双指针法
        矩阵的面积：
          `area = 宽 * min(height[l], height[r])`
        其中，
             `宽 = r -l`
             `高 = min(height[l], height[r])`
        要矩阵面积最大化，**两条垂直线的距离越远越好，两条垂直线的最短长度也要越长越好**。

        我们设置两个指针 `l` 和 `r，分别指向数组的最左端和最右端。
        此时，两条垂直线的距离是最远的，若要下一个矩阵面积比当前面积来得大，
        必须要把 `height[l]` 和 `height[r]` 中较短的垂直线往中间移动。
        因为如果移动较长的线，则高度不可能增加，宽度-1，总面积一定会减小。
    '''
    def maxArea(self, height: List[int]) -> int:
        if len(height) < 2:
            return 0
        l, r = 0, len(height) - 1
        area = 0
        while l < r:
            area = max(area, (r - l) * min(height[l], height[r]))
            if height[l] < height[r]:
                l += 1
            else:
                r -= 1
        return area
```
