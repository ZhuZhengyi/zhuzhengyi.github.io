# [两数之和](https://leetcode-cn.com/problems/two-sum/description/ "https://leetcode-cn.com/problems/two-sum/description/")

| Category   | Difficulty    | Likes | Dislikes |
| ---------- | ------------- | ----- | -------- |
| algorithms | Easy (47.03%) | 6994  | -        |

**Tags**

**Companies**

给定一个整数数组 `nums` 和一个目标值 `target`，请你在该数组中找出和为目标值的那 **两个** 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

**示例:**

```
给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]
```

---

[Discussion](https://leetcode-cn.com/problems/two-sum/comments/ "https://leetcode-cn.com/problems/two-sum/comments/") | [Solution](https://leetcode-cn.com/problems/two-sum/solution/ "https://leetcode-cn.com/problems/two-sum/solution/")

## 解法

```python
class Solution:
    '''
    ## 解题思路
    1. 按序遍历列表；
    2. 使用一个map记录{n:i}；
    3. 遍历当前元素n时，检查map中是否已存在target-n；
       3.1 如果存在，则返回[j, i];
       3.2 否则继续遍历；
    4. 遍历完成后，还没有找到，则返回[];
    '''
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        needed = {}
        for i, n in enumerate(nums):
            if needed.get(target-n) is not None:
                j = needed[target-n]
                return [j, i]
            needed[n] = i
        return []
```
