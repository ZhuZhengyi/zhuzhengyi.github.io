# [字符串中的第一个唯一字符](https://leetcode-cn.com/problems/first-unique-character-in-a-string/description/ "https://leetcode-cn.com/problems/first-unique-character-in-a-string/description/")

| Category   | Difficulty    | Likes | Dislikes |
| ---------- | ------------- | ----- | -------- |
| algorithms | Easy (54.73%) | 548   | -        |

**Tags**

[`hash-table`](https://leetcode.com/tag/hash-table "https://leetcode.com/tag/hash-table") | [`string`](https://leetcode.com/tag/string "https://leetcode.com/tag/string")

**Companies**

`amazon` | `bloomberg` | `microsoft`

给定一个字符串 `s` ，找到 *它的第一个不重复的字符，并返回它的索引* 。如果不存在，则返回 `-1` 。

**示例 1：**

```
输入: s = "leetcode"
输出: 0
```

**示例 2:**

```
输入: s = "loveleetcode"
输出: 2
```

**示例 3:**

```
输入: s = "aabb"
输出: -1
```

**提示:**

- `1 <= s.length <= 105`
- `s` 只包含小写字母

---

[Discussion](https://leetcode-cn.com/problems/first-unique-character-in-a-string/comments/ "https://leetcode-cn.com/problems/first-unique-character-in-a-string/comments/") | [Solution](https://leetcode-cn.com/problems/first-unique-character-in-a-string/solution/ "https://leetcode-cn.com/problems/first-unique-character-in-a-string/solution/")

## 解法

```cpp
class Solution {
public:
    /**
    * ## 解题思路
    * * 遍历2次，
    * * 第一次使用map统计各个字符出现的次数；
    * * 第二次返回第一个字符次数小于2的字符序号i；
    */
    int firstUniqChar(string s) {
        int res = 0;
        map<char, int> charCount;
        for(char c: s) {
            charCount[c]++;
        }
        for(int i=0; i<s.length(); i++) {
            if (charCount[s[i]]<2) {
                return i;
            }
        }
        return -1;
    }
};
```


