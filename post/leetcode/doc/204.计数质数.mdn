# [计数质数](https://leetcode-cn.com/problems/count-primes/description/ "https://leetcode-cn.com/problems/count-primes/description/")

| Category   | Difficulty      | Likes | Dislikes |
| ---------- | --------------- | ----- | -------- |
| algorithms | Medium (37.52%) | 881   | -        |

**Tags**

[`hash-table`](https://leetcode.com/tag/hash-table "https://leetcode.com/tag/hash-table") | [`math`](https://leetcode.com/tag/math "https://leetcode.com/tag/math")

**Companies**

`amazon` | `microsoft`

给定整数 `n` ，返回 *所有小于非负整数 `n` 的质数的数量* 。

**示例 1：**

```
输入：n = 10
输出：4
解释：小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。
```

**示例 2：**

```
输入：n = 0
输出：0
```

**示例 3：**

```
输入：n = 1
输出：0
```

**提示：**

- `0 <= n <= 5 * 106`

---

[Discussion](https://leetcode-cn.com/problems/count-primes/comments/ "https://leetcode-cn.com/problems/count-primes/comments/") | [Solution](https://leetcode-cn.com/problems/count-primes/solution/ "https://leetcode-cn.com/problems/count-primes/solution/")

## 解法

```cpp
class Solution {
public:
    /*
    ## 解题思路
    * 筛法
    1.[4...n]中，
      依次筛掉: 2的倍数2*i
               3的倍数3*i
            .. sqrt[n]的倍数j*i
    2. 剩下的数都是素数；
    */
    int countPrimes(int n) {
        if (n<2) {
            return 0;
        }
        vector<bool> isPrime(n, true);
        isPrime[0] = false;
        isPrime[1] = false;
        for(int i=0; i<sqrt(n); ++i) {
            if(isPrime[i]) {
                for(int j=i*i; j<n; j+=i) {
                    isPrime[j] = false;
                }
            }
        }
        return count(isPrime.begin(), isPrime.end(), true);
    }
};
```
