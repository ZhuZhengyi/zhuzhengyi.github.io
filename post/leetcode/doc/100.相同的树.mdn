# [相同的树](https://leetcode-cn.com/problems/same-tree/description/ "https://leetcode-cn.com/problems/same-tree/description/")

| Category   | Difficulty    | Likes | Dislikes |
| ---------- | ------------- | ----- | -------- |
| algorithms | Easy (59.91%) | 753   | -        |

**Tags**

[`tree`](https://leetcode.com/tag/tree "https://leetcode.com/tag/tree") | [`depth-first-search`](https://leetcode.com/tag/depth-first-search "https://leetcode.com/tag/depth-first-search")

**Companies**

`bloomberg`

给你两棵二叉树的根节点 `p` 和 `q` ，编写一个函数来检验这两棵树是否相同。

如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的。

**示例 1：**

![](https://assets.leetcode.com/uploads/2020/12/20/ex1.jpg)

```
输入：p = [1,2,3], q = [1,2,3]
输出：true
```

**示例 2：**

![](https://assets.leetcode.com/uploads/2020/12/20/ex2.jpg)

```
输入：p = [1,2], q = [1,null,2]
输出：false
```

**示例 3：**

![](https://assets.leetcode.com/uploads/2020/12/20/ex3.jpg)

```
输入：p = [1,2,1], q = [1,1,2]
输出：false
```

**提示：**

- 两棵树上的节点数目都在范围 `[0, 100]` 内
- `-104 <= Node.val <= 104`

---

[Discussion](https://leetcode-cn.com/problems/same-tree/comments/ "https://leetcode-cn.com/problems/same-tree/comments/") | [Solution](https://leetcode-cn.com/problems/same-tree/solution/ "https://leetcode-cn.com/problems/same-tree/solution/")

## 解法

```cpp
class Solution {
public:
    /*
    ## 解题思路
    * 解法一：递归法
    * 相同树条件：
    * 1. 两根节点都为空节点，两树相同；
    * 2. 只有一个为空节点，两树不同；
    * 3. 都不为空节点，这两者的左右子树应都为相应的相同树
    */
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if (!p && !q) return true;
        if (!p || !q) return false;
        return ( p->val == q->val 
            && isSameTree(p->left, q->left)
            && isSameTree(p->right, q->right)
        );
    }
};
```
