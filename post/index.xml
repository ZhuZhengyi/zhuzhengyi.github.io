<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Bash基础</title><link>https://justice.bj.cn/post/14.language/shell/bash%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/shell/bash%E5%9F%BA%E7%A1%80/</guid><description>Bash基础 简介 特殊变量 1 2 3 4 5 6 7 $# # 参数个数 $@ # 所有参数, 每个参数分别用&amp;#34;&amp;#34;包含 $* # 所有参数，所有参数使用一个外层&amp;#</description></item><item><title>Bash最佳实践</title><link>https://justice.bj.cn/post/14.language/shell/bash%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/shell/bash%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>Bash最佳实践 基本规则 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58</description></item><item><title>Golang测试</title><link>https://justice.bj.cn/post/14.language/golang/golang%E6%B5%8B%E8%AF%95/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E6%B5%8B%E8%AF%95/</guid><description>Golang测试 简介 单元测试 1 2 3 4 5 ## 执行所有的单元测试 $ go test -v *.go ## 执行指定的单元测试用例 $ go test -v *.go -test.run TestFuncName 参考</description></item><item><title>hbase 配额(quota)</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E9%A2%9D/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E9%A2%9D/</guid><description>hbase 配额(quota) 启用配额 hbase-site.xml”,增加如下配置： 1 2 3 4 5 6 7 8 &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;hbase.quota.enabled&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;hbase.quota.refresh.period&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;10000&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt;</description></item><item><title>LFU缓存</title><link>https://justice.bj.cn/post/leetcode/460.lfu%E7%BC%93%E5%AD%98/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/460.lfu%E7%BC%93%E5%AD%98/</guid><description>LFU缓存 Category Difficulty Likes Dislikes algorithms Hard (34.03%) 81 - Tags design Companies amazon | google 设计并实现最不经常使用（LFU）缓存的数据结构。它应该支持以下操作：get 和 put。 get(key) - 如果键存在于</description></item><item><title>LRU缓存机制</title><link>https://justice.bj.cn/post/leetcode/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid><description>LRU缓存机制 Category Difficulty Likes Dislikes algorithms Medium (44.70%) 332 - Tags design Companies amazon | bloomberg | facebook | google | microsoft | palantir | snapchat | twitter | uber | yahoo | zenefits 运用你所掌握的数据结构，设计和实现一个 LRU (最近最少使用) 缓存</description></item><item><title>Rust 数据类型</title><link>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>Rust 数据类型 简介 Rust的数据类型分为标量(scalar)类型和复合(compound)类型两类。 标量类型：表示一个单独的值，包括bool, numeirc,</description></item><item><title>Rust代码组织</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%8C%85%E7%AE%A1%E7%90%86/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%8C%85%E7%AE%A1%E7%90%86/</guid><description>Rust代码组织 简介 Rust程序代码组织分为两个层级： 包(crate)：是一个独立的可编译单元； 模块(mod)：是包内代码组织单元； 包(Cr</description></item><item><title>sed</title><link>https://justice.bj.cn/post/14.language/shell/sed/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/shell/sed/</guid><description>sed 简介 sed是unix下常用的文本处理工具之一， 常用法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43</description></item><item><title>Z 字形变换</title><link>https://justice.bj.cn/post/leetcode/6.z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/6.z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</guid><description>Z 字形变换 Category Difficulty Likes Dislikes algorithms Medium (45.86%) 564 - Tags string Companies Unknown 将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。 比如输入字符串为 &amp;quot;LEETCODEISHIRING&amp;quot; 行数为 3 时，排列如</description></item><item><title>三数之和</title><link>https://justice.bj.cn/post/leetcode/15.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/15.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>三数之和 Category Difficulty Likes Dislikes algorithms Medium (25.59%) 1827 - Tags array | two-pointers Companies adobe | amazon | bloomberg | facebook | microsoft 给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 *a，b，c ，*使得 *a + b</description></item><item><title>下降路径最小和 II</title><link>https://justice.bj.cn/post/leetcode/1289.%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C-ii/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/1289.%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C-ii/</guid><description>下降路径最小和 II Category Difficulty Likes Dislikes algorithms Hard (60.08%) 25 - Tags Unknown Companies Unknown 给你一个整数方阵 arr ，定义「非零偏移下降路径」为：从 arr 数组中的每一行选择一个数字，且按顺序选出来的数</description></item><item><title>两两交换链表中的节点</title><link>https://justice.bj.cn/post/leetcode/24.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/24.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid><description>两两交换链表中的节点 Category Difficulty Likes Dislikes algorithms Medium (63.29%) 359 - Tags linked-list Companies bloomberg | microsoft | uber 给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。 你不能只是单纯的改变节点内部</description></item><item><title>两数之和</title><link>https://justice.bj.cn/post/leetcode/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>两数之和 Category Difficulty Likes Dislikes algorithms Easy (47.03%) 6994 - Tags Companies 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 你</description></item><item><title>两链表数相加</title><link>https://justice.bj.cn/post/leetcode/2.%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/2.%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</guid><description>两链表数相加 Category Difficulty Likes Dislikes algorithms Medium (36.10%) 3467 - Tags****Companies 给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能</description></item><item><title>买卖股票的最佳时机</title><link>https://justice.bj.cn/post/leetcode/121.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/121.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</guid><description>买卖股票的最佳时机 Category Difficulty Likes Dislikes algorithms Easy (52.41%) 779 - Tags array | dynamic-programming Companies amazon | bloomberg | facebook | microsoft | uber 给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。 如果你最多只允许完成</description></item><item><title>买卖股票的最佳时机 II</title><link>https://justice.bj.cn/post/leetcode/122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA-ii/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA-ii/</guid><description>买卖股票的最佳时机 II Category Difficulty Likes Dislikes algorithms Easy (57.53%) 613 - Tags array | greedy Companies bloomberg 给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。 设计一个算法来计算你所能获取的最大</description></item><item><title>买卖股票的最佳时机 III</title><link>https://justice.bj.cn/post/leetcode/123.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA-iii/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/123.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA-iii/</guid><description>买卖股票的最佳时机 III Category Difficulty Likes Dislikes algorithms Hard (41.21%) 308 - Tags array | dynamic-programming Companies Unknown 给定一个数组，它的第* i* 个元素是一支给定的股票在第 *i *天的价格。 设计一个算法来计算你所能获</description></item><item><title>二叉搜索树的最小绝对差</title><link>https://justice.bj.cn/post/leetcode/530.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/530.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE/</guid><description>二叉搜索树的最小绝对差 Category Difficulty Likes Dislikes algorithms Easy (55.49%) 99 - Tags tree Companies google 给你一棵所有节点为非负值的二叉搜索树，请你计算树中任意两节点的差的绝对值的最小值。 示例： 1 2</description></item><item><title>二叉树展开为链表</title><link>https://justice.bj.cn/post/leetcode/114.%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/114.%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</guid><description>二叉树展开为链表 Category Difficulty Likes Dislikes algorithms Medium (68.83%) 340 - Tags tree | depth-first-search Companies microsoft 给定一个二叉树，原地将它展开为一个单链表。 例如，给定二叉树 1 2 3 4 5 1 / \ 2 5 / \ \ 3 4 6 将其</description></item></channel></rss>