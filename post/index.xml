<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>CubeFS-BlobStore</title><link>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore/</link><pubDate>Sat, 19 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore/</guid><description>CubeFS-BlobStore 简介 CubeFS-BlobStore是一个高可靠、高可用、低成本、支持超大规模(EB)的分布式存储系统。 采用纠删码中的Reed-Solom</description></item><item><title>Rust中的Pin</title><link>https://justice.bj.cn/post/14.language/rust/rust-pin/</link><pubDate>Sat, 19 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust-pin/</guid><description>Rust中的Pin 简介 Pin&amp;lt;P&amp;lt;T&amp;gt;&amp;gt;是一个struct, 作用是将P所指向的T在内存中固定住，不能移动。不能通过s</description></item><item><title>CubeFS Bcache</title><link>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-bcache/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-bcache/</guid><description>CubeFS Bcache 简介 参考</description></item><item><title>Elasticsearch内核解析 - 查询篇</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E8%AF%BB%E6%B5%81%E7%A8%8B/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E8%AF%BB%E6%B5%81%E7%A8%8B/</guid><description>Elasticsearch内核解析 - 查询篇 读操作 实时性和《Elasticsearch内核解析 - 写入篇》中的“写操作”一样，对于搜索而言是近实</description></item><item><title>ElasticSearch基础</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</guid><description>ElasticSearch基础 简介 Elasticsearch 是一个基于Lucene的搜索和分析引擎; 近实时； 分布式可扩展的近实时； 架构 一个 ES Index 在集群模式下，有多个 Node</description></item><item><title>ElasticSearch基础之lucene</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80%E4%B9%8Blucene/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80%E4%B9%8Blucene/</guid><description>ElasticSearch基础之lucene 简介 Elasticsearch 是一个基于lucene的分布式可扩展的近实时搜索和分析引擎。 Lucene索引结构 Lucen</description></item><item><title>ES之Master选举</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E4%B9%8Bmaster%E9%80%89%E4%B8%BE/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E4%B9%8Bmaster%E9%80%89%E4%B8%BE/</guid><description>ES之Master选举 简介 ES的所有节点通过Gossip协议建立一个Cluster； cluster中的任意一个节点都可以设置 node.master 和 node.data 属性； 对当</description></item><item><title>Golang内存对齐</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</guid><description>Golang内存对齐 简介 CPU 始终以字长访问内存， 对齐保证(align guarantee) 结构体的成员变量，第一个成员变量的偏移量为 0。往后的每个成员变量的对齐值</description></item><item><title>Rust Trait</title><link>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</guid><description>Rust Trait 简介 trait(特性) 是一组方法的集合，实现trait的类型可以访问该 trait 中定义的其他方法。 任何类型都可以实现 trait； 要点 Trait必</description></item><item><title>Rust 基础</title><link>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</guid><description>Rust 基础 简介 Rust是由Graydon Hoare于2009年发起的一门系统级、编译型编程语言，其设计准则为“安全，并发，实用”，支持函数式，并</description></item><item><title>Rust 异步编程</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%82%E6%AD%A5/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%82%E6%AD%A5/</guid><description>Rust 异步编程 简介 异步编程经历了三个阶段： 第一阶段：异步回调模式，存在回调地狱问题； 第二阶段：nodejs 中的Promise/Future模式，</description></item><item><title>Rustß迭代器</title><link>https://justice.bj.cn/post/14.language/rust/rust%E8%BF%AD%E4%BB%A3%E5%99%A8/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid><description>Rustß迭代器 简介 迭代器是一个trait； 迭代器（iterator）负责遍历序列中的每一项和决定序列何时结束的逻辑； 迭代器是 惰性的（laz</description></item><item><title>Rust命令工具</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7/</guid><description>Rust命令工具 简介 Cargo cargo test 1 $ cargo test Rustup 参考</description></item><item><title>Rust异步框架之Tokio</title><link>https://justice.bj.cn/post/14.language/rust/rust-tokio/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust-tokio/</guid><description>Rust异步框架之Tokio 简介 参考 tokio 高级用法 - lack 的个人博客</description></item><item><title>Rust模块及包管理</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%8C%85%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%8C%85%E7%AE%A1%E7%90%86/</guid><description>Rust模块及包管理 简介 Rust程序代码组织分为两个层级： 包(crate)：是一个独立的可编译单元； 模块(mod)：是包内代码组织单元； 包(</description></item><item><title>有序链表转换二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/doc/109.%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/109.%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>有序链表转换二叉搜索树 Category Difficulty Likes Dislikes algorithms Medium (76.22%) 659 - Tags linked-list | depth-first-search Companies zenefits 给定一个单链表，其中的元素按升序排序，将其转换为高度平衡的二叉搜索树。 本题中，一个高度平</description></item><item><title>枚举(Enum)</title><link>https://justice.bj.cn/post/14.language/rust/22.rust-enum/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/22.rust-enum/</guid><description>枚举(Enum) define 1 2 3 4 5 6 7 8 9 10 enum Option&amp;lt;T&amp;gt;{Some(T),None,}implOption{pubfn as_ref(&amp;amp;self)-&amp;gt; Option&amp;lt;&amp;amp;T&amp;gt;//从`&amp;amp;Option&amp;lt;T&amp;gt;`转换为</description></item><item><title>递增子序列</title><link>https://justice.bj.cn/post/leetcode/doc/491.%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/491.%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>递增子序列 Category Difficulty Likes Dislikes algorithms Medium (53.91%) 391 - Tags depth-first-search Companies yahoo 给你一个整数数组 nums ，找出并返回所有该数组中不同的递增子序列，递增子序列中 至少有两个元素 。你可以按 任意顺序</description></item><item><title>通过翻转子数组使两个数组相等</title><link>https://justice.bj.cn/post/leetcode/doc/1460.%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1460.%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89/</guid><description>通过翻转子数组使两个数组相等 Category Difficulty Likes Dislikes algorithms Easy (74.20%) 33 - Tags Unknown Companies Unknown 给你两个长度相同的整数数组 target 和 arr 。 每一步中，你可以选择 arr 的任意 非空子数组 并将它翻转。你</description></item><item><title>二叉树的最近公共祖先</title><link>https://justice.bj.cn/post/leetcode/doc/236.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link><pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/236.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid><description>二叉树的最近公共祖先 Category Difficulty Likes Dislikes algorithms Medium (68.41%) 1530 - Tags tree Companies amazon | apple | facebook | linkedin | microsoft 给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。 百度百科中最近公共祖先的</description></item></channel></rss>