<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Elasticsearch内核解析 - 查询篇</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E8%AF%BB%E6%B5%81%E7%A8%8B/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E8%AF%BB%E6%B5%81%E7%A8%8B/</guid><description>Elasticsearch内核解析 - 查询篇 读操作 实时性和《Elasticsearch内核解析 - 写入篇》中的“写操作”一样，对于搜索而言是近实</description></item><item><title>Elasticsearch写流程</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%99%E5%85%A5%E6%B5%81%E7%A8%8B/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%99%E5%85%A5%E6%B5%81%E7%A8%8B/</guid><description>Elasticsearch写流程 lucene的写操作及其问题 Elasticsearch底层使用Lucene来实现doc的读写操作，Lucen</description></item><item><title>ElasticSearch基础</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/elasticsearch%E5%9F%BA%E7%A1%80/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/elasticsearch%E5%9F%BA%E7%A1%80/</guid><description>ElasticSearch基础 简介 Elasticsearch 是一个基于lucene的分布式可扩展的实时搜索和分析引擎。 特点 分布式存储 近实时检索 核心概念 索引(inde</description></item><item><title>Elasticsearch数据模型</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</guid><description>Elasticsearch数据模型 简介 Elasticsearch是一个建立在全文搜索引擎库Apache Lucene 基础上的分布式搜索引擎，先来简单看一</description></item><item><title>esrally for es on cfs</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/esrally/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/esrally/</guid><description>esrally for es on cfs 简介 esrally 是 elastic 官方开源的一款基于 python3 实现的针对 es 的压测工具，主要功能如下： 自动创建、压测和销毁 es 集群 可分 es 版本管理压测数据和方案 完善的压</description></item><item><title>ES倒排索引原理</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</guid><description>ES倒排索引原理 简介 Elasticsearch通过Lucene的倒排索引技术实现比关系型数据库更快的过滤。它对多条件的过滤支持非常好，比如年</description></item><item><title>ES冷热分离</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%B7%E7%83%AD%E5%88%86%E7%A6%BB/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%B7%E7%83%AD%E5%88%86%E7%A6%BB/</guid><description>ES冷热分离 简介 elasticsearch 从6.6版本增加了冷热(hot-warm)特性。 该特性可以将同一个es集群中的不同es节点根据硬件性能分为hot/warm</description></item><item><title>ES存储详解</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%AD%98%E5%82%A8%E8%AF%A6%E8%A7%A3/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%AD%98%E5%82%A8%E8%AF%A6%E8%A7%A3/</guid><description>ES存储详解 Elasticsearch路径 Elasticsearch配置了多个路径： path.home：运行Elasticsearch进程的</description></item><item><title>HBase Compaction分析</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-compact%E5%88%86%E6%9E%90/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-compact%E5%88%86%E6%9E%90/</guid><description>HBase Compaction分析 compact 流程 compact 触发条件 memstore flush： memstore flush会产生HFile文件，文件越来越多就需要compact。因此在每次执行完</description></item><item><title>HBase MemStore 分析</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-memstore%E5%88%86%E6%9E%90/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-memstore%E5%88%86%E6%9E%90/</guid><description>HBase MemStore 分析 Memstore Flush触发条件 Memstore级别：当Region中任意一个MemStore的大小达到了上限（hbase.hregion.me</description></item><item><title>HBase python client</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-python-client%E6%93%8D%E4%BD%9C/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-python-client%E6%93%8D%E4%BD%9C/</guid><description>HBase python client 介绍 hbase 提供thrift接口，python可通过该接口和hbase通信。happybase是python基于thrift协议的一个hba</description></item><item><title>HBase Region Split</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-split/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-split/</guid><description>HBase Region Split split 作用 在 HBase 中，split 其实是进行 sharding 的一种技术手段，通过 HBase 的 split 条件和 split 策略，将 region 进行合理的 split，再通过 HBase 的 balance 策略，将分裂的 region 负载</description></item><item><title>HBase Region 自动拆分策略</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase_split_policy/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase_split_policy/</guid><description>HBase Region 自动拆分策略 HBase-2.x支持7种Region自动拆分Region的策略，类图如下: 设置自动拆分策略的关键配置如下: 1 2 3 4 5 6 7 8</description></item><item><title>HBase RPC</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-rpc/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-rpc/</guid><description>HBase RPC 简介 HBase主要包含Master，RegionServer，Client 3个组件组成。组件之间通过Rpc 和 zk进行通信。RPC通信功能</description></item><item><title>HBase Scan</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-scan/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-scan/</guid><description>HBase Scan Filter 过滤器是在get或者scan时候过滤结果用的. HBase中的过滤器被用户创建出来后会被序列化为可以网络传输的格式,然后被分发到各个Re</description></item><item><title>Hbase WAL 详解</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-wal/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-wal/</guid><description>Hbase WAL 详解 简介 HBase 为保证写入高速，先往内存 memstore 写数据，当 memstore 到一定大小时，再批量 flush 到 storefile 中进行持久化，此时如果 rs 宕机 memstore 中没有 flush 的数据将会丢失，为此在写</description></item><item><title>HBase 安装</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E5%AE%89%E8%A3%85/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E5%AE%89%E8%A3%85/</guid><description>HBase 安装 安装 相关组件 hadoop-2.7.6 (下载) zookeeper-3.4.12 (下载) hbase-2.0.0 (下载) 部署模式 单机模式(standalone) 单机模式不依赖hadoop，直接使用本地文件系统，数</description></item><item><title>hbase 节点宕机处理流程</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81/hbase-rs-crash%E6%B5%81%E7%A8%8B/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81/hbase-rs-crash%E6%B5%81%E7%A8%8B/</guid><description>hbase 节点宕机处理流程 region server宕机后，zk检测到节点超时，将/hbase/rs/对应节点删除； HMaster有一个RegionServer</description></item><item><title>HBase 配置</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E7%BD%AE/</guid><description>HBase 配置 hbase-env.sh 配置 1 2 3 4 5 6 7 # hbase-env.sh # jvm export HBASE_HEAPSIZE=16G # 堆内存大小，建议为20~24G，太大会导致GC时间过长，太小会导致频繁的flush # 开启jvm gc 日志</description></item><item><title>HBase二级索引</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E4%BA%8C%E7%BA%A7%E7%B4%A2%E5%BC%95/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E4%BA%8C%E7%BA%A7%E7%B4%A2%E5%BC%95/</guid><description>HBase二级索引 简介 协处理器实现Coprocessor CoProcessor相当于HBase的Observer+hook，目前支持Mast</description></item></channel></rss>