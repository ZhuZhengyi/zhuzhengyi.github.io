<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQL 索引</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql%E7%B4%A2%E5%BC%95/</link><pubDate>Sun, 19 Jun 2022 22:15:37 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/mysql/mysql%E7%B4%A2%E5%BC%95/</guid><description>MySQL 索引 简介 mysql中的索引是用于提升查询效率的数据结构，其通过额外的存储空间换取查询的效率; 通过索引可以快速的定位存储的数据，而不用每次都</description></item><item><title>MySQL基础</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql%E5%9F%BA%E7%A1%80/</link><pubDate>Sun, 19 Jun 2022 16:06:37 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/mysql/mysql%E5%9F%BA%E7%A1%80/</guid><description>MySQL基础 简介 mysql是 架构 特点 设计范式 1NF: 原子性，保证每列不可再分, 保证表中无表； 2NF: 消除部分依赖，在满足1NF上，每个属性完全依赖于主</description></item><item><title>区块链共识算法</title><link>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 19 Jun 2022 16:06:37 +0800</pubDate><guid>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/</guid><description>区块链共识算法 简介 共识算法是用来解决对等节点网络系统(P2P)中节点间相互信任问题（拜占庭将军问题, BFT）而提出的一种算法。 在区块链中，P</description></item><item><title>openssl</title><link>https://justice.bj.cn/post/70.tool/openssl/</link><pubDate>Tue, 14 Jun 2022 20:45:32 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/openssl/</guid><description>openssl 简介 操作 1 2 3 4 5 6 7 ## 加密 echo -n &amp;#34;xxx&amp;#34; | base64 | openssl enc -aes-128-ecb -a -e -nosalt ## 解密 cat &amp;lt;&amp;lt;EOF | openssl enc -aes-128-ecb -a -d -nosalt | base64 -d yyy EOF 参考</description></item><item><title>Flink消息消费流程</title><link>https://justice.bj.cn/post/30.architech/flink/flink-%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF%E7%9A%84%E6%B5%81%E7%A8%8B/</link><pubDate>Tue, 14 Jun 2022 19:20:14 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/flink/flink-%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF%E7%9A%84%E6%B5%81%E7%A8%8B/</guid><description>Flink消息消费流程 简介 准备一个ResultPartition； 通知JobMaster； JobMaster通知下游节点；如果下游节点尚未部</description></item><item><title>区块链-POS共识机制</title><link>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE-pos%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6/</link><pubDate>Tue, 14 Jun 2022 19:20:14 +0800</pubDate><guid>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE-pos%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6/</guid><description>区块链-POS共识机制 简介 PoS(Proof of Stake，权益证明), 最早由点点币的创始人Sunny King提出，目的是为了解决使用PoW挖矿出现大量资源浪</description></item><item><title>区块链中的攻击</title><link>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%B8%AD%E7%9A%84%E6%94%BB%E5%87%BB/</link><pubDate>Tue, 14 Jun 2022 19:20:14 +0800</pubDate><guid>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%B8%AD%E7%9A%84%E6%94%BB%E5%87%BB/</guid><description>区块链中的攻击 简介 1. 双花攻击 问题 双花问题是在点对点数字现金系统中，支付方将同一笔资金同时支付给两位收款方，由于收款方无法验证自己收到的资金是</description></item><item><title>只出现一次的数字 III</title><link>https://justice.bj.cn/post/leetcode/doc/260.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97iii/</link><pubDate>Tue, 14 Jun 2022 10:57:13 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/260.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97iii/</guid><description>只出现一次的数字 III Category Difficulty Likes Dislikes algorithms Medium (73.51%) 620 - Tags bit-manipulation Companies Unknown 给定一个整数数组 nums，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的</description></item><item><title>基本计算器</title><link>https://justice.bj.cn/post/leetcode/doc/224.%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8/</link><pubDate>Mon, 13 Jun 2022 17:36:43 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/224.%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8/</guid><description>基本计算器 Category Difficulty Likes Dislikes algorithms Hard (41.92%) 777 - Tags math | stack Companies google 给你一个字符串表达式 s ，请你实现一个基本计算器来计算并返回它的值。 注意:不允许使用任何将字符串作为数</description></item><item><title>Rust模块及包管理</title><link>https://justice.bj.cn/post/14.language/rust/80.rust%E5%8C%85%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 13 Jun 2022 16:32:28 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/80.rust%E5%8C%85%E7%AE%A1%E7%90%86/</guid><description>Rust模块及包管理 简介 Rust程序代码组织分为三个层级： 项目(package)：一个项目工程，一个项目通常由一个cargo.toml定义，</description></item><item><title>Substrate</title><link>https://justice.bj.cn/post/60.blockchain/substrate/</link><pubDate>Mon, 13 Jun 2022 16:32:28 +0800</pubDate><guid>https://justice.bj.cn/post/60.blockchain/substrate/</guid><description>Substrate 简介 参考</description></item><item><title>区块链UTXO模型</title><link>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BEutxo%E6%A8%A1%E5%9E%8B/</link><pubDate>Mon, 13 Jun 2022 16:32:28 +0800</pubDate><guid>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BEutxo%E6%A8%A1%E5%9E%8B/</guid><description>区块链UTXO模型 简介 UTXO(Unspent Transaction Output)是区块链中用来保存区块账户记录的方式之一。 参考</description></item><item><title>blockchain_rust</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E4%B9%8Bblockchain/</link><pubDate>Sun, 12 Jun 2022 20:44:24 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E4%B9%8Bblockchain/</guid><description>blockchain_rust 简介 blockchain_rust是github上一个基于rust的blockchain实现； 基本概念 block： 操作 1 2 3 4 5 6 7 8 9 10</description></item><item><title>IPFS(星际文件系统)</title><link>https://justice.bj.cn/post/60.blockchain/ipfs%E5%9F%BA%E7%A1%80/</link><pubDate>Sun, 12 Jun 2022 20:44:24 +0800</pubDate><guid>https://justice.bj.cn/post/60.blockchain/ipfs%E5%9F%BA%E7%A1%80/</guid><description>IPFS(星际文件系统) 简介 IPFS(InterPlanetary File System，星际文件系统), 是一个对等的分布式文件系统，用于存储和访问文件、网站、应用程序和数据。IPFS</description></item><item><title>Kademlia算法</title><link>https://justice.bj.cn/post/13.algorithm/kademlia%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 12 Jun 2022 20:44:24 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/kademlia%E7%AE%97%E6%B3%95/</guid><description>Kademlia算法 简介 Kademlia算法是2002年由Petar Maymounkov 和 David Mazières 所设计，以异或距离来对哈希表进行分层是其特点 Kad</description></item><item><title>Rust特性(trait)</title><link>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</link><pubDate>Sun, 12 Jun 2022 20:44:24 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</guid><description>Rust特性(trait) 简介 trait(特性) 是一组方法的集合，实现trait的类型可以访问该 trait 中定义的其他方法。 任何类型都可以实现 tra</description></item><item><title>Linux系统调用之Futex</title><link>https://justice.bj.cn/post/21.linux/linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B9%8Bfutex/</link><pubDate>Mon, 06 Jun 2022 20:41:30 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B9%8Bfutex/</guid><description>Linux系统调用之Futex 简介 Futex（Fast Userspace muTexes）的缩写，由Hubertus Franke, Matthew Kirkwood, Ingo Molnar and Rusty Russell共同设计完成，</description></item><item><title>ToyDB</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E4%B9%8Btoydb/</link><pubDate>Mon, 06 Jun 2022 20:41:30 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E4%B9%8Btoydb/</guid><description>ToyDB 简介 toydb是Erik Grinaker为学习rust语言而开发的分布式sql数据库，支持分布式事务模型; 架构 toydb主要由3部分组成：</description></item><item><title>AF_XDP</title><link>https://justice.bj.cn/post/21.linux/af_xdp/</link><pubDate>Sat, 04 Jun 2022 10:26:13 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/af_xdp/</guid><description>AF_XDP 简介 AF_XDP是一种用于高性能包处理的地址簇(Address Family)。 使用XDP程序中的XDP_REDIRECT操作，可以使用bp</description></item><item><title>eBPF简史(转)</title><link>https://justice.bj.cn/post/21.linux/ebpf%E7%AE%80%E5%8F%B2/</link><pubDate>Sat, 04 Jun 2022 10:26:13 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/ebpf%E7%AE%80%E5%8F%B2/</guid><description>eBPF简史(转) 源头：一篇 1992 年的论文 考虑到 BPF 的知名度，在介绍 eBPF 之前，笔者自觉还是有必要先来回答另一个问题： 什么是 BPF? 笔者在前文中说过了，BP</description></item></channel></rss>