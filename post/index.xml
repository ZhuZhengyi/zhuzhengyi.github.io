<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust基础</title><link>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 03 Jun 2022 16:07:01 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</guid><description>Rust基础 简介 Rust是由Graydon Hoare于2009年发起的一门系统级、编译型编程语言，其设计准则为“安全，并发，实用”，支持函数</description></item><item><title>Rust指针</title><link>https://justice.bj.cn/post/14.language/rust/10.rust%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</link><pubDate>Fri, 03 Jun 2022 16:07:01 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/10.rust%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</guid><description>Rust指针 简介 Rust中的指针是一个包含了内存地址的变量，该内存地址引用或者指向了另外的数据。 裸指针 rust裸指针就像C++中的指针一样;</description></item><item><title>Rust数据类型</title><link>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Fri, 03 Jun 2022 16:07:01 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>Rust数据类型 简介 Rust的数据类型分为标量(scalar)类型和复合(compound)类型、集合类型。 标量类型(scalar)：表示一</description></item><item><title>Rust枚举(enum)</title><link>https://justice.bj.cn/post/14.language/rust/22.rust%E6%9E%9A%E4%B8%BEenum/</link><pubDate>Fri, 03 Jun 2022 16:07:01 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/22.rust%E6%9E%9A%E4%B8%BEenum/</guid><description>Rust枚举(enum) 简介 enum是rust中用于表示同一个可能拥有可数不同状态对象的结构； enum包含枚举类型和枚举值, 枚举类型是该枚举</description></item><item><title>Rust特性(trait)</title><link>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</link><pubDate>Fri, 03 Jun 2022 16:07:01 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</guid><description>Rust特性(trait) 简介 trait(特性) 是一组方法的集合，实现trait的类型可以访问该 trait 中定义的其他方法。 任何类型都可以实现 tra</description></item><item><title>eBPF简史转</title><link>https://justice.bj.cn/post/21.linux/ebpf%E7%AE%80%E5%8F%B2/</link><pubDate>Fri, 03 Jun 2022 15:30:38 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/ebpf%E7%AE%80%E5%8F%B2/</guid><description>eBPF简史[转] 源头：一篇 1992 年的论文 考虑到 BPF 的知名度，在介绍 eBPF 之前，笔者自觉还是有必要先来回答另一个问题： 什么是 BPF? 笔者在前文中说过了，BP</description></item><item><title>GCC</title><link>https://justice.bj.cn/post/70.tool/gcc/</link><pubDate>Thu, 02 Jun 2022 21:57:18 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/gcc/</guid><description>GCC 简介 gcc 编译链接 编译选项 -shared ：指定生成动态链接库。 -static ：指定生成静态链接库。 -fPIC ：生成可用于共享库的位置独立代码。所有的内部寻址均通过全局偏移表完</description></item><item><title>macos日常</title><link>https://justice.bj.cn/post/70.tool/macos/</link><pubDate>Thu, 02 Jun 2022 21:57:18 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/macos/</guid><description>macos日常 samba连接慢 请进入应用程序 &amp;gt; 实用工具打开终端机。 创建空文件 /etc/nsmb.conf： sudo touch /etc/nsmb.conf 使用 vi 打开 /etc/nsmb</description></item><item><title>Rust安装配置</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 02 Jun 2022 21:57:18 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid><description>Rust安装配置 简介 rust官方提供了 安装 rust官方提供了rustup 1 2 3 4 5 6 7 8 9 10 11 12 # 安装rustup, rustc, cargo curl https://sh.rustup.rs -sSf | sh # 安装源码</description></item><item><title>Rust泛型(genric)</title><link>https://justice.bj.cn/post/14.language/rust/25.rust%E6%B3%9B%E5%9E%8Bgenric/</link><pubDate>Thu, 02 Jun 2022 21:57:18 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/25.rust%E6%B3%9B%E5%9E%8Bgenric/</guid><description>Rust泛型(genric) 简介 泛型（generic）是关于泛化类型和函数功能, 以扩大其适用范围, 泛型极大地 减少了代码的重复。 Rust泛型支</description></item><item><title>二进制手表</title><link>https://justice.bj.cn/post/leetcode/doc/401.%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%8B%E8%A1%A8/</link><pubDate>Wed, 25 May 2022 17:09:54 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/401.%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%8B%E8%A1%A8/</guid><description>二进制手表 Category Difficulty Likes Dislikes algorithms Easy (61.77%) 363 - Tags backtracking | bit-manipulation Companies google 二进制手表顶部有 4 个 LED 代表 小时（0-11），底部的 6 个 LED 代表 分钟（0-59）。每个 LED 代表一个 0 或 1，</description></item><item><title>构造 K 个回文字符串</title><link>https://justice.bj.cn/post/leetcode/doc/1400.%E6%9E%84%E9%80%A0-k-%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sun, 22 May 2022 17:42:29 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1400.%E6%9E%84%E9%80%A0-k-%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>构造 K 个回文字符串 Category Difficulty Likes Dislikes algorithms Medium (61.19%) 39 - Tags Unknown Companies Unknown 给你一个字符串 s 和一个整数 k 。请你用 s 字符串中 所有字符 构造 k 个非空 回文串 。 如果你可以用 s 中所有字</description></item><item><title>jzice-nvim</title><link>https://justice.bj.cn/post/70.tool/jzice-nvim/</link><pubDate>Sun, 22 May 2022 09:42:16 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/jzice-nvim/</guid><description>jzice-nvim Info Neovim lua config in one file.
Require neovim &amp;gt; 0.7.0 git rg Feature plugin manager: packer theme: molokai ui: startiy + nvim-tree + symbols-outline + lualine(statusline) lspconfig + lsp-installer + nvim-cmp telescope + anyjump + lspsaga hop + vim-eft nvim-autopairs nvim-notify vim-fugitive+lazygit + gitsigns &amp;hellip; Usage 1 2 3 4 1. `curl &amp;#39;https://raw.githubusercontent.com/jzice/jzice-nvim/main/lua/jzice-nvim/init.lua&amp;#39; &amp;gt; ~/.config/nvim/init.lua` 2. start nvim first to install packer auto 3.</description></item><item><title>Accumulo</title><link>https://justice.bj.cn/post/30.architech/accumulo/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/accumulo/</guid><description>Accumulo 简介 Apache Accumulo 由 NSA 开源一个可靠、可伸缩、高性能的排序分布式的 Key-Value 数据库。基于单元访问控制以及可定制的服务器端处理。Accumulo 使用 Google BigTable 设计思路</description></item><item><title>AF_XDP</title><link>https://justice.bj.cn/post/21.linux/af_xdp/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/af_xdp/</guid><description>AF_XDP 简介 AF_XDP是一种用于高性能包处理的地址簇(Address Family)。 使用XDP程序中的XDP_REDIRECT操作，可以使用bp</description></item><item><title>Alluxio</title><link>https://justice.bj.cn/post/30.architech/alluxio/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/alluxio/</guid><description>Alluxio 简介 Alluxio是一个开源的基于内存的分布式存储系统, 为计算框架和存储系统构建了桥梁，使应用程序能够通过一个公共接口连接到许多存储系统。</description></item><item><title>Anna</title><link>https://justice.bj.cn/post/30.architech/anna/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/anna/</guid><description>Anna 简介 Anna是伯克利 RISE 实验室推出了KV存储数据库，提供了惊人的存取速度、超强的伸缩性和史无前例的一致性保证。anna基于无协调 actor 模型，每个</description></item><item><title>apache arrow</title><link>https://justice.bj.cn/post/30.architech/arrow/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/arrow/</guid><description>apache arrow 简介 Apache Arrow 是一种基于内存的列式数据格式； 为了解决系统到系统之间的数据传输问题， 2016 年 2 月 Arrow 被提升为 Apache 的顶级项目。 和protobuf相比，pr</description></item><item><title>Apache Avro</title><link>https://justice.bj.cn/post/30.architech/avro/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/avro/</guid><description>Apache Avro 简介 Avro是Hadoop的一个数据序列化系统; 由Hadoop的创始人Doug Cutting（也是Lucene，Nutch等项目的创始人</description></item><item><title>Apache Hudi</title><link>https://justice.bj.cn/post/30.architech/hudi/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/hudi/</guid><description>Apache Hudi 简介 Hudi，全称是Hadoop Upsert Delete and Incremental, 最初的设计目标：在hadoop上实现update和delete操作； Hudi通过COW和MOR两</description></item></channel></rss>