<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>母亲的记忆</title><link>https://justice.bj.cn/post/09.pub/uncle/%E6%AF%8D%E4%BA%B2%E7%9A%84%E8%AE%B0%E5%BF%86/</link><pubDate>Sat, 15 Oct 2022 10:44:39 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/uncle/%E6%AF%8D%E4%BA%B2%E7%9A%84%E8%AE%B0%E5%BF%86/</guid><description>母亲的记忆 母亲留给我的记忆并不多，只是零零片片，可我觉得甚是弥足珍贵。 母亲没有为我们留下任何照片，但在我朦朦胧胧的记忆里，母亲长得很漂亮，中</description></item><item><title>哭亡兄</title><link>https://justice.bj.cn/post/09.pub/uncle/%E5%93%AD%E4%BA%A1%E5%85%84/</link><pubDate>Sat, 15 Oct 2022 10:32:56 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/uncle/%E5%93%AD%E4%BA%A1%E5%85%84/</guid><description>哭亡兄 吾兄大喜，神游仙乡; 享年七五，举家齐殇。 生于民国，少年饥荒; 幼年战乱，文革遭殃。 一生境遇，难言凄凉; 年少丧母，遇事担当。 缝补将洗，做饭</description></item><item><title>scala的monad(转)</title><link>https://justice.bj.cn/post/14.language/scala/scala%E4%B9%8Bmonad/</link><pubDate>Sat, 15 Oct 2022 10:19:58 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/scala/scala%E4%B9%8Bmonad/</guid><description>scala的monad(转) 转自我所理解的monad(1)：半群(semigroup)与幺半群(monoid) google到数学里定义的群(</description></item><item><title>Rust数据类型</title><link>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Sat, 15 Oct 2022 10:14:04 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>Rust数据类型 简介 Rust的数据类型分为标量(scalar)、复合(compound)和集合3种类型： 类型写法 描述 值举例 i8, i16, i32, i64, u8, u16, u32, u64 i</description></item><item><title>寻找两个有序数组的中位数</title><link>https://justice.bj.cn/post/leetcode/doc/4.%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link><pubDate>Sat, 15 Oct 2022 10:14:04 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/4.%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid><description>寻找两个有序数组的中位数 Category Difficulty Likes Dislikes algorithms Hard (36.85%) 2222 - Tags array | binary-search | divide-and-conquer Companies adobe | apple | dropbox | google | microsoft | yahoo | zenefits 给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。 请你找出这两</description></item><item><title>Rust安装配置</title><link>https://justice.bj.cn/post/14.language/rust/85.rust%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 25 Sep 2022 18:42:51 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/85.rust%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid><description>Rust安装配置 简介 rust官方提供了一系列工具，用于rust的开发及管理, 包括： rustup cargo 安装 rust官方提供了rustup用于rust的安装管</description></item><item><title>Rust枚举(enum)</title><link>https://justice.bj.cn/post/14.language/rust/22.rust%E6%9E%9A%E4%B8%BEenum/</link><pubDate>Sun, 25 Sep 2022 18:42:51 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/22.rust%E6%9E%9A%E4%B8%BEenum/</guid><description>Rust枚举(enum) 简介 enum是rust中用于表示同一个可能拥有可数不同状态对象的结构； enum包含枚举类型和枚举值, 枚举类型是该枚举</description></item><item><title>Rust泛型(generic)</title><link>https://justice.bj.cn/post/14.language/rust/25.rust%E6%B3%9B%E5%9E%8Bgenric/</link><pubDate>Sun, 25 Sep 2022 18:42:51 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/25.rust%E6%B3%9B%E5%9E%8Bgenric/</guid><description>Rust泛型(generic) 简介 泛型（generic）是关于泛化类型和函数功能, 以扩大其适用范围, 泛型极大地减少了代码的重复。 Rust泛型</description></item><item><title>Rust错误处理</title><link>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link><pubDate>Sun, 25 Sep 2022 18:42:51 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid><description>Rust错误处理 简介 Rust将错误分为两个主要类别： 可恢复错误（recoverable） : 由 Result&amp;lt;T, E&amp;gt; 表示，代表向用户报告错误和重试操作是合理的情</description></item><item><title>大数据技术总览</title><link>https://justice.bj.cn/post/30.architech/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%80%BB%E8%A7%88/</link><pubDate>Sun, 25 Sep 2022 18:42:51 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%80%BB%E8%A7%88/</guid><description>大数据技术总览 全貌 机器学习：Tensorflow，PyTorch，caffeine, mxnet 区块链：Etherenum，HyperLedger 图计</description></item><item><title>子树中标签相同的节点数</title><link>https://justice.bj.cn/post/leetcode/doc/1519.%E5%AD%90%E6%A0%91%E4%B8%AD%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0/</link><pubDate>Thu, 22 Sep 2022 20:04:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1519.%E5%AD%90%E6%A0%91%E4%B8%AD%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0/</guid><description>子树中标签相同的节点数 Category Difficulty Likes Dislikes algorithms Medium (31.49%) 57 - Tags Unknown Companies Unknown 给你一棵树（即，一个连通的无环无向图），这棵树由编号从 0 到 n - 1 的 n 个节点组成，且恰好有 n -</description></item><item><title>Spark 基础</title><link>https://justice.bj.cn/post/30.architech/spark/spark%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Wed, 31 Aug 2022 10:46:44 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/spark/spark%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>Spark 基础 简介 Spark 是一种快速、通用、可扩展的大数据分析引擎，2009 年诞生于加州大学伯克利分校 AMPLab，2010 年开源，2013 年 6 月成为 Apache 孵</description></item><item><title>Vega基础</title><link>https://justice.bj.cn/post/30.architech/vega%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 31 Aug 2022 10:46:44 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/vega%E5%9F%BA%E7%A1%80/</guid><description>Vega基础 简介 参考</description></item><item><title>位/字节(Bit/Byte)</title><link>https://justice.bj.cn/post/12.data_struct/01.%E6%AF%94%E7%89%B9/</link><pubDate>Wed, 31 Aug 2022 10:46:44 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/01.%E6%AF%94%E7%89%B9/</guid><description>位/字节(Bit/Byte) 简介 比特(bit) bit是内存中最小的数据单位，为一个数据位； 8个bit组成一个byte。 字节 字符串匹配 字符串转</description></item><item><title>数组</title><link>https://justice.bj.cn/post/12.data_struct/02.%E6%95%B0%E7%BB%84/</link><pubDate>Wed, 31 Aug 2022 10:46:44 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/02.%E6%95%B0%E7%BB%84/</guid><description>数组 简介 数组是同类元素的在内存中的连续存储结构。 数组中的每一个元素类型相同，所占存储空间为一个定长，因此数组中的每一个元素地址=数组头地址+</description></item><item><title>H2O 生成</title><link>https://justice.bj.cn/post/leetcode/doc/1117.h2o-%E7%94%9F%E6%88%90/</link><pubDate>Sat, 20 Aug 2022 17:48:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1117.h2o-%E7%94%9F%E6%88%90/</guid><description>H2O 生成 Category Difficulty Likes Dislikes concurrency Medium (53.24%) 117 - Tags Unknown Companies Unknown 现在有两种线程，氧 oxygen 和氢 hydrogen，你的目标是组织这两种线程来产生水分子。 存在一个屏障（barrier</description></item><item><title>Makefile</title><link>https://justice.bj.cn/post/70.tool/makefile/</link><pubDate>Sat, 20 Aug 2022 17:48:25 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/makefile/</guid><description>Makefile 简介 语法 内部变量 1 2 3 4 5 6 7 8 9 10 11 12 $@ : 规则的目标名 $% : 当目标为文件时，为目标成员名，否则为空 $&amp;lt; : 第一个依赖的文件名 $? : 所有比目标新的</description></item><item><title>openssl</title><link>https://justice.bj.cn/post/70.tool/openssl/</link><pubDate>Sat, 20 Aug 2022 17:48:25 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/openssl/</guid><description>openssl 简介 操作 1 2 3 4 5 6 7 ## 加密 echo -n &amp;#34;xxx&amp;#34; | base64 | openssl enc -aes-128-ecb -a -e -nosalt ## 解密 cat &amp;lt;&amp;lt;EOF | openssl enc -aes-128-ecb -a -d -nosalt | base64 -d yyy EOF 参考</description></item><item><title>Python量化库之efinance</title><link>https://justice.bj.cn/post/14.language/python/python%E5%BA%93%E4%B9%8Befinace/</link><pubDate>Sat, 20 Aug 2022 17:48:25 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/python/python%E5%BA%93%E4%B9%8Befinace/</guid><description>Python量化库之efinance 简介 efinance是 安装 1 $ pip install efinance 使用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import efinance as ef # 股票代码 stock_code =</description></item><item><title>Rust模块及包管理</title><link>https://justice.bj.cn/post/14.language/rust/80.rust%E5%8C%85%E7%AE%A1%E7%90%86/</link><pubDate>Sat, 20 Aug 2022 17:48:25 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/80.rust%E5%8C%85%E7%AE%A1%E7%90%86/</guid><description>Rust模块及包管理 简介 Rust程序代码组织分为三个层级： 项目(package)：一个项目工程，一个项目通常由一个cargo.toml定义，</description></item></channel></rss>