<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Bash基础</title><link>https://justice.bj.cn/post/14.language/shell/bash%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/shell/bash%E5%9F%BA%E7%A1%80/</guid><description>Bash基础 简介 特殊变量 1 2 3 4 5 6 7 $# # 参数个数 $@ # 所有参数, 每个参数分别用&amp;#34;&amp;#34;包含 $* # 所有参数，所有参数使用一个外层&amp;#</description></item><item><title>Bash最佳实践</title><link>https://justice.bj.cn/post/14.language/shell/bash%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/shell/bash%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>Bash最佳实践 基本规则 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58</description></item><item><title>hbase 配额(quota)</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E9%A2%9D/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E9%A2%9D/</guid><description>hbase 配额(quota) 启用配额 hbase-site.xml”,增加如下配置： 1 2 3 4 5 6 7 8 &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;hbase.quota.enabled&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt; &amp;lt;property&amp;gt; &amp;lt;name&amp;gt;hbase.quota.refresh.period&amp;lt;/name&amp;gt; &amp;lt;value&amp;gt;10000&amp;lt;/value&amp;gt; &amp;lt;/property&amp;gt;</description></item><item><title>Rust 数据类型</title><link>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>Rust 数据类型 简介 Rust的数据类型分为标量(scalar)类型和复合(compound)类型两类。 标量类型：表示一个单独的值，包括bool, numeirc,</description></item><item><title>Rust代码组织</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%8C%85%E7%AE%A1%E7%90%86/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%8C%85%E7%AE%A1%E7%90%86/</guid><description>Rust代码组织 简介 Rust程序代码组织分为两个层级： 包(crate)：是一个独立的可编译单元； 模块(mod)：是包内代码组织单元； 包(Cr</description></item><item><title>sed</title><link>https://justice.bj.cn/post/14.language/shell/sed/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/shell/sed/</guid><description>sed 简介 sed是unix下常用的文本处理工具之一， 常用法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43</description></item><item><title>吃掉 N 个橘子的最少天数</title><link>https://justice.bj.cn/post/leetcode/1553.%E5%90%83%E6%8E%89-n-%E4%B8%AA%E6%A9%98%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/1553.%E5%90%83%E6%8E%89-n-%E4%B8%AA%E6%A9%98%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0/</guid><description>吃掉 N 个橘子的最少天数 Category Difficulty Likes Dislikes algorithms Hard (26.35%) 96 - Tags Unknown Companies Unknown 厨房里总共有 n 个橘子，你决定每一天选择如下方式之一吃这些橘子： 吃掉一个橘子。 如果剩余橘子数 n</description></item><item><title>文件系统测试</title><link>https://justice.bj.cn/post/40.storage/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95/</guid><description>文件系统测试 简介 1 2 3 4 5 6 # 安装mpirun # wget https://download.open-mpi.org/release/open-mpi/v1.10/openmpi-1.10.7.tar.gz # ./configure --prefix=/usr/local/openmpi/ # make # make install openmpi 安装rsh 安装mpirun mdtest fio ior</description></item><item><title>详解 Kubernetes Volume 的实现原理</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s-volume/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s-volume/</guid><description>详解 Kubernetes Volume 的实现原理 在 Kubernetes 集群中，虽然无状态的服务非常常见，但是在实际的生产中仍然会需要在集群中部署一些有状态的节点，比如一些存储中间件、消息队</description></item><item><title>Golang测试</title><link>https://justice.bj.cn/post/14.language/golang/golang%E6%B5%8B%E8%AF%95/</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E6%B5%8B%E8%AF%95/</guid><description>Golang测试 简介 单元测试 1 2 3 4 5 ## 执行所有的单元测试 $ go test -v *.go ## 执行指定的单元测试用例 $ go test -v *.go -test.run TestFuncName 参考</description></item><item><title>Rust错误处理</title><link>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid><description>Rust错误处理 简介 Rust 将错误两个主要类别： 可恢复错误（recoverable） ： 由 Result&amp;lt;T, E&amp;gt; 表示，代表向用户报告错误和重试操作是合理的情况，比如未</description></item><item><title>ChubaoFS 读写分析</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E8%AF%BB%E5%86%99%E5%88%86%E6%9E%90/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E8%AF%BB%E5%86%99%E5%88%86%E6%9E%90/</guid><description>ChubaoFS 读写分析 简介 ExtentClient ExtentHandler sdk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // type ExtentClient struct { streamers map[uint64]*Streamer dataWrapper *Wrapper //... } type Streamer struct { extents *ExtentCache handler *ExtentHandler dirtylist *DirtyExtentList } type ExtentHandler struct { } Write chubaofs 客户端写操作由 1 2 3 4 5 6 7 8</description></item><item><title>Golang BTree</title><link>https://justice.bj.cn/post/14.language/golang/golang-btree.go/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang-btree.go/</guid><description>Golang BTree 1</description></item><item><title>Golang基础</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%9F%BA%E7%A1%80/</guid><description>Golang基础 简介 初始化 规则： 每个package 只会被初始化一次； 同一个 package，不同文件是按照文件名的顺序来初始化； 不能循环 import , 例</description></item><item><title>ChubaoFS 基础</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E5%9F%BA%E7%A1%80/</guid><description>ChubaoFS 基础 简介 ChubaoFS是一个开源的分布式文件存储系统，同时提供POSIX FS和S3两种访问接口。 2018年由JD TigLab开发，202</description></item><item><title>Etcd Raft</title><link>https://justice.bj.cn/post/40.storage/etcd-raft/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/etcd-raft/</guid><description>Etcd Raft 简介 参考 Raft 在 etcd 中的实现 - 喵叔没话说</description></item><item><title>ToyDB</title><link>https://justice.bj.cn/post/30.architech/toydb/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/toydb/</guid><description>ToyDB 简介 toydb是Erik Grinaker 为学习rust语言而开发的分布式sql数据库，支持分布式事务模型; 架构 toydb主要由两部分组成： toydb: 多个节点组成</description></item><item><title>AWS常用概念</title><link>https://justice.bj.cn/post/30.architech/aws-s3/aws-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/aws-s3/aws-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</guid><description>AWS常用概念 简介 每个Region都是完全独立的。每个Availability Zone都是隔离的，但是Region中的可用区通过低延迟链接连</description></item><item><title>BlobFS</title><link>https://justice.bj.cn/post/40.storage/spdk/blobfs%E6%BA%90%E7%A0%81/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/spdk/blobfs%E6%BA%90%E7%A0%81/</guid><description>BlobFS 简介 blobfs 是 spdk 中基于 blobstore 块设备实现的一个简易的文件系统。 编译 1 2 3 4 5 6 7 8 9 10 11 12 13 14 $ yum install -y libaio libaio-devel ncurses ncureses-devel CUnit fuse3 fuse3-devel jq $ pip3 install meson $ wget https://sourceforge.net/projects/cunit/files/latest/download $ git clone https://github.com/spdk/spdk $ cd spdk $ git</description></item><item><title>BlobStore</title><link>https://justice.bj.cn/post/40.storage/spdk/blobstore/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/spdk/blobstore/</guid><description>BlobStore 简介 SPDK bdev层类似于内核中的通用块设备层，是对底层不同类型设备（如NVMe bdev、Malloc bdev、AIO bdev等）的统一抽象管</description></item></channel></rss>