<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>N 皇后</title><link>https://justice.bj.cn/post/leetcode/doc/51.n-%E7%9A%87%E5%90%8E/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/51.n-%E7%9A%87%E5%90%8E/</guid><description>N 皇后 Category Difficulty Likes Dislikes algorithms Hard (74.00%) 1297 - Tags backtracking Companies Unknown n 皇后问题 研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。 给你一个整数 n ，返回所</description></item><item><title>N皇后 II</title><link>https://justice.bj.cn/post/leetcode/doc/52.n%E7%9A%87%E5%90%8E-ii/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/52.n%E7%9A%87%E5%90%8E-ii/</guid><description>N皇后 II Category Difficulty Likes Dislikes algorithms Hard (82.31%) 355 - Tags backtracking Companies zenefits n 皇后问题 研究的是如何将 n 个皇后放置在 n × n 的棋盘上，并且使皇后彼此之间不能相互攻击。 给你一个整数 n ，返回</description></item><item><title>专题：回溯法</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9814%E5%9B%9E%E6%BA%AF%E6%B3%95/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9814%E5%9B%9E%E6%BA%AF%E6%B3%95/</guid><description>专题：回溯法 简介 回溯法是归纳法的一种。其基本思想是： 基本要点 先找出一种遍历问题的合理方法； 代码模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 bool backtrace(char[]</description></item><item><title>全排列</title><link>https://justice.bj.cn/post/leetcode/doc/46.%E5%85%A8%E6%8E%92%E5%88%97/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/46.%E5%85%A8%E6%8E%92%E5%88%97/</guid><description>全排列 Category Difficulty Likes Dislikes algorithms Medium (78.41%) 1698 - Tags backtracking Companies linkedin | microsoft 给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。 示例 1： 1 2 输入：num</description></item><item><title>全排列 II</title><link>https://justice.bj.cn/post/leetcode/doc/47.%E5%85%A8%E6%8E%92%E5%88%97ii/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/47.%E5%85%A8%E6%8E%92%E5%88%97ii/</guid><description>全排列 II Category Difficulty Likes Dislikes algorithms Medium (64.55%) 1036 - Tags backtracking Companies linkedin | microsoft 给定一个可包含重复数字的序列 nums ，按任意顺序 返回所有不重复的全排列。 示例 1： 1 2 3 4 5 输入：nums = [1,1,2]</description></item><item><title>括号生成</title><link>https://justice.bj.cn/post/leetcode/doc/22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</guid><description>括号生成 Category Difficulty Likes Dislikes algorithms Medium (73.37%) 770 - Tags string | backtracking Companies google | uber | zenefits 给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。 例如，给</description></item><item><title>电话号码的字母组合</title><link>https://justice.bj.cn/post/leetcode/doc/17.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</link><pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/17.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</guid><description>电话号码的字母组合 Category Difficulty Likes Dislikes algorithms Medium (57.75%) 1863 - Tags string | backtracking Companies amazon | dropbox | facebook | google | uber 给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序</description></item><item><title>正则表达式匹配</title><link>https://justice.bj.cn/post/leetcode/doc/10.%E6%AD%A3%E5%88%99%E5%BC%8F%E5%8C%B9%E9%85%8D/</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/10.%E6%AD%A3%E5%88%99%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid><description>正则表达式匹配 Category Difficulty Likes Dislikes algorithms Hard (31.61%) 2932 - Tags string | dynamic-programming | backtracking Companies airbnb | facebook | google | twitter | uber 给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 '.' 和 '*' 的正则表达式匹配。</description></item><item><title>有效的数独</title><link>https://justice.bj.cn/post/leetcode/doc/36.%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/</link><pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/36.%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/</guid><description>有效的数独 Category Difficulty Likes Dislikes algorithms Medium (63.73%) 772 - Tags hash-table Companies apple | snapchat | uber 请你判断一个 9 x 9 的数独是否有效。只需要 根据以下规则 ，验证已经填入的数字是否有效即可。 数字 1-9 在每</description></item><item><title>解数独</title><link>https://justice.bj.cn/post/leetcode/doc/37.%E8%A7%A3%E6%95%B0%E7%8B%AC/</link><pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/37.%E8%A7%A3%E6%95%B0%E7%8B%AC/</guid><description>解数独 Category Difficulty Likes Dislikes algorithms Hard (67.05%) 1056 - Tags hash-table | backtracking Companies snapchat | uber 编写一个程序，通过填充空格来解决数独问题。 数独的解法需 遵循如下规则： 数字 1-9 在每一行只能出现一次。 数字</description></item><item><title>轮转数组</title><link>https://justice.bj.cn/post/leetcode/doc/189.%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/</link><pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/189.%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/</guid><description>轮转数组 Category Difficulty Likes Dislikes algorithms Medium (44.34%) 1453 - Tags array Companies amazon | bloomberg | microsoft 给你一个数组，将数组中的元素向右轮转 k 个位置，其中 k 是非负数。 示例 1: 1 2 3 4 5 6 输入: nums = [1,2,3,4,5,6,7], k = 3</description></item><item><title>STL容器</title><link>https://justice.bj.cn/post/14.language/c++/stl/stl%E5%AE%B9%E5%99%A8/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/c++/stl/stl%E5%AE%B9%E5%99%A8/</guid><description>STL容器 简介 容器库是类模板与算法的汇集，允许程序员简单地访问常见数据结构，例如队列、链表和栈。 有三类容器——顺序容器、关联容器和无序关联容</description></item><item><title>最长同值路径</title><link>https://justice.bj.cn/post/leetcode/doc/687.%E6%9C%80%E9%95%BF%E5%90%8C%E5%80%BC%E8%B7%AF%E5%BE%84/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/687.%E6%9C%80%E9%95%BF%E5%90%8C%E5%80%BC%E8%B7%AF%E5%BE%84/</guid><description>最长同值路径 Category Difficulty Likes Dislikes algorithms Medium (44.69%) 550 - Tags tree | recursion Companies google 给定一个二叉树的 root ，返回 最长的路径的长度 ，这个路径中的 每个节点具有相同值 。 这条路径可以经过也可以不</description></item><item><title>C++ string</title><link>https://justice.bj.cn/post/14.language/c++/c++%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/c++/c++%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>C++ string 简介 std::string C++ 字符串库支持三种通用字符串类型： std::basic_string ——为操作任何字符类型的字符串设计的模板类。 std::basic_string_view (C++17) ——对于字符串子序列的轻量无所有权的只读视图。</description></item><item><title>C++基础</title><link>https://justice.bj.cn/post/14.language/c++/c++%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/c++/c++%E5%9F%BA%E7%A1%80/</guid><description>C++基础 简介 内存分配 构造析构 默认函数(Defaulted 函数) 1 2 3 4 5 6 Object() {} //默认构造函数 ~Object() {} //析构函数 Object(const Object&amp;amp;) {} //复制构造函数 Object(Object&amp;amp;&amp;amp;) {} /</description></item><item><title>ElasticSearch 查询操作</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5/</guid><description>ElasticSearch 查询操作 简介 常用操作 清空index数据 1 2 3 4 5 6 # create index curl -X PUT http://192.168.0.10:20000/test6 --header &amp;#34;Content-Type: application/json&amp;#34; -d index.json cat index.json # delete index curl -X DELETE http://192.168.0.10:20000/test6 API 1 POST /index/_search 1.单字段查询相对简单,批量查询相当于</description></item><item><title>ElasticSearch基础</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</guid><description>ElasticSearch基础 简介 Elasticsearch 是一个基于Lucene的搜索和分析引擎; 近实时； 分布式可扩展的近实时； 架构 一个 ES Index 在集群模式下，有多个 Node</description></item><item><title>MongoDB</title><link>https://justice.bj.cn/post/30.architech/mongo/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/mongo/</guid><description>MongoDB 简介 特点 基于内存的文档数据库, NoSQL 模式自由：可以把不同结构的文档存储在同一个数据库里 面向集合的储存：适合储存JSON风格文件的形式 完整的索引</description></item><item><title>专题：经典数据结构设计</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%988%E7%BB%8F%E5%85%B8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%988%E7%BB%8F%E5%85%B8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid><description>专题：经典数据结构设计 简介 本专题包含一些经典的数据结构设计。 相关题目 题目 难度 关键思路 146.LRU缓存 ** 460.LFU缓存 *** 173.二叉搜索</description></item><item><title>从ReentrantLock的实现看AQS的原理及应用</title><link>https://justice.bj.cn/post/14.language/java/java%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/java/java%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81/</guid><description>从ReentrantLock的实现看AQS的原理及应用 2019年12月05日 作者: 李卓 文章链接 7519字 16分钟阅读 前言 Java中的大部分同</description></item></channel></rss>