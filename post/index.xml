<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>对称二叉树</title><link>https://justice.bj.cn/post/leetcode/doc/101.%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sun, 06 Aug 2023 07:33:12 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/101.%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>对称二叉树 Category Difficulty Likes Dislikes algorithms Easy (56.66%) 1665 - Tags tree | depth-first-search | breadth-first-search Companies bloomberg | linkedin | microsoft 给定一个二叉树，检查它是否是镜像对称的。 例如，二叉树 [1,2,2,3,4,4,3] 是对称的。 1 2 3 4 5 1 / \ 2 2 / \</description></item><item><title>相同的树</title><link>https://justice.bj.cn/post/leetcode/doc/100.%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91/</link><pubDate>Sun, 06 Aug 2023 07:33:12 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/100.%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91/</guid><description>相同的树 Category Difficulty Likes Dislikes algorithms Easy (59.91%) 753 - Tags tree | depth-first-search Companies bloomberg 给你两棵二叉树的根节点 p 和 q ，编写一个函数来检验这两棵树是否相同。 如果两个树在结构上相同，并且节点具有</description></item><item><title>K 个一组翻转链表</title><link>https://justice.bj.cn/post/leetcode/doc/25.k%E4%B8%AA%E4%B8%80%E7%BB%84%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/25.k%E4%B8%AA%E4%B8%80%E7%BB%84%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid><description>K 个一组翻转链表 Category Difficulty Likes Dislikes algorithms Hard (67.72%) 1967 - Tags linked-list Companies facebook | microsoft 给你链表的头节点 head ，每 k 个节点一组进行翻转，请你返回修改后的链表。 k 是一个正整数，它的值小于或</description></item><item><title>N 皇后 II</title><link>https://justice.bj.cn/post/leetcode/doc/52.n%E7%9A%87%E5%90%8Eii/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/52.n%E7%9A%87%E5%90%8Eii/</guid><description>N 皇后 II Category Difficulty Likes Dislikes algorithms Hard (82.31%) 355 - Tags backtracking Companies zenefits n 皇后问题 研究的是如何将 n 个皇后放置在 n × n 的棋盘上，并且使皇后彼此之间不能相互攻击。 给你一个整数 n ，返回</description></item><item><title>Pow(x, n)</title><link>https://justice.bj.cn/post/leetcode/doc/50.pow/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/50.pow/</guid><description>Pow(x, n) Category Difficulty Likes Dislikes algorithms Medium (37.83%) 944 - Tags math | binary-search Companies bloomberg | facebook | google | linkedin 实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn ）。 示例 1： 1 2 输入：x = 2.00000, n = 10 输出：1024.00</description></item><item><title>不同路径 II</title><link>https://justice.bj.cn/post/leetcode/doc/63.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84ii/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/63.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84ii/</guid><description>不同路径 II Category Difficulty Likes Dislikes algorithms Medium (39.93%) 766 - Tags array | dynamic-programming Companies bloomberg 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向</description></item><item><title>两两交换链表中的节点</title><link>https://justice.bj.cn/post/leetcode/doc/24.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/24.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid><description>两两交换链表中的节点 Category Difficulty Likes Dislikes algorithms Medium (71.30%) 1773 - Tags linked-list Companies bloomberg | microsoft | uber 给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部</description></item><item><title>两数之和</title><link>https://justice.bj.cn/post/leetcode/doc/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>两数之和 Category Difficulty Likes Dislikes algorithms Easy (47.03%) 6994 - Tags array | hash-table Companies adobe | airbnb | amazon | apple | bloomberg | dropbox | facebook | linkedin | microsoft | uber | yahoo | yelp 给定一个整数数组 nums 和一个整数目标值 target，请你在该数</description></item><item><title>两数相除</title><link>https://justice.bj.cn/post/leetcode/doc/29.%E4%B8%A4%E6%95%B0%E7%9B%B8%E9%99%A4/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/29.%E4%B8%A4%E6%95%B0%E7%9B%B8%E9%99%A4/</guid><description>两数相除 Category Difficulty Likes Dislikes algorithms Medium (22.21%) 1147 - Tags math | binary-search Companies Unknown 给你两个整数，被除数 dividend 和除数 divisor。将两数相除，要求 不使用 乘法、除法和取余运算。 整数除法应该向</description></item><item><title>二叉树的中序遍历</title><link>https://justice.bj.cn/post/leetcode/doc/94.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/94.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>二叉树的中序遍历 Category Difficulty Likes Dislikes algorithms Medium (68.96%) 339 - Tags Companies 给定一个二叉树，返回它的*中序 *遍历。 示例: 1 2 3 4 5 6 7 8 输入: [1,null,2,3] 1 \ 2 / 3 输出: [1,3,2] 进阶: 递归算法很</description></item><item><title>全排列 II</title><link>https://justice.bj.cn/post/leetcode/doc/47.%E5%85%A8%E6%8E%92%E5%88%97ii/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/47.%E5%85%A8%E6%8E%92%E5%88%97ii/</guid><description>全排列 II Category Difficulty Likes Dislikes algorithms Medium (64.55%) 1036 - Tags backtracking Companies linkedin | microsoft 给定一个可包含重复数字的序列 nums ，按任意顺序 返回所有不重复的全排列。 示例 1： 1 2 3 4 5 输入：nums = [1,1,2]</description></item><item><title>删除排序链表中的重复元素</title><link>https://justice.bj.cn/post/leetcode/doc/83.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0i/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/83.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0i/</guid><description>删除排序链表中的重复元素 Category Difficulty Likes Dislikes algorithms Easy (49.10%) 260 - Tags linked-list Companies Unknown 给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。 示例 1: 1 2 输入: 1-&amp;gt;1-&amp;gt;2 输出: 1-&amp;gt;2 示</description></item><item><title>删除有序数组中的重复项</title><link>https://justice.bj.cn/post/leetcode/doc/26.%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/26.%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</guid><description>删除有序数组中的重复项 Category Difficulty Likes Dislikes algorithms Easy (54.69%) 3086 - Tags array | two-pointers Companies bloomberg | facebook | microsoft 给你一个 升序排列 的数组 nums ，请你**原地** 删除重复出现的元素，使每个元素 **只出</description></item><item><title>删除链表的倒数第 N 个结点</title><link>https://justice.bj.cn/post/leetcode/doc/19.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E7%BB%93%E7%82%B9/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/19.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E7%BB%93%E7%82%B9/</guid><description>删除链表的倒数第 N 个结点 Category Difficulty Likes Dislikes algorithms Medium (45.32%) 2477 - Tags linked-list | two-pointers Companies Unknown 给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。 示例 1： 1 2 输入：hea</description></item><item><title>反转链表 II</title><link>https://justice.bj.cn/post/leetcode/doc/92.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8ii/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/92.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8ii/</guid><description>反转链表 II Category Difficulty Likes Dislikes algorithms Medium (49.10%) 304 - Tags linked-list Companies Unknown 反转从位置 m 到 n 的链表。请使用一趟扫描完成反转。 说明: 1 ≤ m ≤ n ≤ 链表长度。 示例: 1 2 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL, m = 2, n =</description></item><item><title>合并 K 个升序链表</title><link>https://justice.bj.cn/post/leetcode/doc/23.%E5%90%88%E5%B9%B6k%E4%B8%AA%E5%8D%87%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/23.%E5%90%88%E5%B9%B6k%E4%B8%AA%E5%8D%87%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>合并 K 个升序链表 Category Difficulty Likes Dislikes algorithms Hard (57.61%) 2366 - Tags linked-list | divide-and-conquer | heap Companies airbnb | amazon | facebook | google | linkedin | microsoft | twitter | uber 给你一个链表数组，每个链表都已经按升序排列。 请你将所有链表合并</description></item><item><title>合并两个有序链表</title><link>https://justice.bj.cn/post/leetcode/doc/21.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/21.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>合并两个有序链表 Category Difficulty Likes Dislikes algorithms Easy (58.43%) 744 - **Tags****Companies** 将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 示例： 1 2 输</description></item><item><title>四数之和</title><link>https://justice.bj.cn/post/leetcode/doc/18.%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/18.%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>四数之和 Category Difficulty Likes Dislikes algorithms Medium (36.88%) 1691 - Tags array | hash-table | two-pointers Companies linkedin 给你一个由 n 个整数组成的数组 nums ，和一个目标值 target 。请你找出并返回满足下述全部条件且不重复的四元组 [nums[a], nums[b],</description></item><item><title>回文数</title><link>https://justice.bj.cn/post/leetcode/doc/9.%E5%9B%9E%E6%96%87%E6%95%B0/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/9.%E5%9B%9E%E6%96%87%E6%95%B0/</guid><description>回文数 Category Difficulty Likes Dislikes algorithms Easy (57.09%) 946 - Tags math Companies Unknown 判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 示例 1: 1 2 输入: 121 输</description></item><item><title>外观数列</title><link>https://justice.bj.cn/post/leetcode/doc/38.%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/38.%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</guid><description>外观数列 Category Difficulty Likes Dislikes algorithms Medium (59.80%) 869 - Tags string Companies facebook 给定一个正整数 n ，输出外观数列的第 n 项。 「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一</description></item></channel></rss>