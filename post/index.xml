<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>BIOS</title><link>https://justice.bj.cn/post/70.tool/boot/bios/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/boot/bios/</guid><description>BIOS 简介 BlOS（Basic Input Output System）称为“基本输出输入系统”，是用于为操作系统和程序提供运行时服务以及在启动过程（开机启动）期间执行</description></item><item><title>Boot</title><link>https://justice.bj.cn/post/70.tool/boot/boot/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/boot/boot/</guid><description>Boot 简介 计算机系统的启动过程称为boot。 参考</description></item><item><title>grub</title><link>https://justice.bj.cn/post/70.tool/boot/grub/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/boot/grub/</guid><description>grub 简介 1. 安装grub 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ## 挂载u盘 [linux-host]$ sudo mount /dev/&amp;lt;udisk&amp;gt; /mnt/udisk1 ## 在u盘中创建boot目录 [linux-host]$ mkdir -p /mnt/udisk1/boot ## 安装grub2引导头 ## grub [linux-host]$ sudo grub-install --boot-directory=/mnt/udisk1/boot /dev/&amp;lt;udisk&amp;gt;</description></item><item><title>Rust基础</title><link>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</guid><description>Rust基础 简介 Rust是由Graydon Hoare于2009年发起的一门系统级、编译型编程语言，其设计准则为“安全，并发，实用”，支持函数</description></item><item><title>Rust数据类型</title><link>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>Rust数据类型 简介 Rust的数据类型分为标量(scalar)、复合(compound)和集合3种类型： 类型写法 描述 值举例 i8, i16, i32, i64, u8, u16, u32, u64 i</description></item><item><title>Rust测试</title><link>https://justice.bj.cn/post/14.language/rust/rust%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E6%B5%8B%E8%AF%95/</guid><description>Rust测试 简介 Rust测试包括单元测试、集成测试、文档测试和性能测试； 单元测试一般和相应的源码位于同一个源文件中； 单元测试mod上一般增加</description></item><item><title>syslinux</title><link>https://justice.bj.cn/post/70.tool/boot/syslinux/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/boot/syslinux/</guid><description>syslinux 简介 syslinux是一个linux启动加载程序，可以运行在msdos/fat文件系统中，用于简化linux首次安装、创建或恢复及其他用处</description></item><item><title>Ventoy</title><link>https://justice.bj.cn/post/70.tool/boot/ventoy/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/boot/ventoy/</guid><description>Ventoy 简介 ventoy是一个开源的u盘启动引导工具。 参考</description></item><item><title>区块链-POS共识机制</title><link>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE-pos%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE-pos%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6/</guid><description>区块链-POS共识机制 简介 PoS(Proof of Stake，权益证明), 最早由点点币的创始人Sunny King提出，目的是为了解决使用PoW挖矿出现大量资源浪</description></item><item><title>基于Rust-vmm实现Kubernetes运行时</title><link>https://justice.bj.cn/post/32.cloudnative/%E5%9F%BA%E4%BA%8Erust-vmm%E5%AE%9E%E7%8E%B0kubernetes%E8%BF%90%E8%A1%8C%E6%97%B6/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/32.cloudnative/%E5%9F%BA%E4%BA%8Erust-vmm%E5%AE%9E%E7%8E%B0kubernetes%E8%BF%90%E8%A1%8C%E6%97%B6/</guid><description>基于Rust-vmm实现Kubernetes运行时 随着容器及K8s的广泛使用，越来越多的容器安全与隔离问题被暴露出来，如：容器逃逸、水平攻击</description></item><item><title>硬盘分区结构mbr和gpt</title><link>https://justice.bj.cn/post/70.tool/boot/mbr%E5%92%8Cgpt/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/boot/mbr%E5%92%8Cgpt/</guid><description>硬盘分区结构mbr和gpt 简介 硬盘是一个逻辑上的连续顺序存储介质，为了对硬盘上的存储空间进行管理，一般会对硬盘建立不同的分区，每个分区是一个</description></item><item><title>Qemu</title><link>https://justice.bj.cn/post/70.tool/qemu/</link><pubDate>Mon, 13 Feb 2023 19:49:11 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/qemu/</guid><description>Qemu 简介 安装 1 2 3 4 5 6 7 ## 安装virt-manager $ brew install libvirt $ brew tap arthurk/homebrew-virt-manager $ brew install virt-manager virt-viewer ## 启动 $ brew services start libvirt 用法 1 $ qemu-system-x86_64 -drive format=raw,file=x86-64.img 参考 https://www.arthurkoziel.com/running-virt-manager-and-libvirt-on-macos/</description></item><item><title>Yarn</title><link>https://justice.bj.cn/post/70.tool/yarn/</link><pubDate>Sun, 12 Feb 2023 18:40:04 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/yarn/</guid><description>Yarn 简介 配置 配置镜像源 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ## 安装yrm，nrm $ npm install -g yrm --registry https://registry.npm.taobao.org/ $ npm install -g nrm --registry https://registry.npm.taobao.org/ ## 查看registry $ yrm ls npm ----- https://registry.npmjs.org/ cnpm ---- http://r.cnpmjs.org/</description></item><item><title>三数之和的多种可能</title><link>https://justice.bj.cn/post/leetcode/doc/923.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%8F%AF%E8%83%BD/</link><pubDate>Sun, 12 Feb 2023 18:40:04 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/923.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%8F%AF%E8%83%BD/</guid><description>三数之和的多种可能 Category Difficulty Likes Dislikes algorithms Medium (36.28%) 111 - Tags math | binary-search | dynamic-programming Companies Unknown 给定一个整数数组 arr ，以及一个整数 target 作为目标值，返回满足 i &amp;lt; j &amp;lt; k 且 arr[i] + arr[j] + arr[k] == target 的元组 i,</description></item><item><title>AList</title><link>https://justice.bj.cn/post/70.tool/alist/</link><pubDate>Thu, 09 Feb 2023 08:19:52 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/alist/</guid><description>AList 简介 常用公开alist https://dl.jsoo.cc/ alist v3 https://archive.etoiles.me/ alist v3 http://960303.xyz alist v2 http://ali.i.chuguang.pro v3 参考</description></item><item><title>Openwrt</title><link>https://justice.bj.cn/post/70.tool/openwrt/</link><pubDate>Thu, 09 Feb 2023 08:19:52 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/openwrt/</guid><description>Openwrt 简介 小米路由mini安装 步骤 升级到开发版固件 解锁ssh； 刷入breed 引导固件； 使用breed引导固件刷入openwrt系统； openwr</description></item><item><title>Rust宏</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%AE%8F/</link><pubDate>Thu, 09 Feb 2023 08:19:52 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%AE%8F/</guid><description>Rust宏 简介 卫生宏，编译器或运行时会保证宏里面定义的变量或函数不会与外面的冲突，在宏里面以普通方式定义的变量作用域不会跑到宏外面。 rust</description></item><item><title>多CPU处理架构</title><link>https://justice.bj.cn/post/21.linux/%E5%A4%9Acpu%E5%A4%84%E7%90%86%E6%9E%B6%E6%9E%84/</link><pubDate>Thu, 09 Feb 2023 08:19:52 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/%E5%A4%9Acpu%E5%A4%84%E7%90%86%E6%9E%B6%E6%9E%84/</guid><description>多CPU处理架构 简介 多cpu系统架构上大概分为三种： SMP(Symmetric Multi Processing): 对称多处理器，所有cpu都是对等的, 一起共享全部资源，如总线，内存和I/O系统等;</description></item><item><title>基数排序</title><link>https://justice.bj.cn/post/13.algorithm/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</link><pubDate>Sat, 10 Dec 2022 15:56:56 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</guid><description>基数排序 简介 基数排序（Radix sort）是一种非比较型整数排序算法。 基本思想 原理是将整数按位数切割成不同的数字，然后按每个位数分别比较。基</description></item><item><title>排序算法总结</title><link>https://justice.bj.cn/post/13.algorithm/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 10 Dec 2022 15:56:56 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid><description>排序算法总结 概述 排序是最基础算法之一。 分类 十种常见排序算法可以分为两大类： 比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突</description></item></channel></rss>