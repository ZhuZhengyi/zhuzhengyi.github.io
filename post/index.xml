<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>CubeFS-BlobStore</title><link>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore/</guid><description>CubeFS-BlobStore 简介 CubeFS-BlobStore是一个高可靠、高可用、低成本、支持超大规模(EB)的分布式存储系统。采用纠删码中的Reed-Solom</description></item><item><title>ElasticSearch基础</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</guid><description>ElasticSearch基础 简介 Elasticsearch 是一个基于lucene的分布式可扩展的近实时搜索和分析引擎。 架构 一个 ES Index 在集群模式下，有多个 Node （节点）组</description></item><item><title>Golang之interface</title><link>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Binterface/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Binterface/</guid><description>Golang之interface 简介 接口是一个或多个方法签名的集合 只要某个类型拥有该接口的所有方法签名，即算实现该接口，无需显示声明实现了哪</description></item><item><title>Kafka</title><link>https://justice.bj.cn/post/30.architech/kafka/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/kafka/</guid><description>Kafka 简介 Kafka是由Linkedin公司开发的分布式、支持分区（partition）、多副本（replica），基于zookeeper的分布</description></item><item><title>Prometheus基础</title><link>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E5%9F%BA%E7%A1%80/</guid><description>Prometheus基础 简介 Prometheus(普罗米修斯)受启发于Google的Brogmon监控系统，是继Kubernetes之后成为</description></item><item><title>Prometheus直方图</title><link>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E4%B9%8B%E7%9B%B4%E6%96%B9%E5%9B%BE/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E4%B9%8B%E7%9B%B4%E6%96%B9%E5%9B%BE/</guid><description>Prometheus直方图 简介 prometheus中的histogram是用来设置直方图指标的； histogram指标是为了消除指标采样中的</description></item><item><title>Prometheus配置</title><link>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E9%85%8D%E7%BD%AE/</guid><description>Prometheus配置 简介 Prometheus受启发于Google的Brogmon监控系统（相似的Kubernetes是从Google的B</description></item><item><title>RCFile</title><link>https://justice.bj.cn/post/30.architech/rcfile/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/rcfile/</guid><description>RCFile 简介 RCFile文件格式是FaceBook开源的一种Hive的文件存储格式，首先将表分为几个行组，对每个行组内的数据进行按列存储，每一列的</description></item><item><title>纠删码(ErasureCode)</title><link>https://justice.bj.cn/post/13.algorithm/erasurecode/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/13.algorithm/erasurecode/</guid><description>纠删码(ErasureCode) 简介 纠删码是通过利用纠删码算法将原始的数据进行编码得到校验，并将数据和校验一并存储起来，以达到容错的目的; 其</description></item><item><title>Golang 内存管理</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid><description>Golang 内存管理 简介 Golang内存管理采用类似tcmalloc的分级分配算法，主要由MHeap、MCentral、MCache 3 级组成。按分配对</description></item><item><title>Golang之syscall</title><link>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bsyscall/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bsyscall/</guid><description>Golang之syscall 简介 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 ┌ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─</description></item><item><title>MySQL</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql%E5%9F%BA%E7%A1%80/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/mysql/mysql%E5%9F%BA%E7%A1%80/</guid><description>MySQL 简介 特点 设计范式 1NF: 原子性，保证每列不可再分, 保证表中无表； 2NF: 消除部分依赖，在满足1NF上，每个属性完全依赖于主键； 3NF: 消除传递依赖，在满足2</description></item><item><title>专题：二叉树</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%981%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9B%B8%E5%85%B3/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%981%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9B%B8%E5%85%B3/</guid><description>专题：二叉树 简介 二叉树是一个递归的结构 相关题目 题目 难度 解题思路 94.二叉树的中序遍历 ** 递归，栈 100.相同的树 ** 101.对称二叉树 * 102.</description></item><item><title>二叉搜索树的最近公共祖先</title><link>https://justice.bj.cn/post/leetcode/doc/235.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/235.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid><description>二叉搜索树的最近公共祖先 Category Difficulty Likes Dislikes algorithms Easy (66.85%) 743 - Tags tree Companies amazon | facebook | microsoft | twitter 给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。 百度百科中最近公共祖</description></item><item><title>二叉树的最小深度</title><link>https://justice.bj.cn/post/leetcode/doc/111.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/111.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6/</guid><description>二叉树的最小深度 Category Difficulty Likes Dislikes algorithms Easy (49.24%) 656 - Tags tree | depth-first-search | breadth-first-search Companies Unknown 给定一个二叉树，找出其最小深度。 最小深度是从根节点到最近叶子节点的最短路径上的节点数量。 *</description></item><item><title>删除链表中的节点</title><link>https://justice.bj.cn/post/leetcode/doc/237.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/237.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid><description>删除链表中的节点 Category Difficulty Likes Dislikes algorithms Easy (85.71%) 1086 - Tags linked-list Companies adobe | apple | microsoft 请编写一个函数，用于 删除单链表中某个特定节点 。在设计函数时需要注意，你无法访问链表的头节点</description></item><item><title>另一棵树的子树</title><link>https://justice.bj.cn/post/leetcode/doc/527.%E5%8F%A6%E4%B8%80%E6%A3%B5%E6%A0%91%E7%9A%84%E5%AD%90%E6%A0%91/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/527.%E5%8F%A6%E4%B8%80%E6%A3%B5%E6%A0%91%E7%9A%84%E5%AD%90%E6%A0%91/</guid><description>另一棵树的子树 Category Difficulty Likes Dislikes algorithms Easy (47.45%) 629 - Tags tree Companies ebay | facebook | google 给你两棵二叉树 root 和 subRoot 。检验 root 中是否包含和 subRoot 具有相同结构和节点值的子树。如果存在，返回 true ；否则</description></item><item><title>平衡二叉树</title><link>https://justice.bj.cn/post/leetcode/doc/110.%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/110.%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>平衡二叉树 Category Difficulty Likes Dislikes algorithms Easy (56.52%) 872 - Tags tree | depth-first-search Companies bloomberg 给定一个二叉树，判断它是否是高度平衡的二叉树。 本题中，一棵高度平衡二叉树定义为： 一个二叉树每个节点 的</description></item><item><title>翻转二叉树</title><link>https://justice.bj.cn/post/leetcode/doc/226.%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Tue, 25 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/226.%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>翻转二叉树 Category Difficulty Likes Dislikes algorithms Easy (78.84%) 1145 - Tags tree Companies Unknown 翻转一棵二叉树。 示例： 输入： 1 2 3 4 5 4 / \ 2 7 / \ / \ 1 3 6 9 输出： 1 2 3 4 5 4 / \ 7 2 / \ / \ 9 6 3</description></item><item><title>专题：买卖股票</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%985%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8/</link><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%985%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8/</guid><description>专题：买卖股票 简介 相关题目 买卖股票最佳时机（1次买卖机会） 买卖股票最佳时机II（不限次数买卖机会） 买卖股票最佳时机III（限2次）</description></item></channel></rss>