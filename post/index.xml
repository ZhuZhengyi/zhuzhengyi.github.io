<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>ChubaoFS 基础</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E5%9F%BA%E7%A1%80/</guid><description>ChubaoFS 基础 简介 ChubaoFS是一个开源的分布式文件存储系统，同时提供POSIX FS和S3两种访问接口。 2018年由JD TigLab开发，202</description></item><item><title>Etcd Raft</title><link>https://justice.bj.cn/post/40.storage/etcd-raft/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/etcd-raft/</guid><description>Etcd Raft 简介 参考 Raft 在 etcd 中的实现 - 喵叔没话说</description></item><item><title>Golang基础</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%9F%BA%E7%A1%80/</guid><description>Golang基础 简介 初始化 规则： 每个package 只会被初始化一次； 同一个 package，不同文件是按照文件名的顺序来初始化； 不能循环 import , 例</description></item><item><title>Raft算法</title><link>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/raft%E7%AE%97%E6%B3%95/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/raft%E7%AE%97%E6%B3%95/</guid><description>Raft算法 简介 Raft算法是2013年斯坦福大学的Diego Ongaro、John Ousterhout 两人发布的一致性算法，论文：《In Search of an Understandable Consensus Algor</description></item><item><title>Rust 基础</title><link>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</guid><description>Rust 基础 简介 Rust是由Graydon Hoare于2009年发起的一门系统级、编译型编程语言，其设计准则为“安全，并发，实用”，支持函数式，并</description></item><item><title>Rust迭代器</title><link>https://justice.bj.cn/post/14.language/rust/rust%E8%BF%AD%E4%BB%A3%E5%99%A8/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid><description>Rust迭代器 简介 迭代器(Iterator)负责遍历序列中的每一项和决定序列何时结束的逻辑; 迭代器是 惰性的（lazy）; Iterator的定</description></item><item><title>Rust错误处理</title><link>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid><description>Rust错误处理 简介 Rust 将错误两个主要类别： 可恢复错误（recoverable） ： 由 Result&amp;lt;T, E&amp;gt; 表示，代表向用户报告错误和重试操作是合理的情况，比如未</description></item><item><title>SaltStack</title><link>https://justice.bj.cn/post/70.tool/saltstack/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/70.tool/saltstack/</guid><description>SaltStack 简介 Salt是一个使用Python开发的，非常简单易用和轻量级的管理工具。由Master和Minion构成，通过ZeroMQ进行通信。 核心</description></item><item><title>ToyDB</title><link>https://justice.bj.cn/post/30.architech/toydb/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/toydb/</guid><description>ToyDB 简介 toydb是Erik Grinaker 为学习rust语言而开发的分布式sql数据库，支持分布式事务模型; 架构 toydb主要由两部分组成： toydb: 多个节点组成</description></item><item><title>AWS常用概念</title><link>https://justice.bj.cn/post/30.architech/aws-s3/aws-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/aws-s3/aws-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</guid><description>AWS常用概念 简介 每个Region都是完全独立的。每个Availability Zone都是隔离的，但是Region中的可用区通过低延迟链接连</description></item><item><title>BlobFS</title><link>https://justice.bj.cn/post/40.storage/spdk/blobfs%E6%BA%90%E7%A0%81/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/spdk/blobfs%E6%BA%90%E7%A0%81/</guid><description>BlobFS 简介 blobfs 是 spdk 中基于 blobstore 块设备实现的一个简易的文件系统。 编译 1 2 3 4 5 6 7 8 9 10 11 12 13 14 $ yum install -y libaio libaio-devel ncurses ncureses-devel CUnit fuse3 fuse3-devel jq $ pip3 install meson $ wget https://sourceforge.net/projects/cunit/files/latest/download $ git clone https://github.com/spdk/spdk $ cd spdk $ git</description></item><item><title>BlobStore</title><link>https://justice.bj.cn/post/40.storage/spdk/blobstore/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/spdk/blobstore/</guid><description>BlobStore 简介 SPDK bdev层类似于内核中的通用块设备层，是对底层不同类型设备（如NVMe bdev、Malloc bdev、AIO bdev等）的统一抽象管</description></item><item><title>BlueStore</title><link>https://justice.bj.cn/post/40.storage/ceph/ceph-bluestore/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/ceph/ceph-bluestore/</guid><description>BlueStore 简介 Ceph早期的单机对象存储引擎是FileStore，为了维护数据的一致性，写入之前数据会先写Journal，然后再写到文件系统，会有一</description></item><item><title>BookKeeper</title><link>https://justice.bj.cn/post/30.architech/bookkeeper/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/bookkeeper/</guid><description>BookKeeper 简介 BookKeeper是一个可靠的日志流记录系统，用于将系统产生的日志(也可以是其他数据)记录在BookKeeper集群上，由BookK</description></item><item><title>Cap'n Proto</title><link>https://justice.bj.cn/post/12.data_struct/capn-proto/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/12.data_struct/capn-proto/</guid><description>Cap&amp;rsquo;n Proto 简介 Cap’n Proto 是非常快速的数据交换格式和基于容量的 RPC 系统， Cap&amp;rsquo;n Proto没有任何encoding/decoding步骤，Cap&amp;rsqu</description></item><item><title>Ceph基础</title><link>https://justice.bj.cn/post/40.storage/ceph/ceph/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/ceph/ceph/</guid><description>Ceph基础 简介 Ceph 最初是一项关于存储系统的 PhD 研究项目，由 Sage Weil 在 University of California, Santa Cruz（UCSC）实施。 特性 优点 Ceph支持对象存储、块存储和文件存</description></item><item><title>Docker</title><link>https://justice.bj.cn/post/32.cloudnaive/docker%E7%AE%80%E4%BB%8B/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/docker%E7%AE%80%E4%BB%8B/</guid><description>Docker 简介 docker是一个开源的应用容器引擎，基于go语言开发并遵循了apache2.0协议开源。 docker可以让开发者打包他们的应用以及依</description></item><item><title>Elasticsearch内核解析 - 查询篇</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E8%AF%BB%E6%B5%81%E7%A8%8B/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E8%AF%BB%E6%B5%81%E7%A8%8B/</guid><description>Elasticsearch内核解析 - 查询篇 读操作 实时性和《Elasticsearch内核解析 - 写入篇》中的“写操作”一样，对于搜索而言是近实</description></item><item><title>Elasticsearch写流程</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%99%E5%85%A5%E6%B5%81%E7%A8%8B/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%99%E5%85%A5%E6%B5%81%E7%A8%8B/</guid><description>Elasticsearch写流程 lucene的写操作及其问题 Elasticsearch底层使用Lucene来实现doc的读写操作，Lucen</description></item><item><title>ElasticSearch基础</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/elasticsearch%E5%9F%BA%E7%A1%80/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/elasticsearch%E5%9F%BA%E7%A1%80/</guid><description>ElasticSearch基础 简介 Elasticsearch 是一个基于lucene的分布式可扩展的实时搜索和分析引擎。 特点 分布式存储 近实时检索 核心概念 索引(inde</description></item></channel></rss>