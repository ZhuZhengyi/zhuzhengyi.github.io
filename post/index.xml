<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>STL容器</title><link>https://justice.bj.cn/post/14.language/c++/stl/stl%E5%AE%B9%E5%99%A8/</link><pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/c++/stl/stl%E5%AE%B9%E5%99%A8/</guid><description>STL容器 简介 容器库是类模板与算法的汇集，允许程序员简单地访问常见数据结构，例如队列、链表和栈。 有三类容器——顺序容器、关联容器和无序关联容</description></item><item><title>最长同值路径</title><link>https://justice.bj.cn/post/leetcode/doc/687.%E6%9C%80%E9%95%BF%E5%90%8C%E5%80%BC%E8%B7%AF%E5%BE%84/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/687.%E6%9C%80%E9%95%BF%E5%90%8C%E5%80%BC%E8%B7%AF%E5%BE%84/</guid><description>最长同值路径 Category Difficulty Likes Dislikes algorithms Medium (44.69%) 550 - Tags tree | recursion Companies google 给定一个二叉树的 root ，返回 最长的路径的长度 ，这个路径中的 每个节点具有相同值 。 这条路径可以经过也可以不</description></item><item><title>C++ string</title><link>https://justice.bj.cn/post/14.language/c++/c++%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/c++/c++%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>C++ string 简介 std::string C++ 字符串库支持三种通用字符串类型： std::basic_string ——为操作任何字符类型的字符串设计的模板类。 std::basic_string_view (C++17) ——对于字符串子序列的轻量无所有权的只读视图。</description></item><item><title>C++基础</title><link>https://justice.bj.cn/post/14.language/c++/c++%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/c++/c++%E5%9F%BA%E7%A1%80/</guid><description>C++基础 简介 内存分配 构造析构 默认函数(Defaulted 函数) 1 2 3 4 5 6 Object() {} //默认构造函数 ~Object() {} //析构函数 Object(const Object&amp;amp;) {} //复制构造函数 Object(Object&amp;amp;&amp;amp;) {} /</description></item><item><title>ElasticSearch 查询操作</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5/</guid><description>ElasticSearch 查询操作 简介 常用操作 清空index数据 1 2 3 4 5 6 # create index curl -X PUT http://192.168.0.10:20000/test6 --header &amp;#34;Content-Type: application/json&amp;#34; -d index.json cat index.json # delete index curl -X DELETE http://192.168.0.10:20000/test6 API 1 POST /index/_search 1.单字段查询相对简单,批量查询相当于</description></item><item><title>ElasticSearch基础</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</guid><description>ElasticSearch基础 简介 Elasticsearch 是一个基于Lucene的搜索和分析引擎; 近实时； 分布式可扩展的近实时； 架构 一个 ES Index 在集群模式下，有多个 Node</description></item><item><title>MongoDB</title><link>https://justice.bj.cn/post/30.architech/mongo/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/mongo/</guid><description>MongoDB 简介 特点 基于内存的文档数据库, NoSQL 模式自由：可以把不同结构的文档存储在同一个数据库里 面向集合的储存：适合储存JSON风格文件的形式 完整的索引</description></item><item><title>专题：经典数据结构设计</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%988%E7%BB%8F%E5%85%B8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%988%E7%BB%8F%E5%85%B8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid><description>专题：经典数据结构设计 简介 本专题包含一些经典的数据结构设计。 相关题目 题目 难度 关键思路 146.LRU缓存 ** 460.LFU缓存 *** 173.二叉搜索</description></item><item><title>从ReentrantLock的实现看AQS的原理及应用</title><link>https://justice.bj.cn/post/14.language/java/java%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/java/java%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81/</guid><description>从ReentrantLock的实现看AQS的原理及应用 2019年12月05日 作者: 李卓 文章链接 7519字 16分钟阅读 前言 Java中的大部分同</description></item><item><title>C++11</title><link>https://justice.bj.cn/post/14.language/c++/c++11/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/c++/c++11/</guid><description>C++11 左值与右值 可以取地址的，有名字的，非临时的就是左值； 不能取地址的，没有名字的，临时的就是右值； thread_local thread_local 变量是 C++ 11 新引入的一种存储类型,这些变量</description></item><item><title>ES之SQL</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E4%B9%8Bsql/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E4%B9%8Bsql/</guid><description>ES之SQL 简介 使用 1 2 3 4 5 6 7 8 9 10 11 # 查看所有的table POST /_sql?format=txt { &amp;#34;query&amp;#34;: &amp;#34;SHOW TABLES&amp;#34; } # SQL -&amp;gt; DSL POST /_sql/translate { &amp;#34;query&amp;#34;: &amp;#34;SELECT account_number,address,age,balance FROM account WHERE age&amp;gt;32 LIMIT 10&amp;#34; } 参考 https://segmentfault.com/a/1190000038394618</description></item><item><title>Java锁</title><link>https://justice.bj.cn/post/14.language/java/java%E9%94%81/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/java/java%E9%94%81/</guid><description>Java锁 简介 Synchronized synchronized是悲观锁； synchronized通过java对象头中的monitor来实现线程同步； Monitor</description></item><item><title>LRU缓存机制</title><link>https://justice.bj.cn/post/leetcode/doc/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid><description>LRU缓存机制 Category Difficulty Likes Dislikes algorithms Medium (44.70%) 332 - Tags design Companies amazon | bloomberg | facebook | google | microsoft | palantir | snapchat | twitter | uber | yahoo | zenefits 运用你所掌握的数据结构，设计和实现一个 LRU (最近最少使用) 缓存</description></item><item><title>STL迭代器</title><link>https://justice.bj.cn/post/14.language/c++/stl/stl%E8%BF%AD%E4%BB%A3%E5%99%A8/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/c++/stl/stl%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid><description>STL迭代器 简介 STL迭代器为STL容器提供遍历相关的操作的统一接口 参考 cppreferenc.com迭代器库</description></item><item><title>专题：动态规划</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9810-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><pubDate>Tue, 12 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9810-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid><description>专题：动态规划 简介 动态规划问题的难点在于对问题进行合理划分，将大问题转变为小问题的组合，形成递推关系，通过归纳法将问题得到解决； 动态规划最关</description></item><item><title>专题：括号问题</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9813%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</link><pubDate>Tue, 12 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9813%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</guid><description>专题：括号问题 简介 相关题目 20.有效括号 22.括号生成 32.最长有效括号</description></item><item><title>LFU缓存</title><link>https://justice.bj.cn/post/leetcode/doc/460.lfu%E7%BC%93%E5%AD%98/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/460.lfu%E7%BC%93%E5%AD%98/</guid><description>LFU缓存 Category Difficulty Likes Dislikes algorithms Hard (34.03%) 81 - Tags design Companies amazon | google 设计并实现最不经常使用（LFU）缓存的数据结构。它应该支持以下操作：get 和 put。 get(key) - 如果键存在于</description></item><item><title>二叉搜索树迭代器</title><link>https://justice.bj.cn/post/leetcode/doc/173.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/173.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid><description>二叉搜索树迭代器 Category Difficulty Likes Dislikes algorithms Medium (80.79%) 582 - Tags stack | tree | design Companies facebook | google | linkedin | microsoft 实现一个二叉搜索树迭代器类BSTIterator ，表示一个按中序遍历二叉搜索树</description></item><item><title>最长回文子串</title><link>https://justice.bj.cn/post/leetcode/doc/5.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/5.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</guid><description>最长回文子串 Category Difficulty Likes Dislikes algorithms Medium (28.58%) 1805 - Tags string | dynamic-programming Companies amazon | bloomberg | microsoft 给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。 示例 1： 1 2 3</description></item><item><title>不同路径</title><link>https://justice.bj.cn/post/leetcode/doc/62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/</link><pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/</guid><description>不同路径 Category Difficulty Likes Dislikes algorithms Medium (66.84%) 1361 - Tags array | dynamic-programming Companies bloomberg 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向右</description></item></channel></rss>