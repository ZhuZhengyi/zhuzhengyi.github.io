<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>排序链表</title><link>https://justice.bj.cn/post/leetcode/doc/148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Wed, 22 Mar 2023 20:21:16 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>排序链表 Category Difficulty Likes Dislikes algorithms Medium (65.90%) 1948 - Tags linked-list | sort Companies Unknown 给你链表的头结点 head ，请将其按 升序 排列并返回 排序后的链表 。 示例 1： 1 2 输入：head = [4,2,1,3] 输出：[1,2,</description></item><item><title>移除链表元素</title><link>https://justice.bj.cn/post/leetcode/doc/203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/</link><pubDate>Wed, 22 Mar 2023 17:12:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/</guid><description>移除链表元素 Category Difficulty Likes Dislikes algorithms Easy (54.76%) 1199 - Tags linked-list Companies Unknown 给你一个链表的头节点 head 和一个整数 val ，请你删除链表中所有满足 Node.val == val 的节点，并返回 新的头节点 。 示例 1： 1 2</description></item><item><title>合并两个链表</title><link>https://justice.bj.cn/post/leetcode/doc/1669.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8/</link><pubDate>Wed, 22 Mar 2023 10:32:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1669.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8/</guid><description>合并两个链表 Category Difficulty Likes Dislikes algorithms Medium (77.41%) 95 - Tags Unknown Companies Unknown 给你两个链表 list1 和 list2 ，它们包含的元素分别为 n 个和 m 个。 请你将 list1 中下标从 a 到 b 的全部节点都删除，并将lis</description></item><item><title>Rust特性(trait)</title><link>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</link><pubDate>Tue, 21 Mar 2023 15:31:13 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</guid><description>Rust特性(trait) 简介 trait(特性) 是一组方法的集合，实现trait的类型可以访问该 trait 中定义的其他方法。 任何类型都可以实现 tra</description></item><item><title>寻找重复数</title><link>https://justice.bj.cn/post/leetcode/doc/287.%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0/</link><pubDate>Tue, 21 Mar 2023 15:31:13 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/287.%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0/</guid><description>寻找重复数 Category Difficulty Likes Dislikes algorithms Medium (64.44%) 2089 - Tags array | two-pointers | binary-search Companies bloomberg 给定一个包含 n + 1 个整数的数组 nums ，其数字都在 [1, n] 范围内（包括 1 和 n），可知至少存在一个重复的整数</description></item><item><title>设计跳表</title><link>https://justice.bj.cn/post/leetcode/doc/1206.%E8%AE%BE%E8%AE%A1%E8%B7%B3%E8%A1%A8/</link><pubDate>Tue, 21 Mar 2023 15:31:13 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1206.%E8%AE%BE%E8%AE%A1%E8%B7%B3%E8%A1%A8/</guid><description>设计跳表 Category Difficulty Likes Dislikes algorithms Hard (53.80%) 14 - Tags Unknown Companies Unknown 不使用任何库函数，设计一个跳表。 跳表是在 O(log(n)) 时间内完成增加、删除、搜索操作的数据结构。跳表相比于树堆与红黑树</description></item><item><title>快照数组</title><link>https://justice.bj.cn/post/leetcode/doc/1146.%E5%BF%AB%E7%85%A7%E6%95%B0%E7%BB%84/</link><pubDate>Sat, 18 Mar 2023 10:06:38 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1146.%E5%BF%AB%E7%85%A7%E6%95%B0%E7%BB%84/</guid><description>快照数组 Category Difficulty Likes Dislikes algorithms Medium (32.86%) 102 - Tags string Companies Unknown 实现支持下列接口的「快照数组」- SnapshotArray： SnapshotArray(int length) - 初始化一个与指定长度相等的 类数组 的数据结</description></item><item><title>数组中的第K个最大元素</title><link>https://justice.bj.cn/post/leetcode/doc/215.%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</link><pubDate>Sat, 18 Mar 2023 10:06:38 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/215.%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</guid><description>数组中的第K个最大元素 Category Difficulty Likes Dislikes algorithms Medium (64.03%) 2092 - Tags divide-and-conquer | heap Companies amazon | apple | bloomberg | facebook | microsoft | pocketgems 给定整数数组 nums 和整数 k，请返回数组中第 **k** 个最大的元素。 请注意，你需要</description></item><item><title>根据前序和后序遍历构造二叉树</title><link>https://justice.bj.cn/post/leetcode/doc/889.%E6%A0%B9%E6%8D%AE%E5%89%8D%E5%BA%8F%E5%92%8C%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sat, 18 Mar 2023 10:06:38 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/889.%E6%A0%B9%E6%8D%AE%E5%89%8D%E5%BA%8F%E5%92%8C%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>根据前序和后序遍历构造二叉树 Category Difficulty Likes Dislikes algorithms Medium (68.09%) 299 - Tags string Companies Unknown 给定两个整数数组，preorder 和 postorder ，其中 preorder 是一个具有 无重复 值的二叉树的前序遍历，p</description></item><item><title>滑动窗口中位数</title><link>https://justice.bj.cn/post/leetcode/doc/480.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E4%BD%8D%E6%95%B0/</link><pubDate>Fri, 17 Mar 2023 21:47:32 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/480.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid><description>滑动窗口中位数 Category Difficulty Likes Dislikes algorithms Hard (44.56%) 410 - Tags sliding-window Companies google 中位数是有序序列最中间的那个数。如果序列的长度是偶数，则没有最中间的数；此时中位数是最中间的两个数的</description></item><item><title>完成所有工作的最短时间</title><link>https://justice.bj.cn/post/leetcode/doc/1723.%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4/</link><pubDate>Wed, 15 Mar 2023 14:35:30 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1723.%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4/</guid><description>完成所有工作的最短时间 Category Difficulty Likes Dislikes algorithms Hard (50.91%) 306 - Tags Unknown Companies Unknown 给你一个整数数组 jobs ，其中 jobs[i] 是完成第 i 项工作要花费的时间。 请你将这些工作分配给 k 位工人。所有工</description></item><item><title>前序遍历构造二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/doc/1008.%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Wed, 15 Mar 2023 13:30:59 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1008.%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>前序遍历构造二叉搜索树 Category Difficulty Likes Dislikes algorithms Medium (72.08%) 248 - Tags dynamic-programming | tree | depth-first-search Companies Unknown 给定一个整数数组，它表示BST(即 二叉搜索树 )的 先****序遍历 ，构造树并返回其根。</description></item><item><title>多数元素</title><link>https://justice.bj.cn/post/leetcode/doc/169.%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/</link><pubDate>Wed, 15 Mar 2023 13:30:59 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/169.%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/</guid><description>多数元素 Category Difficulty Likes Dislikes algorithms Easy (66.87%) 1720 - Tags array | divide-and-conquer | bit-manipulation Companies adobe | zenefits 给定一个大小为 n 的数组 nums ，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。 你</description></item><item><title>实现 Trie (前缀树)</title><link>https://justice.bj.cn/post/leetcode/doc/208.%E5%AE%9E%E7%8E%B0trie/</link><pubDate>Wed, 15 Mar 2023 13:30:59 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/208.%E5%AE%9E%E7%8E%B0trie/</guid><description>实现 Trie (前缀树) Category Difficulty Likes Dislikes algorithms Medium (64.69%) 210 - Tags design | trie Companies bloomberg | facebook | google | microsoft | twitter | uber 实现一个 Trie (前缀树)，包含 insert, search, 和 startsWith 这三个操作。 示例: 1 2 3 4 5 6 7 8 Trie trie =</description></item><item><title>二叉树的右视图</title><link>https://justice.bj.cn/post/leetcode/doc/199.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE/</link><pubDate>Wed, 15 Mar 2023 09:42:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/199.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE/</guid><description>二叉树的右视图 Category Difficulty Likes Dislikes algorithms Medium (65.76%) 827 - Tags tree | depth-first-search | breadth-first-search Companies amazon 给定一个二叉树的 根节点 root，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能</description></item><item><title>二叉树的层序遍历 II</title><link>https://justice.bj.cn/post/leetcode/doc/107.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86ii/</link><pubDate>Mon, 13 Mar 2023 19:48:33 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/107.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86ii/</guid><description>二叉树的层序遍历 II Category Difficulty Likes Dislikes algorithms Medium (72.24%) 666 - Tags tree | breadth-first-search Companies Unknown 给你二叉树的根节点 root ，返回其节点值 自底向上的层序遍历 。 （即按从叶子节点所在层到根节点所在的层</description></item><item><title>切棍子的最小成本</title><link>https://justice.bj.cn/post/leetcode/doc/1547.%E5%88%87%E6%A3%8D%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC/</link><pubDate>Mon, 13 Mar 2023 19:48:33 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1547.%E5%88%87%E6%A3%8D%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC/</guid><description>切棍子的最小成本 Category Difficulty Likes Dislikes algorithms Hard (56.43%) 74 - Tags Unknown Companies Unknown 有一根长度为 n 个单位的木棍，棍上从 0 到 n 标记了若干位置。例如，长度为 6 的棍子可以标记如下： 给你一个</description></item><item><title>最大三角形面积</title><link>https://justice.bj.cn/post/leetcode/doc/812.%E6%9C%80%E5%A4%A7%E4%B8%89%E8%A7%92%E5%BD%A2%E9%9D%A2%E7%A7%AF/</link><pubDate>Mon, 13 Mar 2023 19:48:33 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/812.%E6%9C%80%E5%A4%A7%E4%B8%89%E8%A7%92%E5%BD%A2%E9%9D%A2%E7%A7%AF/</guid><description>最大三角形面积 Category Difficulty Likes Dislikes algorithms Easy (68.49%) 181 - Tags Unknown Companies Unknown 给你一个由 X-Y 平面上的点组成的数组 points ，其中 points[i] = [xi, yi] 。从其中取任意三个不同的点组成三角形，返回能组成的最</description></item><item><title>二叉树的层序遍历</title><link>https://justice.bj.cn/post/leetcode/doc/102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Mon, 13 Mar 2023 19:36:05 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>二叉树的层序遍历 Category Difficulty Likes Dislikes algorithms Medium (60.88%) 391 - Tags tree | breadth-first-search Companies amazon | apple | bloomberg | facebook | linkedin | microsoft 给定一个二叉树，返回其按层次遍历的节点值。 （即逐层地，从左到右访问所有节点</description></item><item><title>滑动窗口最大值</title><link>https://justice.bj.cn/post/leetcode/doc/239.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/</link><pubDate>Sun, 12 Mar 2023 17:39:57 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/239.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/</guid><description>滑动窗口最大值 Category Difficulty Likes Dislikes algorithms Hard (49.73%) 1350 - Tags heap | sliding-window Companies amazon | google | zenefits 给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只</description></item></channel></rss>