<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>苍穹浩瀚片头曲</title><link>https://justice.bj.cn/post/09.pub/poem/%E8%8B%8D%E7%A9%B9%E6%B5%A9%E7%80%9A-%E7%89%87%E5%A4%B4%E6%9B%B2/</link><pubDate>Sun, 28 Apr 2024 14:00:01 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/poem/%E8%8B%8D%E7%A9%B9%E6%B5%A9%E7%80%9A-%E7%89%87%E5%A4%B4%E6%9B%B2/</guid><description>苍穹浩瀚片头曲 原曲歌词(挪威语) The Expanse I de sa morgenen jeg (In the so tender morning I) 在温柔的晨光中, Stige asoke (rise in search) 曦轮爬上了天际 Ja lyn tid jed vet ha delt (Yes it&amp;rsquo;s lightning time I know I share) 是呀, 在这荣</description></item><item><title>Stable Diffusion</title><link>https://justice.bj.cn/post/50.ml/stable_diffusion/</link><pubDate>Wed, 24 Apr 2024 12:53:56 +0800</pubDate><guid>https://justice.bj.cn/post/50.ml/stable_diffusion/</guid><description>Stable Diffusion 简介 Stable diffusion是一个基于Latent Diffusion Models（LDMs）实现的的文图生成（text-to-image）模型; 能够创造出既</description></item><item><title>Linux IO 之 文件系统的架构(转)</title><link>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9E%B6%E6%9E%84/</link><pubDate>Wed, 24 Apr 2024 12:31:05 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9E%B6%E6%9E%84/</guid><description>Linux IO 之 文件系统的架构(转) VFS和文件系统总结 一切都是文件： VFS 文件系统的设计，类似抽象基类，面向对象的思想。 虚函数都必须由底层派生出的实例实</description></item><item><title>Linux文件系统基础知识(转)</title><link>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 24 Apr 2024 12:31:05 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</guid><description>Linux文件系统基础知识(转) 文件系统的基本组成 文件系统是操作系统中负责管理持久数据的子系统，说简单点，就是负责把用户的文件存到磁盘硬件中</description></item><item><title>Linux系统调用之Futex</title><link>https://justice.bj.cn/post/21.linux/linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B9%8Bfutex/</link><pubDate>Wed, 24 Apr 2024 12:31:05 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B9%8Bfutex/</guid><description>Linux系统调用之Futex 简介 Futex（Fast Userspace muTexes）的缩写，由Hubertus Franke, Matthew Kirkwood, Ingo Molnar and Rusty Russell共同设计完成，</description></item><item><title>MySQL InnoDB 存储原理</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql_innodb_%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/</link><pubDate>Wed, 24 Apr 2024 12:31:05 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/mysql/mysql_innodb_%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/</guid><description>MySQL InnoDB 存储原理 简介 mysql InnoDB 存储引擎 目录结构 mysql InnoDB存储引擎的数据以目录文件形式存储在磁盘中； 每个db 都会在 /var/lib/mysql/ 目录里面创建一个以 db 为名的目录；</description></item><item><title>NVMe</title><link>https://justice.bj.cn/post/40.storage/nvme%E7%AE%80%E4%BB%8B/</link><pubDate>Wed, 24 Apr 2024 12:31:05 +0800</pubDate><guid>https://justice.bj.cn/post/40.storage/nvme%E7%AE%80%E4%BB%8B/</guid><description>NVMe 简介 NVMe（Non-Volatile Memory Express）非易失性内存主机控制器接口规范，是一个主机控制器接口和存储协议，用于加速企业和客户</description></item><item><title>CUDA编程</title><link>https://justice.bj.cn/post/50.ml/cuda/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><guid>https://justice.bj.cn/post/50.ml/cuda/</guid><description>CUDA编程 简介 CUDA是NVIDIA于2006年发布的一个基于NVIDIA的GPU的通用并行计算平台和编程模型; CUDA可以利用GPUs的</description></item><item><title>LLM-大语言模型相关</title><link>https://justice.bj.cn/post/50.ml/llm/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><guid>https://justice.bj.cn/post/50.ml/llm/</guid><description>LLM:大语言模型相关 准备 1 2 ## 安装anaconda $ winget install Anaconda.Anaconda3 hf-mirror: hugging-faces镜像网站 hfd: 大模型数据下载工具 1 2 3 4 5 ## 安装 $ wget ## 用</description></item><item><title>Tauri</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%BA%93%E4%B9%8Btauri/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%BA%93%E4%B9%8Btauri/</guid><description>Tauri 简介 Tauri是一个类似electron的跨平台基于web的客户端框架。奥法队是非得失通过Tauri可以将web网站已本地客户端的方式在p</description></item><item><title>whisper.cpp</title><link>https://justice.bj.cn/post/50.ml/whisper.cpp/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><guid>https://justice.bj.cn/post/50.ml/whisper.cpp/</guid><description>whisper.cpp 简介 参考</description></item><item><title>Zeus- Uber的分布式Spark Shuffle Service</title><link>https://justice.bj.cn/post/30.architech/spark/zeus-uber-remote-spark-shuffle-service/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/spark/zeus-uber-remote-spark-shuffle-service/</guid><description>Zeus: Uber的分布式Spark Shuffle Service 特性 垂直扩展 独立节点运行； 去中心化存储，节点无状态； 解决网络延迟 降低服务响应等待时间 流数据 性能优化 架构 优化点</description></item><item><title>智能语音助手</title><link>https://justice.bj.cn/post/50.ml/%E6%99%BA%E8%83%BD%E8%AF%AD%E9%9F%B3%E5%8A%A9%E6%89%8B/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><guid>https://justice.bj.cn/post/50.ml/%E6%99%BA%E8%83%BD%E8%AF%AD%E9%9F%B3%E5%8A%A9%E6%89%8B/</guid><description>智能语音助手 功能 实现中英文语音对话; 架构 组件 语音转文本 whisper.cpp 对话大模型 llama 下载大模型数据: 1 2 $ export HF_ENDPOINT=https://hf-mirror.com $ hfd.sh 文本转语音输出 espeak 1 2 3 4 5 6 7 8 9 10 ## ubuntu 安</description></item><item><title>Zerotier</title><link>https://justice.bj.cn/post/70.tool/zerotier/</link><pubDate>Thu, 28 Mar 2024 20:55:30 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/zerotier/</guid><description>Zerotier 简介 zerotier是一款智能可编程以太网交换软件，只需要经过简单的注册，安装和配置，即可建立VPN。 安装 小米mini wifi安装zero</description></item><item><title>专题：动态规划</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><pubDate>Thu, 28 Mar 2024 20:55:30 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid><description>专题：动态规划 简介 动态规划问题的难点在于对问题进行合理划分，将大问题转变为小问题的组合，形成递推关系，通过归纳法将问题得到解决； 动态规划最关</description></item><item><title>鸡蛋掉落</title><link>https://justice.bj.cn/post/leetcode/887.%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/</link><pubDate>Thu, 07 Mar 2024 14:02:17 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/887.%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/</guid><description>鸡蛋掉落 Category Difficulty Likes Dislikes algorithms Hard (30.83%) 985 - Tags heap Companies Unknown 给你 k 枚相同的鸡蛋，并可以使用一栋从第 1 层到第 n 层共有 n 层楼的建筑。 已知存在楼层 f ，满足 0 &amp;lt;= f &amp;lt;= n ，任何从</description></item><item><title>CPU异常</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/05-cpu-exceptions/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/05-cpu-exceptions/</guid><description>CPU异常 原文：https://os.phil-opp.com/cpu-exceptions/ 原作者：@phil-opp 译者：倪广野 触发CP</description></item><item><title>Go Channel</title><link>https://justice.bj.cn/post/14.language/golang/golang-channel/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang-channel/</guid><description>Go Channel 简介 channel是first-class的，可以被存储到变量中，可以作为参数传递给函数，也可以作为函数的返回值返回; channel分为</description></item><item><title>Golang之syscall</title><link>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bsyscall/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bsyscall/</guid><description>Golang之syscall 简介 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 ┌ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─</description></item><item><title>Golang内存对齐</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</guid><description>Golang内存对齐 简介 CPU 始终以字长访问内存， 对齐保证(align guarantee) 结构体的成员变量，第一个成员变量的偏移量为 0。 往后的每个成员变量的对齐值</description></item></channel></rss>