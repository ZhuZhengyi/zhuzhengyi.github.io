<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>字符串解码</title><link>https://justice.bj.cn/post/leetcode/doc/394.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81/</link><pubDate>Sat, 04 Mar 2023 17:39:15 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/394.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81/</guid><description>字符串解码 Category Difficulty Likes Dislikes algorithms Medium (56.01%) 1124 - Tags stack | depth-first-search Companies google | yelp 给定一个经过编码的字符串，返回它解码后的字符串。 编码规则为: k[encoded_string]，</description></item><item><title>种花问题</title><link>https://justice.bj.cn/post/leetcode/doc/605.%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 04 Mar 2023 17:39:15 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/605.%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98/</guid><description>种花问题 Category Difficulty Likes Dislikes algorithms Easy (32.62%) 529 - Tags array Companies linkedin 假设有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花不能种植在相邻的地块上，它们会争夺水源，</description></item><item><title>ASM汇编语言基础</title><link>https://justice.bj.cn/post/14.language/asm/asm/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/asm/asm/</guid><description>ASM汇编语言基础 简介 汇编语言是 CPU架构 寄存器 8086寄存器 8个8位通用寄存器：AL,AH,BL,BH,CL,CH,DL,DH 8个16位通</description></item><item><title>Docker基础</title><link>https://justice.bj.cn/post/32.cloudnative/docker%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/32.cloudnative/docker%E5%9F%BA%E7%A1%80/</guid><description>Docker基础 简介 docker是一个开源的应用容器引擎，基于go语言开发并遵循了apache2.0协议开源。 docker可以让开发者打包他</description></item><item><title>LFU缓存</title><link>https://justice.bj.cn/post/leetcode/doc/460.lfu%E7%BC%93%E5%AD%98/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/460.lfu%E7%BC%93%E5%AD%98/</guid><description>LFU缓存 Category Difficulty Likes Dislikes algorithms Hard (34.03%) 81 - Tags design Companies amazon | google 设计并实现最不经常使用（LFU）缓存的数据结构。它应该支持以下操作：get 和 put。 get(key) - 如果键存在于</description></item><item><title>Linux虚拟内存空间管理</title><link>https://justice.bj.cn/post/21.linux/linux%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/linux%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/</guid><description>Linux虚拟内存空间管理 段 在 32 位的操作系统中，每个进程都拥有 4GB 的虚拟内存空间。 Linux 根据功能上的差异，把整个虚拟内存空间划分为多个不同区间，称</description></item><item><title>LRU缓存机制</title><link>https://justice.bj.cn/post/leetcode/doc/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid><description>LRU缓存机制 Category Difficulty Likes Dislikes algorithms Medium (44.70%) 332 - Tags design Companies amazon | bloomberg | facebook | google | microsoft | palantir | snapchat | twitter | uber | yahoo | zenefits 运用你所掌握的数据结构，设计和实现一个 LRU (最近最少使用) 缓存</description></item><item><title>mmap</title><link>https://justice.bj.cn/post/21.linux/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90mmap/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90mmap/</guid><description>mmap 概述 对于mmap，您是否能从原理上解析以下三个问题： mmap比物理内存+swap空间大情况下，是否有问题？ MAP_SHARED，MAP_P</description></item><item><title>Rust基础</title><link>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</guid><description>Rust基础 简介 Rust是由Graydon Hoare于2009年发起的一门系统级、编译型编程语言，其设计准则为“安全，并发，实用”，支持函数</description></item><item><title>Rust数据类型</title><link>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>Rust数据类型 简介 Rust的数据类型分为标量(scalar)、复合(compound)和集合3种类型： 类型写法 描述 值举例 i8, i16, i32, i64, u8, u16, u32, u64 i</description></item><item><title>只出现一次的数字 III</title><link>https://justice.bj.cn/post/leetcode/doc/260.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97iii/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/260.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97iii/</guid><description>只出现一次的数字 III Category Difficulty Likes Dislikes algorithms Medium (73.51%) 620 - Tags bit-manipulation Companies Unknown 给定一个整数数组 nums，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的</description></item><item><title>排列硬币</title><link>https://justice.bj.cn/post/leetcode/doc/441.%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/441.%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81/</guid><description>排列硬币 Category Difficulty Likes Dislikes algorithms Easy (45.46%) 262 - Tags math | binary-search Companies Unknown 你总共有 n 枚硬币，并计划将它们按阶梯状排列。对于一个由 k 行组成的阶梯，其第 i 行必须正好有 i 枚硬币。阶梯</description></item><item><title>最长递增子序列</title><link>https://justice.bj.cn/post/leetcode/doc/300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>最长递增子序列 Category Difficulty Likes Dislikes algorithms Medium (51.75%) 1963 - Tags binary-search | dynamic-programming Companies microsoft 给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。 子序列是由数组派生而来的序列，删除（或不删</description></item><item><title>汇编基础</title><link>https://justice.bj.cn/post/14.language/asm/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/asm/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/</guid><description>汇编基础 基础知识 1.1 机器语言 机器语言是机器指令的集合。电子计算机的机器指令是一系列二进制数字。计算机将之转换为一系列高低电平脉冲信号来驱动硬件</description></item><item><title>组合总和 Ⅳ</title><link>https://justice.bj.cn/post/leetcode/doc/377.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/377.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-/</guid><description>组合总和 Ⅳ Category Difficulty Likes Dislikes algorithms Medium (53.15%) 751 - Tags dynamic-programming Companies facebook | google | snapchat 给你一个由 不同 整数组成的数组 nums ，和一个目标整数 target 。请你从 nums 中找出并返回总和为 target 的元素组合的个数。</description></item><item><title>专题：字符串</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%982.%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Tue, 21 Feb 2023 21:37:26 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%982.%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>专题：字符串 简介 字符串是最常用的数据结构。 相关题目 题目 难度 思路 3.无重复字符的最长子串 10.正则式匹配 14.最长公共前缀 300.最长递增子序</description></item><item><title>旋转字符串</title><link>https://justice.bj.cn/post/leetcode/doc/796.%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Tue, 21 Feb 2023 21:37:26 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/796.%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>旋转字符串 Category Difficulty Likes Dislikes algorithms Easy (63.30%) 282 - Tags math Companies Unknown 给定两个字符串, s 和 goal。如果在若干次旋转操作之后，s 能变成 goal ，那么返回 true 。 s 的 旋转操作 就是将 s 最左</description></item><item><title>有效的括号字符串</title><link>https://justice.bj.cn/post/leetcode/doc/678.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Tue, 21 Feb 2023 21:37:26 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/678.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>有效的括号字符串 Category Difficulty Likes Dislikes algorithms Medium (39.23%) 553 - Tags string Companies Unknown 给定一个只包含三种字符的字符串：（ ，） 和 *，写一个函数来检验这个字符串是否为有效字符串。有效字符串</description></item><item><title>专题：二叉树</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%981%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Tue, 21 Feb 2023 08:28:47 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%981%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>专题：二叉树 简介 二叉树是一个递归的结构 相关题目 题目 难度 解题思路 94.二叉树的中序遍历 ** 递归，栈 100.相同的树 ** 101.对称二叉树 * 102.</description></item><item><title>专题：链表</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%984%E9%93%BE%E8%A1%A8/</link><pubDate>Tue, 21 Feb 2023 08:28:47 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%984%E9%93%BE%E8%A1%A8/</guid><description>专题：链表 简介 链表是最基本，最常用的结构之一。 链表具有以下注意特性： 顺序访问； 离散； 迭代； 动态分配； 相关题目 206.反转链表 21.合并两个有</description></item></channel></rss>