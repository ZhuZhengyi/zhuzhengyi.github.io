<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>专题：二分查找</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>专题：二分查找 简介 二分查找法是一种高效的查找方法, 其拥有$log(n)$的时间复杂度. 其前置条件只有一个:有序数组. 因此在处理有序数组时, 可</description></item><item><title>专题：堆</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%A0%86/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%A0%86/</guid><description>专题：堆 简介 堆(heap)是一个基本数据结构, 其主要特征为堆顶元素为所有元素中的最大(大顶堆)或最小(小顶堆)元素; 堆常用来解决 top-k 问题; 堆的</description></item><item><title>专题：归并排序</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid><description>专题：归并排序 简介 归并排序是一种$ Nlog(N) $时间复杂度的排序算法, 其主要使用了分治的思想，是一种不稳定排序算法。 归并排序法主要由以下3个阶段组成：</description></item><item><title>二叉树的层序遍历</title><link>https://justice.bj.cn/post/leetcode/102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>二叉树的层序遍历 Category Difficulty Likes Dislikes algorithms Medium (60.88%) 391 - Tags tree | breadth-first-search Companies amazon | apple | bloomberg | facebook | linkedin | microsoft 给定一个二叉树，返回其按层次遍历的节点值。 （即逐层地，从左到右访问所有节点</description></item><item><title>二叉树的层序遍历 II</title><link>https://justice.bj.cn/post/leetcode/107.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86ii/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/107.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86ii/</guid><description>二叉树的层序遍历 II Category Difficulty Likes Dislikes algorithms Medium (72.24%) 666 - Tags tree | breadth-first-search Companies Unknown 给你二叉树的根节点 root ，返回其节点值 自底向上的层序遍历 。 （即按从叶子节点所在层到根节点所在的层</description></item><item><title>最大数</title><link>https://justice.bj.cn/post/leetcode/179.%E6%9C%80%E5%A4%A7%E6%95%B0/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/179.%E6%9C%80%E5%A4%A7%E6%95%B0/</guid><description>最大数 Category Difficulty Likes Dislikes algorithms Medium (40.98%) 1185 - Tags sort Companies Unknown 给定一组非负整数 nums，重新排列每个数的顺序（每个数不可拆分）使之组成一个最大的整数。 **注意：**输出结</description></item><item><title>翻转对</title><link>https://justice.bj.cn/post/leetcode/493.%E7%BF%BB%E8%BD%AC%E5%AF%B9/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/493.%E7%BF%BB%E8%BD%AC%E5%AF%B9/</guid><description>翻转对 Category Difficulty Likes Dislikes algorithms Hard (36.60%) 418 - Tags binary-search | divide-and-conquer | sort | binary-indexed-tree | segment-tree Companies google 给定一个数组 nums ，如果 i &amp;lt; j 且 nums[i] &amp;gt; 2*nums[j] 我们就将 (i, j) 称作一个重要翻转对。 你需要返回给定数组中的重要</description></item><item><title>区域和检索 - 数组可修改</title><link>https://justice.bj.cn/post/leetcode/307.%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2-%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BF%AE%E6%94%B9/</link><pubDate>Sun, 10 Sep 2023 17:31:20 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/307.%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2-%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BF%AE%E6%94%B9/</guid><description>区域和检索 - 数组可修改 Category Difficulty Likes Dislikes algorithms Medium (52.17%) 619 - Tags binary-indexed-tree | segment-tree Companies Unknown 给你一个数组 nums ，请你完成两类查询。 其中一类查询要求 更新 数组 nums 下标对应的值 另一类查询要求返</description></item><item><title>计算右侧小于当前元素的个数</title><link>https://justice.bj.cn/post/leetcode/315.%E8%AE%A1%E7%AE%97%E5%8F%B3%E4%BE%A7%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%AA%E6%95%B0/</link><pubDate>Sun, 10 Sep 2023 17:31:20 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/315.%E8%AE%A1%E7%AE%97%E5%8F%B3%E4%BE%A7%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%AA%E6%95%B0/</guid><description>计算右侧小于当前元素的个数 Category Difficulty Likes Dislikes algorithms Hard (43.45%) 1009 - Tags binary-search | divide-and-conquer | sort | binary-indexed-tree | segment-tree Companies google 给你一个整数数组 nums ，按要求返回一个新数组 counts 。数组 counts 有该性质： counts[i] 的值是 nums[i] 右</description></item><item><title>区间和的个数</title><link>https://justice.bj.cn/post/leetcode/327.%E5%8C%BA%E9%97%B4%E5%92%8C%E7%9A%84%E4%B8%AA%E6%95%B0/</link><pubDate>Sat, 09 Sep 2023 18:46:13 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/327.%E5%8C%BA%E9%97%B4%E5%92%8C%E7%9A%84%E4%B8%AA%E6%95%B0/</guid><description>区间和的个数 Category Difficulty Likes Dislikes algorithms Hard (40.58%) 557 - Tags binary-search | divide-and-conquer | sort | binary-indexed-tree | segment-tree Companies google 给你一个整数数组 nums 以及两个整数 lower 和 upper 。求数组中，值位于范围 [lower, upper] （包含 lower 和 upper）之</description></item><item><title>专题：树状数组</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</link><pubDate>Sat, 09 Sep 2023 10:21:17 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</guid><description>专题：树状数组 简介 树状数组是一种用来计算区间和(涉及元素修改)的高效数据结构，其查询(计算区间和)和更新(修改单个元素值)操作都能只有O(l</description></item><item><title>专题- 并查集</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%B9%B6%E6%9F%A5%E9%9B%86/</link><pubDate>Fri, 08 Sep 2023 16:58:39 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid><description>专题: 并查集 简介 并查集是图论中计算「动态连通性」的一种数据结构, 可用于计算图的连通性相关问题. 基本操作 并查集支持两种基本操作： 合并（Unio</description></item><item><title>寻找峰值</title><link>https://justice.bj.cn/post/leetcode/162.%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC/</link><pubDate>Fri, 08 Sep 2023 16:58:39 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/162.%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC/</guid><description>寻找峰值 Category Difficulty Likes Dislikes algorithms Medium (49.31%) 1113 - Tags array | binary-search Companies google | microsoft 峰值元素是指其值严格大于左右相邻值的元素。 给你一个整数数组 nums，找到峰值元素并返回其索引。数组</description></item><item><title>移除最多的同行或同列石头</title><link>https://justice.bj.cn/post/leetcode/947.%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E8%A1%8C%E6%88%96%E5%90%8C%E5%88%97%E7%9F%B3%E5%A4%B4/</link><pubDate>Fri, 08 Sep 2023 16:58:39 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/947.%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E8%A1%8C%E6%88%96%E5%90%8C%E5%88%97%E7%9F%B3%E5%A4%B4/</guid><description>移除最多的同行或同列石头 Category Difficulty Likes Dislikes algorithms Medium (61.50%) 324 - Tags binary-search Companies Unknown n 块石头放置在二维平面中的一些整数坐标点上。每个坐标点上最多只能有一块石头。 如果一块石头的</description></item><item><title>被围绕的区域</title><link>https://justice.bj.cn/post/leetcode/130.%E8%A2%AB%E5%9B%B4%E7%BB%95%E7%9A%84%E5%8C%BA%E5%9F%9F/</link><pubDate>Fri, 08 Sep 2023 16:58:39 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/130.%E8%A2%AB%E5%9B%B4%E7%BB%95%E7%9A%84%E5%8C%BA%E5%9F%9F/</guid><description>被围绕的区域 Category Difficulty Likes Dislikes algorithms Medium (46.23%) 942 - Tags depth-first-search | breadth-first-search | union-find Companies Unknown 给你一个 m x n 的矩阵 board ，由若干字符 'X' 和 'O' ，找到所有被 'X' 围绕的区域，并将这些区域里所有的 'O' 用 'X' 填</description></item><item><title>寻找旋转排序数组中的最小值</title><link>https://justice.bj.cn/post/leetcode/153.%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/</link><pubDate>Thu, 07 Sep 2023 19:21:24 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/153.%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/</guid><description>寻找旋转排序数组中的最小值 Category Difficulty Likes Dislikes algorithms Medium (57.09%) 1014 - Tags array | binary-search Companies microsoft 已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原</description></item><item><title>寻找旋转排序数组中的最小值 II</title><link>https://justice.bj.cn/post/leetcode/154.%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BCii/</link><pubDate>Thu, 07 Sep 2023 19:21:24 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/154.%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BCii/</guid><description>寻找旋转排序数组中的最小值 II Category Difficulty Likes Dislikes algorithms Hard (52.46%) 633 - Tags array | binary-search Companies Unknown 已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，</description></item><item><title>搜索旋转排序数组</title><link>https://justice.bj.cn/post/leetcode/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</link><pubDate>Thu, 07 Sep 2023 19:21:24 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</guid><description>搜索旋转排序数组 Category Difficulty Likes Dislikes algorithms Medium (42.99%) 1743 - Tags array | binary-search Companies bloomberg | facebook | linkedin | microsoft | uber 整数数组 nums 按升序排列，数组中的值 互不相同 。 在传递给函数之前，nums 在预先未知</description></item><item><title>修车的最少时间</title><link>https://justice.bj.cn/post/leetcode/2594.%E4%BF%AE%E8%BD%A6%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4/</link><pubDate>Thu, 07 Sep 2023 15:58:40 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/2594.%E4%BF%AE%E8%BD%A6%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4/</guid><description>修车的最少时间 Category Difficulty Likes Dislikes algorithms Medium (45.49%) 70 - Tags Unknown Companies Unknown 给你一个整数数组 ranks ，表示一些机械工的 能力值 。ranksi 是第 i 位机械工的能力值。能力值为 r 的机械工可</description></item><item><title>小伙子的scratch游戏</title><link>https://justice.bj.cn/post/92.scratch/ff_game/</link><pubDate>Thu, 07 Sep 2023 15:58:40 +0800</pubDate><guid>https://justice.bj.cn/post/92.scratch/ff_game/</guid><description>小伙子的scratch游戏 躲闪</description></item></channel></rss>