<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post.html</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>MarkDown</title><link>https://justice.bj.cn/post/70.tool/markdown.html</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/70.tool/markdown.html</guid><description>MarkDown 简介 Markdown（标记向下）是一种轻量级标记语言，创始人为约翰·格鲁伯。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的X</description></item><item><title>Tiglab Raft</title><link>https://justice.bj.cn/post/31.distribute/chubao-raft.html</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/31.distribute/chubao-raft.html</guid><description>Tiglab Raft 简介 Tiglab Raft 是 chubaofs 项目使用的 golang multigroup-raft 库，是在 etcd raft 库上进行了重构和优化。 向较于 etcd-raft，tiglab-raft 有以下不同改进： multi-</description></item><item><title>堆排序</title><link>https://justice.bj.cn/post/13.algorithm/%E5%A0%86%E6%8E%92%E5%BA%8F.html</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E5%A0%86%E6%8E%92%E5%BA%8F.html</guid><description>堆排序 简介 堆排序是借助于堆这个数据结构来实现排序的一种算法。 堆(heap)的性质 堆是一个完全二叉树； 堆的每个非叶子结点值均大于(大顶堆)/小</description></item><item><title>红黑树</title><link>https://justice.bj.cn/post/12.data_struct/tree/rb-tree.html</link><pubDate>Fri, 10 Jul 2020 00:02:06 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/rb-tree.html</guid><description>红黑树(RB-Tree) 定义 红黑树是一种二叉平衡树。 性质 每个节点要么是黑色，要么是红色。 Root 节点是黑色。 每个叶子节点（NIL）是黑色。 每个红色</description></item><item><title>LSMTree日志结构合并树</title><link>https://justice.bj.cn/post/12.data_struct/tree/lsm-tree.html</link><pubDate>Thu, 09 Jul 2020 00:02:06 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/lsm-tree.html</guid><description>日志结构合并树(LSM-Tree) 简介 LSM-Tree全称Log Structured Merge Tree，是Google在2006年开源其BigTable中引入的一种数</description></item><item><title>B树</title><link>https://justice.bj.cn/post/12.data_struct/tree/b-tree.html</link><pubDate>Wed, 08 Jul 2020 00:02:06 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/b-tree.html</guid><description>B-Tree 简介 B 树又叫平衡多路查找树。主要应用于数据库，文件等 一棵 m 阶的 B 树 (m 叉树)的特性如下： 树中每个结点最多含有 m 个孩子（m&amp;gt;=2）； 除根</description></item><item><title>MassTree</title><link>https://justice.bj.cn/post/12.data_struct/tree/masstree.html</link><pubDate>Wed, 08 Jul 2020 00:02:06 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/masstree.html</guid><description>MassTree 简介 masstree 来源于 2012 年发表的论文(Cache craftiness for fast multicore key-value storage)，可以理解为 B+ Tree 和 Radix Tree 的混合体，即将键切分成多个部分，每个部分为一个节点；</description></item><item><title>MerkleTree</title><link>https://justice.bj.cn/post/12.data_struct/tree/merkle-tree.html</link><pubDate>Wed, 08 Jul 2020 00:02:06 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/merkle-tree.html</guid><description>Merkle Tree 简介 Merkle Tree 是一种 Hash Tree，由 Ralph Merkle 在 1979 年发明。 Merkle Tree 的每个非叶节点通过其子节点的标记或者值（子节点为叶节点）的哈希值来进行标注，为大型的数据</description></item><item><title>Radix Tree</title><link>https://justice.bj.cn/post/12.data_struct/tree/radixtree.html</link><pubDate>Wed, 08 Jul 2020 00:02:06 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/radixtree.html</guid><description>基数树(Radix Tree) 简介 Radix tree(也被称为 radix trie，或者 compact prefix tree)是一种空间优化的前缀树(prefix tree)数据结构。 针对这对这</description></item></channel></rss>