<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>滴水穿石 on Justice的小站</title><link>https://justice.bj.cn/post/</link><description>Recent content in 滴水穿石 on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://justice.bj.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>构造 K 个回文字符串</title><link>https://justice.bj.cn/post/leetcode/doc/1400.%E6%9E%84%E9%80%A0-k-%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sun, 22 May 2022 17:42:29 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1400.%E6%9E%84%E9%80%A0-k-%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>构造 K 个回文字符串 Category Difficulty Likes Dislikes algorithms Medium (61.19%) 39 - Tags Unknown Companies Unknown 给你一个字符串 s 和一个整数 k 。请你用 s 字符串中 所有字符 构造 k 个非空 回文串 。 如果你可以用 s 中所有字</description></item><item><title>jzice-nvim</title><link>https://justice.bj.cn/post/70.tool/jzice-nvim/</link><pubDate>Sun, 22 May 2022 09:42:16 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/jzice-nvim/</guid><description>jzice-nvim Info Neovim lua config in one file.
Require neovim &amp;gt; 0.7.0 git rg Feature plugin manager: packer theme: molokai ui: startiy + nvim-tree + symbols-outline + lualine(statusline) lspconfig + lsp-installer + nvim-cmp telescope + anyjump + lspsaga hop + vim-eft nvim-autopairs nvim-notify vim-fugitive+lazygit + gitsigns &amp;hellip; Usage 1 2 3 4 1. `curl &amp;#39;https://raw.githubusercontent.com/jzice/jzice-nvim/main/lua/jzice-nvim/init.lua&amp;#39; &amp;gt; ~/.config/nvim/init.lua` 2. start nvim first to install packer auto 3.</description></item><item><title>Accumulo</title><link>https://justice.bj.cn/post/30.architech/accumulo/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/accumulo/</guid><description>Accumulo 简介 Apache Accumulo 由 NSA 开源一个可靠、可伸缩、高性能的排序分布式的 Key-Value 数据库。基于单元访问控制以及可定制的服务器端处理。Accumulo 使用 Google BigTable 设计思路</description></item><item><title>Alluxio</title><link>https://justice.bj.cn/post/30.architech/alluxio/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/alluxio/</guid><description>Alluxio 简介 Alluxio是一个开源的基于内存的分布式存储系统, 为计算框架和存储系统构建了桥梁，使应用程序能够通过一个公共接口连接到许多存储系统。</description></item><item><title>Anna</title><link>https://justice.bj.cn/post/30.architech/anna/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/anna/</guid><description>Anna 简介 Anna是伯克利 RISE 实验室推出了KV存储数据库，提供了惊人的存取速度、超强的伸缩性和史无前例的一致性保证。anna基于无协调 actor 模型，每个</description></item><item><title>apache arrow</title><link>https://justice.bj.cn/post/30.architech/arrow/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/arrow/</guid><description>apache arrow 简介 Apache Arrow 是一种基于内存的列式数据格式； 为了解决系统到系统之间的数据传输问题， 2016 年 2 月 Arrow 被提升为 Apache 的顶级项目。 和protobuf相比，pr</description></item><item><title>Apache Avro</title><link>https://justice.bj.cn/post/30.architech/avro/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/avro/</guid><description>Apache Avro 简介 Avro是Hadoop的一个数据序列化系统; 由Hadoop的创始人Doug Cutting（也是Lucene，Nutch等项目的创始人</description></item><item><title>Apache Hudi</title><link>https://justice.bj.cn/post/30.architech/hudi/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/hudi/</guid><description>Apache Hudi 简介 Hudi，全称是Hadoop Upsert Delete and Incremental, 最初的设计目标：在hadoop上实现update和delete操作； Hudi通过COW和MOR两</description></item><item><title>Apache iceberg</title><link>https://justice.bj.cn/post/30.architech/iceberg/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/iceberg/</guid><description>Apache iceberg 简介 Apache Iceberg 是一种用于跟踪超大规模表的新格式，是专门为对象存储（如S3）而设计的, 由 Netflix 开发开源的，于 2018年11月16日进入 Apache 孵化器，是 Netflix</description></item><item><title>Apache Kylin</title><link>https://justice.bj.cn/post/30.architech/kylin/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/kylin/</guid><description>Apache Kylin 简介 Apache Kylin™是一个开源的分布式分析引擎，提供Hadoop之上的SQL查询接口及多维分析（OLAP）能力以支持超大规模数据，最初由e</description></item><item><title>Apache Phoenix</title><link>https://justice.bj.cn/post/30.architech/phoenix/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/phoenix/</guid><description>Apache Phoenix 简介 Phoenix是构建在HBase上的一个SQL层，能让我们用标准的JDBC APIs而不是HBase客户端APIs来创建表，插入数据和</description></item><item><title>AWS常用概念</title><link>https://justice.bj.cn/post/30.architech/aws-s3/aws-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/aws-s3/aws-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</guid><description>AWS常用概念 简介 每个Region都是完全独立的。每个Availability Zone都是隔离的，但是Region中的可用区通过低延迟链接连</description></item><item><title>B-Link-Tree</title><link>https://justice.bj.cn/post/12.data_struct/tree/b-link-tree/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/b-link-tree/</guid><description>B-Link-Tree 简介 B-Link-Tree是B+ Tree的一个变种；优化了B+ Tree结构调整时的锁粒度，提升并发度，保持高并发下的性能稳定 在中间节点增加</description></item><item><title>B-Tree, B+Tree, B*Tree</title><link>https://justice.bj.cn/post/12.data_struct/tree/b-tree/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/b-tree/</guid><description>B-Tree, B+Tree, B*Tree B-Tree B-Tree(B树)又叫平衡多路查找树(Balance Multiple Search Tree); 是一种平衡多叉树； m阶B-Tree的每个节点最多有m个子节点； 特性 一棵 m</description></item><item><title>Bit/Byte</title><link>https://justice.bj.cn/post/12.data_struct/01.%E6%AF%94%E7%89%B9/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/01.%E6%AF%94%E7%89%B9/</guid><description>Bit/Byte title: 比特/字节 description: toc: true authors: [] tags: [] categories: [] series: [] Bit/Byte bit bit是内存中最小的数据单位，为一个数据位； 8个bit组成一个byte。 字符串相关算法 字符串匹配 字符</description></item><item><title>BlobStore</title><link>https://justice.bj.cn/post/40.storage/spdk/blobstore/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/40.storage/spdk/blobstore/</guid><description>BlobStore 简介 SPDK bdev层类似于内核中的通用块设备层，是对底层不同类型设备（如NVMe bdev、Malloc bdev、AIO bdev等）的统一抽象管</description></item><item><title>BookKeeper</title><link>https://justice.bj.cn/post/30.architech/bookkeeper/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/30.architech/bookkeeper/</guid><description>BookKeeper 简介 BookKeeper是一个可靠的日志流记录系统，用于将系统产生的日志(也可以是其他数据)记录在BookKeeper集群上，由BookK</description></item><item><title>Cap'n Proto</title><link>https://justice.bj.cn/post/12.data_struct/capn-proto/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/capn-proto/</guid><description>Cap&amp;rsquo;n Proto 简介 Cap’n Proto 是非常快速的数据交换格式和基于容量的 RPC 系统， Cap&amp;rsquo;n Proto没有任何encoding/decoding步骤，Cap&amp;rsqu</description></item><item><title>ChubaoFS MetaNode</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-metanode/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-metanode/</guid><description>ChubaoFS MetaNode 简介 源码分析 启动流程 1 2 3 4 5 main=&amp;gt;start: main doStart=&amp;gt;subroutine: 启动 et=&amp;gt;end: 结束 main-&amp;gt;doStart-&amp;gt;et 1 2 3 4 5 doStart=&amp;gt;start: doStart parseConfig=&amp;gt;operation: 解析配置 et=&amp;gt;end: 结束 doStart-&amp;gt;parseConfig 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // cmd/cmd.go main() --&amp;gt; (*MetaNode) server.Start() --&amp;gt;</description></item><item><title>ChubaoFS vs NFS 性能对比测试</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-vs-nfs%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-vs-nfs%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95/</guid><description>ChubaoFS vs NFS 性能对比测试 目的 使用fio，对chubaofs 和 nfs 进行读写测试，对比两者性能； 测试说明 所有机器都在一个机房内； nfs： nfs为两套nf</description></item></channel></rss>