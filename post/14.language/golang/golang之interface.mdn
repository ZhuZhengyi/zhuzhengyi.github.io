# Golang之interface

## 简介

- 接口是一个或多个方法签名的集合
- 只要某个类型拥有该接口的所有方法签名，即算实现该接口，无需显示声明实现了哪个接口，这称为 Structural Typing
- 接口只有方法声明，没有实现，没有数据字段
- 接口可以匿名嵌入其它接口，或嵌入到结构中
- 将对象赋值给接口时，发生拷贝，接口内部存储的是指向这个复制品的指针，既无法修改复制品的状态，也无法获取指针
- 只有当接口存储的类型和对象都为nil时，接口才等于nil
- 接口调用不会做receiver的自动转换
- 接口同样支持匿名字段方法
- 接口也可实现类似OOP中的多态
- 空接口可以作为任何类型数据的容器

## 接口实现

接口分为两种：

* 空接口:  包含类型信息和数据指针两个字段；

* 有方法接口: 包含方法表和数据指针两个字段； 

```go
// 没有方法的interface
type eface struct {
    _type *_type           //类型信息
    data  unsafe.Pointer   //数据指针
}

// 有方法的interface
type iface struct {
    tab  *itab             //方法表
    data unsafe.Pointer    //
}
```

![](https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2022/02/08-17-13-25-2022-02-08-17-13-18-image.png)

![](https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2022/02/08-17-12-48-2022-02-08-17-12-43-image.png)

## 参考

1. [深入研究 Go interface 底层实现](https://halfrost.com/go_interface/)

2. https://segmentfault.com/a/1190000018565842

3. 
