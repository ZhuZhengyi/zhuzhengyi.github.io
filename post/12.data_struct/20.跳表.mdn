# 跳表(skiplist)

## 简介

`跳表`(SkipList)由 William Pugh 于 1990 年发明。他在 Communications of the ACM June 1990, 33(6) 668-676 上发表了 Skip lists: a probabilistic alternative to balanced trees，在该论文中详细解释了跳表的数据结构和插入删除操作。

跳表是平衡树的一种替代的数据结构，和红黑树不相同的是，跳表对于树的平衡的实现是基于一种随机化的算法，跳表的插入和删除的工作是比较简单的。

![](https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2020/11/12-21-20-04-2020-03-06-11-41-30-image.png)

## 核心思想

* 在普通链表中增加层级指针，实现节点的快速访问。

![image-20190504154638969](https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2020/11/12-21-20-11-image-20190504154638969.png)

## 实现要点

1. 新增节点通过随机数决定指针的层级；
2. 通过调节因子决定随机层级，从而控制层级指针的疏密；

## 实现

```cpp
typedef struct zskiplistNode {
    // member 对象
    robj *obj;
    // 分值
    double score;

    // 后退指针
    struct zskiplistNode *backward;

    // 层
    struct zskiplistLevel {
        // 前进指针
        struct zskiplistNode *forward;
        // 这个层跨越的节点数量
        unsigned int span;

    } level[];

} zskiplistNode;
```

## 参考

1. <http://www.cnblogs.com/xuqiang/archive/2011/05/22/2053516.html>
2. [跳跃表 &mdash; Redis 设计与实现](https://redisbook.readthedocs.io/en/latest/internal-datastruct/skiplist.html)
3. 
