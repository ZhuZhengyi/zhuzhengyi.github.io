<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithm on Justice的小站</title><link>https://justice.bj.cn/categories/algorithm/</link><description>Recent content in algorithm on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 05 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://justice.bj.cn/categories/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Kademlia算法</title><link>https://justice.bj.cn/post/13.algorithm/kademlia%E7%AE%97%E6%B3%95/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/13.algorithm/kademlia%E7%AE%97%E6%B3%95/</guid><description>Kademlia算法 Kademlia算法是一种分布式存储及路由的算法。 什么是分布式存储？试想一下，一所1000人的学校，现在学校突然决定拆掉</description></item><item><title>排序算法总结</title><link>https://justice.bj.cn/post/13.algorithm/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid><description>排序算法总结 概述 排序是最基础算法之一。 分类 十种常见排序算法可以分为两大类： 比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突</description></item><item><title>查找算法</title><link>https://justice.bj.cn/post/13.algorithm/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</guid><description>查找算法 简介 查找算法是计算机科学中最基本的算法之一，其用途在查找给定序列中的特定值。 二分查找 二分查找法是对有序序列的快速查找方法，其时间复杂</description></item><item><title>算法基础</title><link>https://justice.bj.cn/post/13.algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</guid><description>算法基础 算法定义 算法评估 空间复杂度 时间复杂度 常用算法 排序 比较类 冒泡排序 选择排序 插入排序 归并排序 希尔排序 快速排序 堆排序 非比较类 计数排序 桶排序 基</description></item><item><title>股票买卖算法</title><link>https://justice.bj.cn/post/13.algorithm/%E8%82%A1%E7%A5%A8%E4%B9%B0%E5%8D%96%E7%AE%97%E6%B3%95/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E8%82%A1%E7%A5%A8%E4%B9%B0%E5%8D%96%E7%AE%97%E6%B3%95/</guid><description>股票买卖算法 核心代码 1 2 3 4 5 6 for (let i = 1; i &amp;lt; n; i++) { //卖出时利润：求最大值（上次交易卖出时利润，本次交易卖出时利润） profit_out = Math.max(profit_out, profit_in + prices[i]); //买入时</description></item><item><title>堆排序</title><link>https://justice.bj.cn/post/13.algorithm/%E5%A0%86%E6%8E%92%E5%BA%8F/</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E5%A0%86%E6%8E%92%E5%BA%8F/</guid><description>堆排序 简介 堆排序是借助于堆这个数据结构来实现排序的一种算法。 堆(heap)的性质 堆是一个完全二叉树； 堆的每个非叶子结点值均大于(大顶堆)/小</description></item></channel></rss>