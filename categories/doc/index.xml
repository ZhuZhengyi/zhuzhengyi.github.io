<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>doc on Justice的小站</title><link>https://justice.bj.cn/categories/doc/</link><description>Recent content in doc on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 17 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://justice.bj.cn/categories/doc/index.xml" rel="self" type="application/rss+xml"/><item><title>无重复字符的最长子串</title><link>https://justice.bj.cn/post/leetcode/doc/3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</link><pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</guid><description>无重复字符的最长子串 Category Difficulty Likes Dislikes algorithms Medium (32.18%) 2861 - Tags hash-table | two-pointers | string | sliding-window Companies adobe | amazon | bloomberg | yelp 给定一个字符串，请你找出其中不含有重复字符的 **最长子串 **的长度。 示</description></item><item><title>最小覆盖子串</title><link>https://justice.bj.cn/post/leetcode/doc/76.%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/</link><pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/76.%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/</guid><description>最小覆盖子串 Category Difficulty Likes Dislikes algorithms Hard (43.18%) 1565 - Tags hash-table | two-pointers | string | sliding-window Companies facebook | linkedin | snapchat | uber 给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存</description></item><item><title>滑动窗口最大值</title><link>https://justice.bj.cn/post/leetcode/doc/239.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/</link><pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/239.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/</guid><description>滑动窗口最大值 Category Difficulty Likes Dislikes algorithms Hard (49.73%) 1350 - Tags heap | sliding-window Companies amazon | google | zenefits 给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只</description></item><item><title>买卖股票的最佳时机 II</title><link>https://justice.bj.cn/post/leetcode/doc/122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA-ii/</link><pubDate>Thu, 30 Dec 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA-ii/</guid><description>买卖股票的最佳时机 II Category Difficulty Likes Dislikes algorithms Easy (57.53%) 613 - Tags array | greedy Companies bloomberg 给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。 设计一个算法来计算你所能获取的最大</description></item><item><title>专题- 区间问题</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9812.%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9812.%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</guid><description>专题: 区间问题 简介 相关题目 56.合并区间 435.无重叠区间</description></item><item><title>专题：买卖股票</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%985%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9B%B8%E5%85%B3/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%985%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9B%B8%E5%85%B3/</guid><description>专题：买卖股票 简介 相关题目 买卖股票最佳时机（1次买卖机会） 买卖股票最佳时机II（不限次数买卖机会） 买卖股票最佳时机III（限2次）</description></item><item><title>专题：序列和子串</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%986%E5%BA%8F%E5%88%97%E5%92%8C/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%986%E5%BA%8F%E5%88%97%E5%92%8C/</guid><description>专题：序列和子串 相关题目 53.最大子序列和 300.最长递增子序列</description></item><item><title>专题：括号问题</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9813.%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9813.%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</guid><description>专题：括号问题 简介 相关题目 20.有效括号；栈 22.括号生成；回溯法 32.最长有效括号；</description></item><item><title>专题：跳跃游戏</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%987.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%987.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid><description>专题：跳跃游戏 简介 题目 55.跳跃游戏： 45.跳跃游戏II: 贪心法</description></item><item><title>专题：链表</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%984%E9%93%BE%E8%A1%A8%E7%9B%B8%E5%85%B3/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%984%E9%93%BE%E8%A1%A8%E7%9B%B8%E5%85%B3/</guid><description>专题：链表 相关题目 206.反转链表 21.合并两个有序链表 23.合并k个有序链表 24.两两交换链表中 86.分割链表 61.旋转链表 92.反转链表</description></item><item><title>跳跃游戏</title><link>https://justice.bj.cn/post/leetcode/doc/55.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/55.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid><description>跳跃游戏 Category Difficulty Likes Dislikes algorithms Medium (38.11%) 469 - Tags array | greedy Companies microsoft 给定一个非负整数数组，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 判</description></item><item><title>跳跃游戏 II</title><link>https://justice.bj.cn/post/leetcode/doc/45.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8Fii/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/45.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8Fii/</guid><description>跳跃游戏 II Category Difficulty Likes Dislikes algorithms Medium (43.11%) 1270 - Tags array | greedy Companies Unknown 给你一个非负整数数组 nums ，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度</description></item><item><title>专题1：二叉树相关</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%981%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9B%B8%E5%85%B3/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%981%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9B%B8%E5%85%B3/</guid><description>专题1：二叉树相关 简介 二叉树是一个递归的结构 相关题目 前序遍历 94.二叉树的中序遍历 后序遍历 102.二叉树的层序遍历； 路径和 543.二叉树的直</description></item><item><title>组合总和 II</title><link>https://justice.bj.cn/post/leetcode/doc/40.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-ii/</link><pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/40.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-ii/</guid><description>组合总和 II Category Difficulty Likes Dislikes algorithms Medium (62.12%) 737 - Tags array | backtracking Companies snapchat 给定一个数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。 candidates 中的每个数字在每个组合中只能使用</description></item><item><title>专题10：动态规划</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9810-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%9810-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid><description>专题10：动态规划 简介 动态规划问题的难点在于对问题进行子问题的合理划分， 函数定义：定义问题目标函数，目标函数可通过子目标函数组合而成，子函数</description></item><item><title>括号生成</title><link>https://justice.bj.cn/post/leetcode/doc/22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</guid><description>括号生成 Category Difficulty Likes Dislikes algorithms Medium (73.37%) 770 - Tags string | backtracking Companies google | uber | zenefits 给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。 例如，给</description></item><item><title>最接近的三数之和</title><link>https://justice.bj.cn/post/leetcode/doc/16.%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/16.%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>最接近的三数之和 Category Difficulty Likes Dislikes algorithms Medium (43.03%) 367 - Tags array | two-pointers Companies bloomberg 给定一个包括 n 个整数的数组 nums和 一个目标值 target。找出 nums中的三个整数，使得它们</description></item><item><title>有效的括号</title><link>https://justice.bj.cn/post/leetcode/doc/20.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/20.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</guid><description>有效的括号 Category Difficulty Likes Dislikes algorithms Easy (40.21%) 1262 - Tags string | stack Companies 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。 有效字符串需</description></item><item><title>逆波兰表达式求值</title><link>https://justice.bj.cn/post/leetcode/doc/150.%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/150.%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/</guid><description>逆波兰表达式求值 Category Difficulty Likes Dislikes algorithms Medium (49.14%) 111 - Tags stack Companies linkedin 根据逆波兰表示法，求表达式的值。 有效的运算符包括 +, -, *, / 。每个运算对象可以是整数，也可以是另一个逆</description></item><item><title>最长递增子序列</title><link>https://justice.bj.cn/post/leetcode/doc/300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>最长递增子序列 Category Difficulty Likes Dislikes algorithms Medium (51.75%) 1963 - Tags binary-search | dynamic-programming Companies microsoft 给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。 子序列是由数组派生而来的序列，删除（或不删</description></item></channel></rss>