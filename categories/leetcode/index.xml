<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>leetcode on Justice的小站</title><link>https://justice.bj.cn/categories/leetcode/</link><description>Recent content in leetcode on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 20 Aug 2023 14:56:31 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/categories/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>二叉树的中序遍历</title><link>https://justice.bj.cn/post/leetcode/doc/94.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Sun, 20 Aug 2023 14:56:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/94.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>二叉树的中序遍历 Category Difficulty Likes Dislikes algorithms Medium (68.96%) 339 - Tags Companies 给定一个二叉树，返回它的*中序 *遍历。 示例: 1 2 3 4 5 6 7 8 输入: [1,null,2,3] 1 \ 2 / 3 输出: [1,3,2] 进阶: 递归算法很</description></item><item><title>连续数组</title><link>https://justice.bj.cn/post/leetcode/doc/525.%E8%BF%9E%E7%BB%AD%E6%95%B0%E7%BB%84/</link><pubDate>Sun, 20 Aug 2023 14:56:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/525.%E8%BF%9E%E7%BB%AD%E6%95%B0%E7%BB%84/</guid><description>连续数组 Category Difficulty Likes Dislikes algorithms Medium (54.72%) 671 - Tags hash-table Companies facebook 给定一个二进制数组 nums , 找到含有相同数量的 0 和 1 的最长连续子数组，并返回该子数组的长度。 示例 1: 1 2 3 输入: nums</description></item><item><title>专题：买卖股票</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8/</guid><description>专题：买卖股票 简介 股票买卖时机问题是 leetcode 中一类很常见的问题, 题目表述如下: 有一个数组 prices, 代表某支股票在每天的价格. 投资者在每天可以选择买入,卖出</description></item><item><title>专题：二分法</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%88%86%E6%B3%95/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%88%86%E6%B3%95/</guid><description>专题：二分法 简介 二分查找法是一种高效的查找方法, 其拥有$ln(n)$的时间复杂度. 其前置条件只有一个:有序数组. 因此在处理有序数组时, 可以优</description></item><item><title>专题：二叉树</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>专题：二叉树 简介 二叉树是一个递归的结构 基本操作 遍历 计算高度 计算宽度 遍历 前序遍历: 又叫先根遍历, 递归顺序为: 根节点-&amp;gt;左子树-&amp;gt;右</description></item><item><title>专题：动态规划</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid><description>专题：动态规划 简介 动态规划问题的难点在于对问题进行合理划分，将大问题转变为小问题的组合，形成递推关系，通过归纳法将问题得到解决； 动态规划最关</description></item><item><title>专题：区间问题</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</guid><description>专题：区间问题 简介 相关题目 56.合并区间 435.无重叠区间</description></item><item><title>专题：回溯法</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%9B%9E%E6%BA%AF%E6%B3%95/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%9B%9E%E6%BA%AF%E6%B3%95/</guid><description>专题：回溯法 简介 回溯法是归纳法的一种。其基本思想是： 基本要点 先找出一种遍历问题的合理方法； 代码模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</description></item><item><title>专题：堆</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%A0%86/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%A0%86/</guid><description>专题：堆 简介 堆(heap)是一个基本数据结构, 其主要特征为堆顶元素; 堆常用来解决 top-k 问题; 各语言中的堆 Rust rust 标准库中的堆结构为 BinaryHeap; BinaryHe</description></item><item><title>专题：子串和子序列</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%AD%90%E4%B8%B2%E5%92%8C%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%AD%90%E4%B8%B2%E5%92%8C%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>专题：子串和子序列 简介 子串和子序列是 leetcode 中最常见的题目类型之一. 都是在一个数组上的问题. 子串：原数组中的一部分连续元素集合, 元素的相对顺序不变</description></item><item><title>专题：字符串</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>专题：字符串 简介 字符串是最常用的数据结构。 相关题目 题目 难度 思路 3.无重复字符的最长子串 10.正则式匹配 14.最长公共前缀 300.最长递增子序</description></item><item><title>专题：括号问题</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</guid><description>专题：括号问题 简介 相关题目 20.有效的括号 22.括号生成 32.最长有效括号</description></item><item><title>专题：栈</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E6%A0%88/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E6%A0%88/</guid><description>专题：栈 简介 栈是一个基本数据结构, 其主要特征为先进先出; 栈常用操作: 入栈: 将元素压入栈顶; 出栈: 将栈顶元素弹出栈外; 各种语言中的栈 Rust rust 中没有</description></item><item><title>专题：经典数据结构设计</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid><description>专题：经典数据结构设计 简介 本专题包含一些经典的数据结构设计。 相关题目 题目 难度 关键思路 146.LRU缓存 ** 460.LFU缓存 *** 173.二叉搜索</description></item><item><title>专题：跳跃游戏</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid><description>专题：跳跃游戏 简介 题目 55.跳跃游戏： 45.跳跃游戏II:</description></item><item><title>专题：链表</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98/%E9%93%BE%E8%A1%A8/</guid><description>专题：链表 简介 链表是最基本，最常用的结构之一。 链表具有以下注意特性： 顺序访问； 离散； 迭代； 动态分配； 相关题目 206.反转链表 21.合并两个有</description></item><item><title>连续的子数组和</title><link>https://justice.bj.cn/post/leetcode/doc/523.%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</link><pubDate>Sat, 19 Aug 2023 22:59:47 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/523.%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</guid><description>连续的子数组和 Category Difficulty Likes Dislikes algorithms Medium (28.56%) 526 - Tags math | dynamic-programming Companies facebook 给你一个整数数组 nums 和一个整数 k ，编写一个函数来判断该数组是否含有同时满足下述条件的连续子数组： 子</description></item><item><title>把二叉搜索树转换为累加树</title><link>https://justice.bj.cn/post/leetcode/doc/538.%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%B4%AF%E5%8A%A0%E6%A0%91/</link><pubDate>Sat, 19 Aug 2023 16:27:46 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/538.%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%B4%AF%E5%8A%A0%E6%A0%91/</guid><description>把二叉搜索树转换为累加树 Category Difficulty Likes Dislikes algorithms Medium (76.71%) 934 - Tags tree Companies amazon 给出二叉** 搜索 **树的根节点，该树的节点值各不相同，请你将其转换为累加树（Greater</description></item><item><title>K 个元素的最大和</title><link>https://justice.bj.cn/post/leetcode/doc/2656.k%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C/</link><pubDate>Sat, 19 Aug 2023 12:11:55 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/2656.k%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C/</guid><description>K 个元素的最大和 Category Difficulty Likes Dislikes algorithms Easy (83.36%) 11 - Tags Unknown Companies Unknown 给你一个下标从 0 开始的整数数组 nums 和一个整数 k 。你需要执行以下操作** 恰好** k 次，最大化你的得分：</description></item><item><title>删除一次得到子数组最大和</title><link>https://justice.bj.cn/post/leetcode/doc/1186.%E5%88%A0%E9%99%A4%E4%B8%80%E6%AC%A1%E5%BE%97%E5%88%B0%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C/</link><pubDate>Sat, 19 Aug 2023 10:50:51 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1186.%E5%88%A0%E9%99%A4%E4%B8%80%E6%AC%A1%E5%BE%97%E5%88%B0%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C/</guid><description>删除一次得到子数组最大和 Category Difficulty Likes Dislikes algorithms Medium (48.11%) 287 - Tags Unknown Companies Unknown 给你一个整数数组，返回它的某个 非空 子数组（连续元素）在执行一次可选的删除操作后，所能得到的</description></item></channel></rss>