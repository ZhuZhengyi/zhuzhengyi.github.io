<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>leetcode on Justice的小站</title><link>https://justice.bj.cn/categories/leetcode/</link><description>Recent content in leetcode on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 15 Mar 2023 14:35:30 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/categories/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>完成所有工作的最短时间</title><link>https://justice.bj.cn/post/leetcode/doc/1723.%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4/</link><pubDate>Wed, 15 Mar 2023 14:35:30 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1723.%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4/</guid><description>完成所有工作的最短时间 Category Difficulty Likes Dislikes algorithms Hard (50.91%) 306 - Tags Unknown Companies Unknown 给你一个整数数组 jobs ，其中 jobs[i] 是完成第 i 项工作要花费的时间。 请你将这些工作分配给 k 位工人。所有工</description></item><item><title>前序遍历构造二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/doc/1008.%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Wed, 15 Mar 2023 13:30:59 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1008.%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>前序遍历构造二叉搜索树 Category Difficulty Likes Dislikes algorithms Medium (72.08%) 248 - Tags dynamic-programming | tree | depth-first-search Companies Unknown 给定一个整数数组，它表示BST(即 二叉搜索树 )的 先****序遍历 ，构造树并返回其根。</description></item><item><title>多数元素</title><link>https://justice.bj.cn/post/leetcode/doc/169.%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/</link><pubDate>Wed, 15 Mar 2023 13:30:59 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/169.%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/</guid><description>多数元素 Category Difficulty Likes Dislikes algorithms Easy (66.87%) 1720 - Tags array | divide-and-conquer | bit-manipulation Companies adobe | zenefits 给定一个大小为 n 的数组 nums ，返回其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ n/2 ⌋ 的元素。 你</description></item><item><title>实现 Trie (前缀树)</title><link>https://justice.bj.cn/post/leetcode/doc/208.%E5%AE%9E%E7%8E%B0trie/</link><pubDate>Wed, 15 Mar 2023 13:30:59 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/208.%E5%AE%9E%E7%8E%B0trie/</guid><description>实现 Trie (前缀树) Category Difficulty Likes Dislikes algorithms Medium (64.69%) 210 - Tags design | trie Companies bloomberg | facebook | google | microsoft | twitter | uber 实现一个 Trie (前缀树)，包含 insert, search, 和 startsWith 这三个操作。 示例: 1 2 3 4 5 6 7 8 Trie trie =</description></item><item><title>二叉树的右视图</title><link>https://justice.bj.cn/post/leetcode/doc/199.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE/</link><pubDate>Wed, 15 Mar 2023 09:42:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/199.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE/</guid><description>二叉树的右视图 Category Difficulty Likes Dislikes algorithms Medium (65.76%) 827 - Tags tree | depth-first-search | breadth-first-search Companies amazon 给定一个二叉树的 根节点 root，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能</description></item><item><title>二叉树的层序遍历 II</title><link>https://justice.bj.cn/post/leetcode/doc/107.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86ii/</link><pubDate>Mon, 13 Mar 2023 19:48:33 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/107.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86ii/</guid><description>二叉树的层序遍历 II Category Difficulty Likes Dislikes algorithms Medium (72.24%) 666 - Tags tree | breadth-first-search Companies Unknown 给你二叉树的根节点 root ，返回其节点值 自底向上的层序遍历 。 （即按从叶子节点所在层到根节点所在的层</description></item><item><title>切棍子的最小成本</title><link>https://justice.bj.cn/post/leetcode/doc/1547.%E5%88%87%E6%A3%8D%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC/</link><pubDate>Mon, 13 Mar 2023 19:48:33 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1547.%E5%88%87%E6%A3%8D%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC/</guid><description>切棍子的最小成本 Category Difficulty Likes Dislikes algorithms Hard (56.43%) 74 - Tags Unknown Companies Unknown 有一根长度为 n 个单位的木棍，棍上从 0 到 n 标记了若干位置。例如，长度为 6 的棍子可以标记如下： 给你一个</description></item><item><title>最大三角形面积</title><link>https://justice.bj.cn/post/leetcode/doc/812.%E6%9C%80%E5%A4%A7%E4%B8%89%E8%A7%92%E5%BD%A2%E9%9D%A2%E7%A7%AF/</link><pubDate>Mon, 13 Mar 2023 19:48:33 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/812.%E6%9C%80%E5%A4%A7%E4%B8%89%E8%A7%92%E5%BD%A2%E9%9D%A2%E7%A7%AF/</guid><description>最大三角形面积 Category Difficulty Likes Dislikes algorithms Easy (68.49%) 181 - Tags Unknown Companies Unknown 给你一个由 X-Y 平面上的点组成的数组 points ，其中 points[i] = [xi, yi] 。从其中取任意三个不同的点组成三角形，返回能组成的最</description></item><item><title>二叉树的层序遍历</title><link>https://justice.bj.cn/post/leetcode/doc/102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Mon, 13 Mar 2023 19:36:05 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>二叉树的层序遍历 Category Difficulty Likes Dislikes algorithms Medium (60.88%) 391 - Tags tree | breadth-first-search Companies amazon | apple | bloomberg | facebook | linkedin | microsoft 给定一个二叉树，返回其按层次遍历的节点值。 （即逐层地，从左到右访问所有节点</description></item><item><title>滑动窗口最大值</title><link>https://justice.bj.cn/post/leetcode/doc/239.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/</link><pubDate>Sun, 12 Mar 2023 17:39:57 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/239.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/</guid><description>滑动窗口最大值 Category Difficulty Likes Dislikes algorithms Hard (49.73%) 1350 - Tags heap | sliding-window Companies amazon | google | zenefits 给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只</description></item><item><title>二叉搜索树迭代器</title><link>https://justice.bj.cn/post/leetcode/doc/173.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8/</link><pubDate>Sun, 12 Mar 2023 09:46:04 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/173.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid><description>二叉搜索树迭代器 Category Difficulty Likes Dislikes algorithms Medium (80.79%) 582 - Tags stack | tree | design Companies facebook | google | linkedin | microsoft 实现一个二叉搜索树迭代器类BSTIterator ，表示一个按中序遍历二叉搜索树</description></item><item><title>输出二叉树</title><link>https://justice.bj.cn/post/leetcode/doc/655.%E8%BE%93%E5%87%BA%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sun, 12 Mar 2023 09:46:04 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/655.%E8%BE%93%E5%87%BA%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>输出二叉树 Category Difficulty Likes Dislikes algorithms Medium (69.52%) 207 - Tags tree Companies Unknown 给你一棵二叉树的根节点 root ，请你构造一个下标从 0 开始、大小为 m x n 的字符串矩阵 res ，用以表示树的 格式化布局 。</description></item><item><title>奇偶跳</title><link>https://justice.bj.cn/post/leetcode/doc/975.%E5%A5%87%E5%81%B6%E8%B7%B3/</link><pubDate>Wed, 08 Mar 2023 20:30:23 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/975.%E5%A5%87%E5%81%B6%E8%B7%B3/</guid><description>奇偶跳 Category Difficulty Likes Dislikes algorithms Hard (47.96%) 163 - Tags tree | recursion Companies Unknown 给定一个整数数组 A，你可以从某一起始索引出发，跳跃一定次数。在你跳跃的过程中，第 1、3、5&amp;hellip</description></item><item><title>字符串解码</title><link>https://justice.bj.cn/post/leetcode/doc/394.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81/</link><pubDate>Wed, 08 Mar 2023 19:49:11 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/394.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81/</guid><description>字符串解码 Category Difficulty Likes Dislikes algorithms Medium (56.01%) 1124 - Tags stack | depth-first-search Companies google | yelp 给定一个经过编码的字符串，返回它解码后的字符串。 编码规则为: k[encoded_string]，</description></item><item><title>零钱兑换</title><link>https://justice.bj.cn/post/leetcode/doc/322.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/</link><pubDate>Wed, 08 Mar 2023 19:49:11 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/322.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/</guid><description>零钱兑换 Category Difficulty Likes Dislikes algorithms Medium (46.30%) 2307 - Tags dynamic-programming Companies Unknown 给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。 计算并返回可以凑成总金额所需的 最少的硬</description></item><item><title>种花问题</title><link>https://justice.bj.cn/post/leetcode/doc/605.%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 04 Mar 2023 17:39:15 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/605.%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98/</guid><description>种花问题 Category Difficulty Likes Dislikes algorithms Easy (32.62%) 529 - Tags array Companies linkedin 假设有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花不能种植在相邻的地块上，它们会争夺水源，</description></item><item><title>LFU缓存</title><link>https://justice.bj.cn/post/leetcode/doc/460.lfu%E7%BC%93%E5%AD%98/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/460.lfu%E7%BC%93%E5%AD%98/</guid><description>LFU缓存 Category Difficulty Likes Dislikes algorithms Hard (34.03%) 81 - Tags design Companies amazon | google 设计并实现最不经常使用（LFU）缓存的数据结构。它应该支持以下操作：get 和 put。 get(key) - 如果键存在于</description></item><item><title>LRU缓存机制</title><link>https://justice.bj.cn/post/leetcode/doc/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid><description>LRU缓存机制 Category Difficulty Likes Dislikes algorithms Medium (44.70%) 332 - Tags design Companies amazon | bloomberg | facebook | google | microsoft | palantir | snapchat | twitter | uber | yahoo | zenefits 运用你所掌握的数据结构，设计和实现一个 LRU (最近最少使用) 缓存</description></item><item><title>只出现一次的数字 III</title><link>https://justice.bj.cn/post/leetcode/doc/260.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97iii/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/260.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97iii/</guid><description>只出现一次的数字 III Category Difficulty Likes Dislikes algorithms Medium (73.51%) 620 - Tags bit-manipulation Companies Unknown 给定一个整数数组 nums，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的</description></item><item><title>排列硬币</title><link>https://justice.bj.cn/post/leetcode/doc/441.%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/441.%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81/</guid><description>排列硬币 Category Difficulty Likes Dislikes algorithms Easy (45.46%) 262 - Tags math | binary-search Companies Unknown 你总共有 n 枚硬币，并计划将它们按阶梯状排列。对于一个由 k 行组成的阶梯，其第 i 行必须正好有 i 枚硬币。阶梯</description></item></channel></rss>