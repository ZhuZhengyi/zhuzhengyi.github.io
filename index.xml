<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Justice的小站</title><link>https://justice.bj.cn/</link><description>Recent content on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 07 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://justice.bj.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Justice's Blog</title><link>https://justice.bj.cn/homepage/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/about/</guid><description>&lt;h2 id="self-introduction">Self Introduction&lt;/h2>
&lt;p>Cras ex dui, tristique a libero eget, consectetur semper ligula. Nunc augue arcu, malesuada a nisi et, molestie finibus metus. Sed lacus odio, ultricies a nisl vitae, sollicitudin tempor ipsum. Vivamus quis feugiat arcu. Sed mi nunc, efficitur quis tellus vitae, posuere mattis metus. Phasellus in mattis dui. Nullam blandit, augue non ullamcorper dapibus, lacus dui molestie massa, in iaculis purus lectus eu lectus. Duis hendrerit lacinia tellus, sit amet feugiat dolor placerat id. Aenean ac velit massa. Vivamus feugiat dui at magna viverra, ut dictum nunc rutrum. Duis eget sapien finibus, lobortis orci id, vestibulum tellus. Maecenas lobortis urna libero, quis fermentum lectus lobortis nec. Nullam laoreet volutpat libero, ac mattis magna ullamcorper quis. Duis eget ipsum eu nisi mattis cursus et vitae turpis.&lt;/p>
&lt;p>Aliquam pretium diam eget leo feugiat finibus. Donec malesuada commodo ipsum. Aenean a massa in lacus venenatis vestibulum. Duis vel sem quis elit iaculis consectetur et quis dolor. Morbi eu ipsum hendrerit, malesuada ante sed, dapibus est. Suspendisse feugiat nulla ut gravida convallis. Phasellus id massa posuere, rhoncus justo ut, porttitor dolor. Nulla ultrices malesuada egestas. Nunc fermentum tincidunt sem ac vulputate. Donec mollis sollicitudin justo eget varius. Donec ornare velit et felis blandit, id molestie sapien lobortis. Morbi eget tristique justo. Mauris posuere, nibh eu laoreet ultricies, ligula erat iaculis sapien, vel dapibus lacus libero ut diam. Etiam viverra ante felis, et scelerisque nunc pellentesque vitae. Praesent feugiat dictum molestie.&lt;/p>
&lt;h2 id="details">Details&lt;/h2>
&lt;p>Nunc pellentesque vitae:&lt;/p>
&lt;ul>
&lt;li>Morbi accumsan nibh efficitur diam molestie, non dignissim diam facilisis.&lt;/li>
&lt;li>Donec dignissim leo in mollis faucibus.&lt;/li>
&lt;li>Donec blandit lacus a pellentesque fermentum.&lt;/li>
&lt;/ul>
&lt;p>Donec mollis sollicitudin:&lt;/p>
&lt;ul>
&lt;li>Nunc dictum purus ornare purus consectetur, eu pellentesque massa ullamcorper.&lt;/li>
&lt;li>Aliquam eu leo vitae justo aliquam tincidunt.&lt;/li>
&lt;li>Fusce non massa id augue interdum feugiat sed et nulla.&lt;/li>
&lt;li>Vivamus molestie augue in tristique laoreet.&lt;/li>
&lt;/ul></description></item><item><title>Pages</title><link>https://justice.bj.cn/homepage/pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/pages/</guid><description/></item><item><title>Experiences</title><link>https://justice.bj.cn/homepage/experiences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/experiences/</guid><description/></item><item><title>Vintage</title><link>https://justice.bj.cn/homepage/vintage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/vintage/</guid><description/></item><item><title>Blank</title><link>https://justice.bj.cn/homepage/blank/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/blank/</guid><description>
&lt;div style="text-align:center">
&lt;p>Write anything you like here!&lt;/p>
&lt;/div></description></item><item><title>CubeFS Bcache</title><link>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-bcache/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-bcache/</guid><description>&lt;h1 id="cubefs-bcache">CubeFS Bcache&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>CubeFS-BlobStore</title><link>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore/</guid><description>&lt;h1 id="cubefs-blobstore">CubeFS-BlobStore&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>CubeFS-BlobStore是一个高可靠、高可用、低成本、支持超大规模(EB)的分布式存储系统。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>采用纠删码中的Reed-Solomon编码，对比三副本，以更低的存储成本提供更高的数据耐久性保障，支持多种纠删码模式和多可用区部署，&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同时针对小文件做了专门优化，可满足不同业务场景的存储需求。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="架构">架构&lt;/h2>
&lt;p>&lt;img src="https://gitee.com/justice/gitnote-img-bed/raw/master/2022/02/08-10-42-13-2022-02-08-10-42-09-image.png" alt="">&lt;/p>
&lt;h2 id="组件">组件&lt;/h2>
&lt;p>blobstore包含如下组件：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>模块&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>功能&lt;/th>
&lt;th>依赖组件&lt;/th>
&lt;th>本地存储&lt;/th>
&lt;th>部署&lt;/th>
&lt;th>部署数量&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ClusterMgr&lt;/td>
&lt;td>集群管理&lt;/td>
&lt;td>负责集群管理和卷的生成&lt;/td>
&lt;td>consul&lt;/td>
&lt;td>有&lt;/td>
&lt;td>可跨机房部署，多机房&lt;/td>
&lt;td>&amp;gt;=3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Allocator&lt;/td>
&lt;td>集群管理代理&lt;/td>
&lt;td>提供数据写入资源id的分配&lt;/td>
&lt;td>ClusterMgr&lt;/td>
&lt;td>无&lt;/td>
&lt;td>&lt;/td>
&lt;td>&amp;gt;=1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access&lt;/td>
&lt;td>接入模块&lt;/td>
&lt;td>对外提供数据读、写和删除接口&lt;/td>
&lt;td>Redis,consul&lt;/td>
&lt;td>无&lt;/td>
&lt;td>单节点部署，一个机房部署一个，&lt;/td>
&lt;td>&amp;gt;=1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>BlobNode&lt;/td>
&lt;td>blob存储&lt;/td>
&lt;td>提供存储资源&lt;/td>
&lt;td>ClusterMgr&lt;/td>
&lt;td>有&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Worker&lt;/td>
&lt;td>blob任务执行模块&lt;/td>
&lt;td>卷修补、迁移和回收任务执行模块&lt;/td>
&lt;td>BlobNode，Scheduler&lt;/td>
&lt;td>无&lt;/td>
&lt;td>&lt;/td>
&lt;td>&amp;gt;=1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scheduler&lt;/td>
&lt;td>异步任务调度中心&lt;/td>
&lt;td>卷修补、迁移和回收任务的生成和调度&lt;/td>
&lt;td>mongodb&lt;/td>
&lt;td>无&lt;/td>
&lt;td>一个cluster至少一个&lt;/td>
&lt;td>&amp;gt;=1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MQProxy&lt;/td>
&lt;td>异步消息代理&lt;/td>
&lt;td>修补和删除操作消息保存模块,用于后续异步执行&lt;/td>
&lt;td>kafka&lt;/td>
&lt;td>无&lt;/td>
&lt;td>&lt;/td>
&lt;td>&amp;gt;=1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tinker&lt;/td>
&lt;td>后台数据整理管理模块&lt;/td>
&lt;td>修补和删除操作异步执行模块&lt;/td>
&lt;td>kafka，mongodb&lt;/td>
&lt;td>无&lt;/td>
&lt;td>&lt;/td>
&lt;td>&amp;gt;=1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cli&lt;/td>
&lt;td>cli工具&lt;/td>
&lt;td>提供cli管理操作&lt;/td>
&lt;td>consul，redis&lt;/td>
&lt;td>无&lt;/td>
&lt;td>&lt;/td>
&lt;td>&amp;gt;=&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Consul&lt;/td>
&lt;td>注册管理&lt;/td>
&lt;td>提供节点、组件注册；&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>必选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MongoDB&lt;/td>
&lt;td>mongodb&lt;/td>
&lt;td>为scheduler提供存储&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>必须&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Kafaka&lt;/td>
&lt;td>消息队列服务&lt;/td>
&lt;td>scheduler任务调度消息队列&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>必须&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Redis&lt;/td>
&lt;td>缓存服务&lt;/td>
&lt;td>为access,cli访问clustermgr提供缓存加速&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>可选&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Zookeeper&lt;/td>
&lt;td>&lt;/td>
&lt;td>为kafka提供注册服务&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;img src="https://gitee.com/justice/gitnote-img-bed/raw/master/2022/02/28-16-20-30-2022-02-28-16-20-19-image.png" alt="">&lt;/p>
&lt;h2 id="资源">资源&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Region(区域)&lt;/strong>: 一个region可包含多个cluster；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Cluster(集群)&lt;/strong>：一个Cluster是由多个相同cluster_id的clustermgr组成，可以提供完整的Blobstore服务的单位。cluster可以跨机房部署，多个跨机房clustermgr通过raft组成一个cluster；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Idc(数据中心/机房)&lt;/strong>: 一个cluster可以跨多个idc部署；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Rack(机架)&lt;/strong>：机房内一个机柜; 同一机架内的机器在一个交换机内，可以拥有很低的网络访问延迟和很高的网络带宽；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>AZ(Available Zone)&lt;/strong>：EC 中数据块的有效分区数，一个集群中，AZ的数量要和 IDC个数匹配；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Node(节点)&lt;/strong>: 对应一台物理机或容器实例；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Disk(物理磁盘)&lt;/strong>: 一块已格式化好，并被挂载到某一目录的物理磁盘或一个目录；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Chunk(数据簇)&lt;/strong>：每个Disk的空间被划分为多个Chunk，Chunk对应一个Chunk File；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Volume(逻辑卷)&lt;/strong>: 逻辑卷是面对用户的存储资源管理抽象视图，一个Volume包含多个Unit；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Unit(逻辑卷数据单元)&lt;/strong>: 逻辑卷的数据组织单元。Unit主要包含了Vuid和bid两个字段；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Location(定位)&lt;/strong>：数据在blobstore中的定位，一个location中的数据由多个blob组成；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Blob(数据段)&lt;/strong>: Blob是location中的一段数据，每个Blob是EC编解码的一个数据块, Blob最大默认:4MB；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Shard(数据分片)&lt;/strong>：一块Blob数据在ec encode时，根据编码策略，切分成多个分片Shard，每个分片称为一个shard；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="erasercode">EraserCode&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// ec参数
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Tactic&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">N&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="c1">//数据块个数；
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">M&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="c1">//校验块个数;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">L&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="c1">//LRC中，本地校验块个数；
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">AZCount&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="c1">//分区个数;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">PutQuorum&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="c1">//写操作时，最少写成功的数据块个数,
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// 为了保证写入时，有一个az挂掉后还能恢复数，最小写入块数必须&amp;gt;=(N+M)/AZCount+N
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">GetQuorum&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="c1">//读操作时，最少读成功的数据块个数;
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">MinShardSize&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="c1">//每个数据块最小大小；
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//当1en(data) &amp;lt; MinShardSize*N, 每个shard大小为MinShardSize, 后面不够的填0
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//当len(data) &amp;gt; MinShardSize*N, 每个shard大小为[len(data)/N], 后面填0;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 定义的ec算法
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">constCodeModeTactic&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">CodeMode&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nx">Tactic&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">EC15P12&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC6P6&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC16P20L2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCounect&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">34&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC6P10L2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="c1">// single az
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">EC12P4&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC16P4&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC3P3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC10P4&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC6P3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="c1">// for env test
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">EC6P3L3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC6P6Align0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize0B&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC6P6Align512&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize512B&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nx">EC4P4L2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">M&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">L&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">AZCount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">PutQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GetQuorum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">MinShardSize&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">alignSize2KB&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//vol layout ep:EC6P10L2
&lt;/span>&lt;span class="c1">//|----N------|--------M----------------|--L--|
&lt;/span>&lt;span class="c1">//|0,1,2,3,4,5|6,7,8,9,10,11,12,13,14,15|16,17|
&lt;/span>&lt;span class="c1">// global stripe:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15], n=6 m=10
&lt;/span>&lt;span class="c1">// two local stripes:
&lt;/span>&lt;span class="c1">// local stripe1:[0,1,2, 6, 7, 8, 9,10, 16] n=8 m=1
&lt;/span>&lt;span class="c1">// local stripe2:[3,4,5, 11,12,13,14,15, 17] n=8 m=1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="table">Table&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// normaldb
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">scopeCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;scope&amp;#34;&lt;/span> &lt;span class="c1">//分配的bid范围
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">diskCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;disk&amp;#34;&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">configCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;config&amp;#34;&lt;/span>
&lt;span class="nx">diskDropCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;disk_drop&amp;#34;&lt;/span>
&lt;span class="nx">serviceCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;service&amp;#34;&lt;/span>
&lt;span class="nx">diskStatusIndexCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;disk-status&amp;#34;&lt;/span>
&lt;span class="nx">diskHostIndexCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;disk-host&amp;#34;&lt;/span>
&lt;span class="nx">diskIDCIndexCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;disk-idc&amp;#34;&lt;/span>
&lt;span class="nx">diskIDCRackIndexCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;disk-idc-rack&amp;#34;&lt;/span>
&lt;span class="c1">// volumedb
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">volumeCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;volume&amp;#34;&lt;/span>
&lt;span class="nx">volumeUnitCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;volume_unit&amp;#34;&lt;/span>
&lt;span class="nx">volumeTokenCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;volume_token&amp;#34;&lt;/span>
&lt;span class="nx">volumeTaskCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;volume_task&amp;#34;&lt;/span>
&lt;span class="nx">transitedVolumeCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;transited_volume&amp;#34;&lt;/span>
&lt;span class="nx">transitedVolumeUnitCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;transited_volume_unit&amp;#34;&lt;/span>
&lt;span class="nx">volumeUnitDiskIDIndexCF&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;volumeUnit_DiskID&amp;#34;&lt;/span>
&lt;span class="c1">// raftdb
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="组件详情">组件详情&lt;/h2>
&lt;h3 id="access访问接入点">Access(访问接入点)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>access是面向client，提供访问api接口的组件；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>access为无状态节点；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个access为一个&lt;code>region&lt;/code>下的所有&lt;code>cluster&lt;/code>提供访问接入点;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>access主要提供如下rpc：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>/put: put数据，动态分配location, 默认最大size：5GB;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/putAt: 将数据put到指定的location；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/get: 根据location读取数据；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/delete：删除指定location的数据；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/deleteblob: 删除指定blob;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/alloc: 分配blob;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/sign: 签名;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>启动时，会从&lt;code>consul_agent_addr&lt;/code>获取配置region的cluster信息加载到当前节点内存中;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// Location: 一次put的数据位置信息；
&lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Location&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">_&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;span class="nx">ClusterID&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClusterID&lt;/span> &lt;span class="s">`json:&amp;#34;cluster_id&amp;#34;`&lt;/span>
&lt;span class="nx">CodeMode&lt;/span> &lt;span class="nx">codemode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CodeMode&lt;/span> &lt;span class="s">`json:&amp;#34;code_mode&amp;#34;`&lt;/span>
&lt;span class="nx">Size&lt;/span> &lt;span class="kt">uint64&lt;/span> &lt;span class="s">`json:&amp;#34;size&amp;#34;`&lt;/span>
&lt;span class="nx">BlobSize&lt;/span> &lt;span class="kt">uint32&lt;/span> &lt;span class="s">`json:&amp;#34;blob_size&amp;#34;`&lt;/span>
&lt;span class="nx">Crc&lt;/span> &lt;span class="kt">uint32&lt;/span> &lt;span class="s">`json:&amp;#34;crc&amp;#34;`&lt;/span>
&lt;span class="nx">Blobs&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">SliceInfo&lt;/span> &lt;span class="s">`json:&amp;#34;blobs&amp;#34;`&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">Blob&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Bid&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BlobID&lt;/span>
&lt;span class="nx">Vid&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Vid&lt;/span>
&lt;span class="nx">Size&lt;/span> &lt;span class="kt">uint32&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">SliceInfo&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">_&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;span class="nx">MinBid&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">BlobID&lt;/span> &lt;span class="s">`json:&amp;#34;min_bid&amp;#34;`&lt;/span>
&lt;span class="nx">Vid&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Vid&lt;/span> &lt;span class="s">`json:&amp;#34;vid&amp;#34;`&lt;/span>
&lt;span class="nx">Count&lt;/span> &lt;span class="kt">uint32&lt;/span> &lt;span class="s">`json:&amp;#34;count&amp;#34;`&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">MaxLocationBlobs&lt;/span> &lt;span class="kt">uint32&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="c1">//location中最大blob数量，4个
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">MaxDeleteLocations&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1024&lt;/span> &lt;span class="c1">//delete请求中最多包含location数：1024
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">MaxBlobSize&lt;/span> &lt;span class="kt">uint32&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">25&lt;/span> &lt;span class="c1">// location中单个blob最大size：32MB
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>配置文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="err">//access.conf&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;bind_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;:9500&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auditlog&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;logdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/tmp/access/&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;consul_agent_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:8500&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span>
&lt;span class="nt">&amp;#34;service_register&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;consul_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:8500&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;service_ip&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;x.x.x.x&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;stream&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;idc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;idc&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;cluster_config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;region&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;region&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="access-client">Access Client&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>access client 为访问access 提供api；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>access client api通过配置文件中的&lt;code>PriorityAddrs&lt;/code>或consul 来连接access；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每次api发送请求时，会从发现的所有access中随机选择&lt;code>MaxHostRetry&lt;/code>(默认：3)个依次给access发送api请求，如果一个请求发送成功，则成功返回；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>access client 主要 提供3个api：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Put(): 写入数据, 返回数据location；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Get(): 根据location，获取数据内容；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Delete(): 删除指定location的数据；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// API access api for s3
&lt;/span>&lt;span class="c1">// To trace request id, the ctx is better WithRequestID(ctx, rid).
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">API&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Put object once if size is not greater than MaxSizePutOnce, otherwise put blobs one by one.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// return a location and map of hash summary bytes you excepted.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nf">Put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">args&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">PutArgs&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">location&lt;/span> &lt;span class="nx">Location&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">hashSumMap&lt;/span> &lt;span class="nx">HashSumMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Get object, range is supported.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nf">Get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">args&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">GetArgs&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">body&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ReadCloser&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Delete all blobs in these locations.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// return failed locations which have yet been deleted if error is not nil.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nf">Delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">args&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">DeleteArgs&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">failedLocations&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">Location&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="allocator资源分配器">Allocator(资源分配器)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>allocator主要为accessor提供volume/alloc, list两个接口，负责vid,bid的分配；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>allocator启动时，将自身组成到clustermgr的服务中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>allocator内置了&lt;code>volumeMgr&lt;/code>, &lt;code>bidmgr&lt;/code>；&lt;/p>
&lt;ul>
&lt;li>
&lt;p>volumeMgr：负责volume的分配的管理。启动时，开启后台线程，将clusterMgr上的所有&lt;code>volInfo&lt;/code>加载到allocate内存中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bidMgr：负责volume 的bid range分配；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>rpc：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>/volume/alloc:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/volume/list:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>配置文件：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="err">//&lt;/span> &lt;span class="err">allocator.conf&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;bind_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;:9100&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:9100&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;cluster_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;idc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;z0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;clustermgr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hosts&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;http://127.0.0.1:9998&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;http://127.0.0.1:9999&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;http://127.0.0.1:10000&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;log&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;level&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;auditlog&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;logdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/tmp/allocator/&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="clustermgr集群管理器">ClusterMgr(集群管理器)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>clustermgr用于集群相关信息的管理；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>clustermgr内部由多个管理器组成，包括：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ServiceMgr(服务管理)：管理集群中的各个Service, 包括：allocator，mqproxy, tinker；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ConfigMgr(配置管理): cluster_config, 集群的全局配置；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>VolumeMgr(逻辑卷管理)：负责volume的allocate，状态监测等, ;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DiskMgr(磁盘管理)：管理集群内所有blobnode磁盘；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ScopeMgr(Bid管理)：id分配管理；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>clustermgr内置kvdb(目前为rocksdb)来保存各种管理器的相关数据；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多个clustermgr通过raft保证kvdb数据在多个节点的同步以保证高可用；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>clustermgr周期性(参数&lt;code>cluster_report_interval_s&lt;/code>，默认：60s)的将clusterinfo汇报给&lt;code>consul_agent_addr&lt;/code>上，以&lt;code>ebs/&amp;lt;region&amp;gt;/clusters/&amp;lt;clusterID&amp;gt;:&amp;lt;clusterInfo&amp;gt;&lt;/code>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>leader clustermgr周期性的(默认: 10s)检查并更新disk状态；&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="err">//&lt;/span> &lt;span class="err">clustermgr.conf&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;max_procs&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;bind_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;:9998&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;cluster_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;idc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;z0&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;region&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;test-region&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;readonly&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;chunk_size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">16777216&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;consul_agent_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1:8500&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//option,&lt;/span> &lt;span class="err">default:&lt;/span> &lt;span class="err">127.0.0.1:8500&lt;/span>
&lt;span class="nt">&amp;#34;log&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;level&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;auditlog&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;logdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/tmp/clustermgr/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;backup&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;log_file_suffix&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;.log&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;rotate_new&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;chunkbits&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">14&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;enable_auth&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;testsecret&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;normal_db_path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;/tmp/normaldb0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;normal_db_option&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;create_if_missing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;code_mode_policies&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;mode_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;EC3P3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;min_size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;max_size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;size_ratio&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">0.2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;enable&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;mode_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;EC6P6&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;min_size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1025&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;max_size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">2048&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;size_ratio&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">0.8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;enable&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;volume_mgr_config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;volume_db_path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;/tmp/volumedb0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;volume_db_option&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;create_if_missing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;min_allocable_volume_count&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;each_allocator_volume_threshold&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;retain_time_s&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">600&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;cluster_config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;disk_repair&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Disable&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;balance&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Disable&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;disk_drop&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Disable&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;blob_delete&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Disable&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;shard_repair&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Disable&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;vol_inspect&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;Disable&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;init_volume_num&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;volume_reserve_size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10485760&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;data_node_heartbeat_interval_s&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">60&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;raft_config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;raft_db_path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/tmp/raftdb0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;raft_db_option&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;create_if_missing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;snapshot_patch_num&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">64&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;server_config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;nodeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;listen_port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10110&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;raft_wal_dir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/tmp/raftwal0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;peers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1:10110&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1:10111&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nt">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1:10112&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;raft_node_config&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span>
&lt;span class="nt">&amp;#34;flush_num_interval&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;flush_time_interval_s&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;truncate_num_interval&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;node_protocol&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;nodes&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1:9998&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nt">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1:9999&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nt">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1:10000&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;disk_mgr_config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;refresh_interval_s&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;rack_aware&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host_aware&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="kc">false&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="cluster集群">Cluster(集群)&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>一个cluster由多个cluster_id相同的多个clustermgr节点组成；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个cluster中的多个clustermgr通过raft组成一个raft group进行数据复制同步；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个region中可包含多个cluster，同一region下的cluster注册为consul下的多个服务；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据put时，access根据配置的region，会随机在region下选择一个cluster来put数据，返回的location中包含cluster_id用以指明所在cluster；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="volume卷">Volume(卷)&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Volume是数据管理逻辑单元，是面向客户端的数据视图；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基本信息&lt;/p>
&lt;ul>
&lt;li>
&lt;p>vid(32bits)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CodeMode: 编码模式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Status: 状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HealthScore: 健康分&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Total: 总空间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Free: 可用空间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Used: 已使用空间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CreateByNodeID: 创建NodeID&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Volume Status&lt;/p>
&lt;ul>
&lt;li>
&lt;p>idle: volume刚创建时，尚未被分配的volume状态；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>active: volume分配给某一个allocator后的状态；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>lock:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>unlocking&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">//卷信息
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">VolumeInfo&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Units&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">Unit&lt;/span>
&lt;span class="nx">VolumeInfoBase&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//卷单元
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Unit&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Vuid&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Vuid&lt;/span>
&lt;span class="nx">DiskID&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DiskID&lt;/span>
&lt;span class="nx">Host&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// clustermgr/srv.go
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">BidScopeName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;bid&amp;#34;&lt;/span>
&lt;span class="nx">MaxBidCount&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">100000&lt;/span>
&lt;span class="nx">DefaultChunkSize&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">17179869184&lt;/span>
&lt;span class="nx">DefaultVolumeReserveSize&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">10485760&lt;/span>
&lt;span class="nx">defaultClusterReportIntervalS&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">60&lt;/span>
&lt;span class="nx">defaultHeartbeatNotifyIntervalS&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="nx">defaultMaxHeartbeatNotifyNum&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2000&lt;/span>
&lt;span class="nx">defaultMetricReportIntervalM&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="blobnode">BlobNode&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>BlobNode是blob管理节点，提供数据的blob存储管理；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>blobnode启动时，将扫描并加载配置文件下的disk，然后后&lt;code>clusterMgr&lt;/code>上已有的disk进行对比，如果&lt;code>clusterMgr&lt;/code>中&lt;code>not found&lt;/code>，则&lt;code>AddDisk&lt;/code>到&lt;code>clusterMgr&lt;/code>的管理器中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动时开启如下全局协程：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>loopHeartbeatToClusterMgr(): 周期性(默认：30s)维持和&lt;code>clusterMgr&lt;/code>间的心跳；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>loopReportChunkInfoToClusterMgr()：周期性(默认：57s)向&lt;code>clusterMgr&lt;/code>汇报chunkInfo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>loopGcRubbishChunkFile(): 周期(默认：60min)检查chunkfile，执行垃圾回收任务；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>loopCleanExpiredStatFile(): 周期()清理过期stat文件(/tmp/shm/目录下的iostat文件)；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="blobnode中disk">blobnode中disk&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>blobnode中disk由配置文件中&lt;code>disks&lt;/code>项指定，一个blobnode可以包含多个disk;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>blobnode启动时，先通过rpc从&lt;code>clusterMgr&lt;/code>获取该host所有已经注册的disk；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后根据配置文件, 逐个加载disk；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每个disk包含.sys, meta等子目录，&lt;/p>
&lt;ul>
&lt;li>
&lt;p>.sys目录里面保存disk的格式相关信息；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>.meta里面使用rocksdb来记录chunk相关的元数据信息；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>.data目录包含chunkfile;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>blobnode disk加载流程：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过配置文件获取disk根目录；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>加载磁盘format信息。通过读取.sys目录下的format.json内获取disk format信息(包括DiskID), 如果该文件不存在，则从&lt;code>clusterMgr&lt;/code>分配一个新的DiskID, 并注册disk到clusterMgr的table中;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>打开meta目录下的rocksdb，初始化化superblock;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从meta db中读取&lt;code>diskinfo&lt;/code>来加载diskinfo；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置disk iostat 相关数据结构；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动loop相关后台协程&lt;/p>
&lt;/li>
&lt;li>
&lt;ul>
&lt;li>
&lt;p>&lt;code>ds.loopCleanChunk&lt;/code>: 清理已released 的chunk；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ds.loopCompactFile&lt;/code>: compact chunk file;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ds.loopDiskUsage&lt;/code>:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ds.loopCleanTrash&lt;/code>:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ds.loopMetricReport&lt;/code>:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>加载好的diskStorage记录在map[diskID]&lt;code>Disks&lt;/code> 中;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>blobnode rpc:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>/chunk/create&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/chunk/release&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/chunk/compact&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;hellip;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/shard/get/&amp;hellip;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/shard/put/&amp;hellip;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/shard/delete/&amp;hellip;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="配置文件">配置文件&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="err">//&lt;/span> &lt;span class="err">blobnode.conf&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;bind_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;:8899&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;cluster_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;idc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;z0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;rack&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;testrack&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:8899&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;disks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./run/disks/disk1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auto_format&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;max_chunks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1024&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./run/disks/disk2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auto_format&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;max_chunks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1024&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./run/disks/disk3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auto_format&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;max_chunks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1024&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./run/disks/disk4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auto_format&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;max_chunks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1024&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./run/disks/disk5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auto_format&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;max_chunks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1024&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./run/disks/disk6&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;auto_format&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;max_chunks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1024&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;clustermgr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hosts&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;http://127.0.0.1:9998&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;http://127.0.0.1:9999&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;http://127.0.0.1:10000&amp;#34;&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;log&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;level&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;filename&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./run/blobnode.log&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;auditlog&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;logdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./run/auditlog&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="存储格式">存储格式&lt;/h4>
&lt;ul>
&lt;li>volume-&amp;gt;chunk&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://gitee.com/justice/gitnote-img-bed/raw/master/2022/02/28-17-40-09-2022-02-28-17-39-53-image.png" alt="">&lt;/p>
&lt;ul>
&lt;li>chunk-&amp;gt;shard&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://gitee.com/justice/gitnote-img-bed/raw/master/2022/02/28-17-41-54-2022-02-28-17-41-44-image.png" alt="">&lt;/p>
&lt;h4 id="disk磁盘">Disk(磁盘)&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Disk是BlobNode节点上一个格式化后挂载到某一目录的物理磁盘，用来存储具体的数据；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Disk基本信息包括：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>DiskID: 磁盘ID(uint32), 1~1^31-1；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ClusterID: 所属ClusterID(uint32)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Idc: Idc&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Path：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Host：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Status&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ReadOnly: 是否只读&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Disk Status包括：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Normal: 正常&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Broken:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Repairing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Repaired&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Droped&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// disk format
&lt;/span>&lt;span class="c1">// blobnode/core/format.go
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;span class="cm"> * ${diskRoot}/
&lt;/span>&lt;span class="cm"> * - .sys/ //disk
&lt;/span>&lt;span class="cm"> * - .format.json //disk 格式信息；
&lt;/span>&lt;span class="cm"> * - .format.json.tmp
&lt;/span>&lt;span class="cm"> * - .trash/ //回收站，被清理的chunk
&lt;/span>&lt;span class="cm"> * - data/ //disk数据信息, chunk file
&lt;/span>&lt;span class="cm"> - &amp;lt;chunkID1&amp;gt;file // chunk file 1 (最多8196个chunk)
&lt;/span>&lt;span class="cm"> - &amp;lt;chunkID2&amp;gt;file // chunk file 2
&lt;/span>&lt;span class="cm"> * - meta/ //disk元信息
&lt;/span>&lt;span class="cm"> - superblock/ //disk超级块，disk meta kvdb
&lt;/span>&lt;span class="cm">*/&lt;/span>
&lt;span class="c1">// 磁盘格式信息受保护域，
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">FormatInfoProtectedField&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">DiskID&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DiskID&lt;/span> &lt;span class="s">`json:&amp;#34;diskid&amp;#34;`&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Version&lt;/span> &lt;span class="kt">uint8&lt;/span> &lt;span class="s">`json:&amp;#34;version&amp;#34;`&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Ctime&lt;/span> &lt;span class="kt">int64&lt;/span> &lt;span class="s">`json:&amp;#34;ctime&amp;#34;`&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Format&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`json:&amp;#34;format&amp;#34;`&lt;/span> &lt;span class="c1">//disk格式，当前只支持fs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">//磁盘格式信息
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">FormatInfo&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">FormatInfoProtectedField&lt;/span>
&lt;span class="nx">CheckSum&lt;/span> &lt;span class="kt">uint32&lt;/span> &lt;span class="s">`json:&amp;#34;check_sum&amp;#34;`&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//disk metadb(rocksdb)
&lt;/span>&lt;span class="c1">// k ---- v
&lt;/span>&lt;span class="c1">// disk/&amp;lt;diskid&amp;gt; [diskid]
&lt;/span>&lt;span class="c1">// chunk/&amp;lt;chunkid&amp;gt; [chunkid]
&lt;/span>&lt;span class="c1">// vuid/&amp;lt;vuid&amp;gt; [vuid]
&lt;/span>&lt;span class="c1">// diskinfo [diskmeta]
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">//DiskMeta
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">DiskMeta&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">FormatInfo&lt;/span>
&lt;span class="nx">Host&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`json:&amp;#34;host&amp;#34;`&lt;/span>
&lt;span class="nx">Path&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="s">`json:&amp;#34;path&amp;#34;`&lt;/span>
&lt;span class="nx">Status&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DiskStatus&lt;/span> &lt;span class="s">`json:&amp;#34;status&amp;#34;`&lt;/span>
&lt;span class="nx">Registered&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="s">`json:&amp;#34;registered&amp;#34;`&lt;/span>
&lt;span class="nx">Readonly&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="s">`json:&amp;#34;readonly&amp;#34;`&lt;/span>
&lt;span class="nx">Mtime&lt;/span> &lt;span class="kt">int64&lt;/span> &lt;span class="s">`json:&amp;#34;mtime&amp;#34;`&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="chunk">Chunk&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Chunk是对Disk上具体数据的一种抽象，当前的chunk实现为一个file；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>chunk file 位于disk的data目录下, 以chunkID为名的file；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>chunkID组成：&lt;code>vuid+&amp;lt;创建chunk时的时间戳&amp;gt;&lt;/code>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每个chunk由多个连续的shard组成，&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>
&lt;p>一个disk默认最多chunk数&lt;code>DefaultMaxChunks&lt;/code>：8192;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个chunk默认最大size&lt;code>DefaultMaxChunk&lt;/code>: 1TiB;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>默认chunk size&lt;code>DefaultChunkSize&lt;/code>：16GiB;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>
&lt;p>chunk status:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Default:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Normal:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ReadOnly:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Release:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// cubufs-blobstore/blobnode/core/shard.go
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// chunk datafile format:
&lt;/span>&lt;span class="c1">// --------------
&lt;/span>&lt;span class="c1">// | chunk header | (4k)
&lt;/span>&lt;span class="c1">// --------------
&lt;/span>&lt;span class="c1">// | shard | ----------------------
&lt;/span>&lt;span class="c1">// | shard | | header (32 Bytes) |
&lt;/span>&lt;span class="c1">// | shard | ----&amp;gt; | data (...) |
&lt;/span>&lt;span class="c1">// | shard | | footer (8 Bytes) |
&lt;/span>&lt;span class="c1">// | .... | ----------------------
&lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">// Chunkdata header format:
&lt;/span>&lt;span class="c1">// --------------
&lt;/span>&lt;span class="c1">// | magic number | ---- 4 bytes
&lt;/span>&lt;span class="c1">// | version | ---- 1 byte
&lt;/span>&lt;span class="c1">// | parent chunk | ---- 16 byte //compact前的chunk
&lt;/span>&lt;span class="c1">// | create time | ---- 8 byte
&lt;/span>&lt;span class="c1">// | padding | ---- aligned with shard padding size ( 4k-4-1-16-8)
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// shard
&lt;/span>&lt;span class="c1">// shard header format:
&lt;/span>&lt;span class="c1">// ---------------------
&lt;/span>&lt;span class="c1">// |crc(header)(uint32)|
&lt;/span>&lt;span class="c1">// | magic (uint32) |
&lt;/span>&lt;span class="c1">// | bid (int64) |
&lt;/span>&lt;span class="c1">// | vuid (uint64) |
&lt;/span>&lt;span class="c1">// | size (uint32) |
&lt;/span>&lt;span class="c1">// | padding (4 bytes) |
&lt;/span>&lt;span class="c1">// ---------------------
&lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">// shard data format.
&lt;/span>&lt;span class="c1">// --------------
&lt;/span>&lt;span class="c1">// | block | ---- 64 KiB
&lt;/span>&lt;span class="c1">// | block | ---- 64 KiB
&lt;/span>&lt;span class="c1">// | block | ---- 64 KiB
&lt;/span>&lt;span class="c1">// ---------------
&lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">// block format.
&lt;/span>&lt;span class="c1">// --------------
&lt;/span>&lt;span class="c1">// | crc | ---- 4 Byte
&lt;/span>&lt;span class="c1">// | data | ---- (64 KiB - 4)
&lt;/span>&lt;span class="c1">// ---------------
&lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">// footer format:
&lt;/span>&lt;span class="c1">// ----------------------
&lt;/span>&lt;span class="c1">// | magic (int32) |
&lt;/span>&lt;span class="c1">// | crc(shard) (int32) |
&lt;/span>&lt;span class="c1">// | padding (0 bytes) |
&lt;/span>&lt;span class="c1">// ----------------------
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// Chunkdata has a header (4k).
&lt;/span>&lt;span class="c1">// Chunkdata header format:
&lt;/span>&lt;span class="c1">// --------------
&lt;/span>&lt;span class="c1">// | magic number | ---- 4 bytes
&lt;/span>&lt;span class="c1">// | version | ---- 1 byte
&lt;/span>&lt;span class="c1">// | parent chunk | ---- 16 byte
&lt;/span>&lt;span class="c1">// | create time | ---- 8 byte
&lt;/span>&lt;span class="c1">// | padding | ---- aligned with shard padding size ( 4k-4-1-16-8)
&lt;/span>&lt;span class="c1">// --------------
&lt;/span>&lt;span class="c1">// | shard |
&lt;/span>&lt;span class="c1">// | shard |
&lt;/span>&lt;span class="c1">// | shard |
&lt;/span>&lt;span class="c1">// | shard |
&lt;/span>&lt;span class="c1">// | shard |
&lt;/span>&lt;span class="c1">// | .... |
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">ChunkHeader&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">magic&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">_chunkMagicSize&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;span class="nx">version&lt;/span> &lt;span class="kt">byte&lt;/span>
&lt;span class="nx">parentChunk&lt;/span> &lt;span class="nx">bnapi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ChunkId&lt;/span>
&lt;span class="nx">createTime&lt;/span> &lt;span class="kt">int64&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// Chunk ID
&lt;/span>&lt;span class="c1">// vuid + timestamp
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">const&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="nx">chunkVuidLen&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">8&lt;/span>
&lt;span class="nx">chunkTimestmapLen&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">8&lt;/span>
&lt;span class="nx">ChunkIdLength&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">chunkVuidLen&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">chunkTimestmapLen&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="shard">Shard&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>shard是chunk中用于存储一个ec编码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>shard status:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Default:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Normal:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MarkDelete:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="mqproxy消息代理">MQProxy(消息代理)&lt;/h3>
&lt;ul>
&lt;li>mqproxy为kafka mq代理，作为异步消息传输通道；&lt;/li>
&lt;li>启动时，将自身作为 service注册到&lt;code>clustermsg&lt;/code>中的service table中；&lt;/li>
&lt;li>mqproxy接收&lt;code>access&lt;/code>下发的&lt;code>shardRepardMsg&lt;/code>和&lt;code>blobDeleteMsg&lt;/code>消息，发送到kafka中，最后被&lt;code>scheduler&lt;/code>消费；&lt;/li>
&lt;li>scheduler中的&lt;code>inspectMgr&lt;/code>在巡检时，如果发现丢失的shard，将给mqproxy发送&lt;code>shardRepairedMsg&lt;/code>;&lt;/li>
&lt;li>提供rpc接口：
&lt;ul>
&lt;li>/repairmsg: shard修复消息；&lt;/li>
&lt;li>/deletemsg: blob删除消息；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="err">//mqproxy.conf&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;bind_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;:9600&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;cluster_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;cm_cfg&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;hosts&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;http://127.0.0.1:7000&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:7010&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:7020&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;clustermgr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;blob_delete_topic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;blob_delete&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;shard_repair_topic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;shard_repair&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;shard_repair_priority_topic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;shard_repair_prior&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;msg_sender&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;broker_list&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1:9092&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;service_register&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:9600&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;idc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;z0&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;log&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;level&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;filename&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/tmp/mqproxy.log&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;auditlog&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;logdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./auditlog/mqproxy&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="scheduler任务调度器">Scheduler(任务调度器)&lt;/h3>
&lt;ul>
&lt;li>&lt;code>scheduler&lt;/code>提供所在cluster后台任务调度服务;&lt;/li>
&lt;li>内置多种管理器，来对各种任务进行管理：
&lt;ul>
&lt;li>ClusterTopoMgr: 集群拓扑管理器, 周期性(默认：5min)的从&lt;code>clustermgr&lt;/code>获取配置集群的disk信息，然后构建拓扑信息；&lt;/li>
&lt;li>BalanceMgr：数据平衡管理器, 周期性(默认：5s)收集disk分布情况，构建MigrateMgr任务，使数据自动保证平衡；&lt;/li>
&lt;li>MigrateMgr: 迁移管理器, 分为自动、手动迁移管理器两种。自动迁移管理器由BalanceMgr管理；手动迁移管理器由api调用触发：&lt;/li>
&lt;li>DiskDropMgr：下线磁盘管理器，负责；&lt;/li>
&lt;li>RepairMgr：shard修复任务管理器，管理下发shardreapirmsg task;&lt;/li>
&lt;li>InspectMgr: 巡检管理器, 巡检vol，发现坏的blob时，给mqproxy发送&lt;code>ShardRepairMsg&lt;/code>；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>启动时，先根据配置文件初始化各个管理器 ，再从mongo中加载已有的task，最后使各个mgr run起来；&lt;/li>
&lt;li>scheduler内置service table, tinker和worker组件在启动时，会将自身注册到scheduler的service table中；&lt;/li>
&lt;li>各管理器生成task，并插入到相应的mongdb task table中；&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json"> &lt;span class="err">//&lt;/span> &lt;span class="err">scheduler.conf&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;bind_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;:9800&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">服务端口&lt;/span>
&lt;span class="nt">&amp;#34;cluster_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">集群id&lt;/span>
&lt;span class="nt">&amp;#34;clustermgr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">clustermgr地址&lt;/span>
&lt;span class="nt">&amp;#34;hosts&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;http://127.0.0.1:9998&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:9999&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:10000&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">后台任务相关配置&lt;/span>
&lt;span class="nt">&amp;#34;mongo&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;uri&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;mongodb://127.0.0.1:27017&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">mongodb&lt;/span> &lt;span class="err">地址&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;db_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;scheduler&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">数据库名&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;task_archive_store_db&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>    &lt;span class="err">#&lt;/span> &lt;span class="err">后台任务备份表&lt;/span>
&lt;span class="nt">&amp;#34;mongo&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;uri&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;mongodb://127.0.0.1:27017&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">mongodb&lt;/span> &lt;span class="err">地址&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;db_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;task_archive_store&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">数据库名&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;log&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span>                         &lt;span class="err">#&lt;/span> &lt;span class="err">运行日志相关配置&lt;/span>
&lt;span class="nt">&amp;#34;level&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>                    &lt;span class="err">#&lt;/span> &lt;span class="err">0:debug,&lt;/span> &lt;span class="err">1:info,&lt;/span> &lt;span class="err">2:warn,&lt;/span> &lt;span class="err">3:error,&lt;/span> &lt;span class="err">4:panic,&lt;/span> &lt;span class="err">5:fatal&lt;/span>
&lt;span class="nt">&amp;#34;filename&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/tmp/scheduler.log&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">运行日志文件，会自动轮转&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;auditlog&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>                    &lt;span class="err">#&lt;/span> &lt;span class="err">审计日志相关配置&lt;/span>
&lt;span class="nt">&amp;#34;logdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./auditlog/scheduler&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">审计日志目录&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>rpc:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// scheduler/startup.go
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/task/acquire&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPTaskAcquire&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsQuery&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/task/reclaim&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPTaskReclaim&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/task/cancel&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPTaskCancel&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/task/complete&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPTaskComplete&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/manual/migrate/task/add&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPManualMigrateTaskAdd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/inspect/acquire&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPInspectAcquire&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsQuery&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/inspect/complete&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPInspectComplete&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/task/report&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPTaskReport&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/task/renewal&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPTaskRenewal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/balance/task/detail&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPBalanceTaskDetail&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/repair/task/detail&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPRepairTaskDetail&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/drop/task/detail&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPDropTaskDetail&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/manual/migrate/task/detail&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPManualMigrateTaskDetail&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/stats&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPStats&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsQuery&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/service/list&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPServiceList&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsQuery&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/service/register&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPServiceRegister&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/service/get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPServiceGet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsQuery&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">POST&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/service/delete&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">service&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">HTTPServiceDelete&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rpc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OptArgsBody&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="tinker修补器">Tinker(修补器)&lt;/h3>
&lt;ul>
&lt;li>启动时，将自身注册到&lt;code>scheduler&lt;/code>的service服务列表中；&lt;/li>
&lt;li>内置&lt;code>shardRepairMgr&lt;/code>, &lt;code>BlobDeleteMgr&lt;/code>, 执行shard repair，blob delete任务；&lt;/li>
&lt;li>从kafka mq中消费相应的消息, 并通过rpc通知&lt;code>worker&lt;/code>执行相应的任务;&lt;/li>
&lt;li>tinker使用mongodb保存kafka offset和&lt;code>orphanShard&lt;/code>;&lt;/li>
&lt;li>rpc:
&lt;ul>
&lt;li>/update/vol:&lt;/li>
&lt;li>/stats:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="err">//tinker.conf&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;bind_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;:9700&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">服务端口&lt;/span>
&lt;span class="nt">&amp;#34;cluster_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">集群id&lt;/span>
&lt;span class="nt">&amp;#34;database_conf&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">mongodb相关配置&lt;/span>
&lt;span class="nt">&amp;#34;mongo&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;uri&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;mongodb://127.0.0.1:27017&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">mongodb地址&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;db_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;tinker&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">数据库名&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;shard_repair&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">数据修补相关配置&lt;/span>
&lt;span class="nt">&amp;#34;broker_list&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1:9092&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">kafka&lt;/span> &lt;span class="err">地址&lt;/span>
&lt;span class="nt">&amp;#34;priority_topics&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">修补主题配置&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;priority&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">修复优先级，数值越大优先级越高&lt;/span>
&lt;span class="nt">&amp;#34;topic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;shard_repair&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">主题&lt;/span>
&lt;span class="nt">&amp;#34;partitions&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">消费分区&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;priority&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">修复优先级，数值越大优先级越高&lt;/span>
&lt;span class="nt">&amp;#34;topic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;shard_repair_prior&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">主题&lt;/span>
&lt;span class="nt">&amp;#34;partitions&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">消费分区&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;fail_topic&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">修补主题消费配置&lt;/span>
&lt;span class="nt">&amp;#34;topic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;shard_repair_failed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">主题&lt;/span>
&lt;span class="nt">&amp;#34;partitions&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">消费分区&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;blob_delete&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">数据删除相关配置&lt;/span>
&lt;span class="nt">&amp;#34;broker_list&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1:9092&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">kafka地址&lt;/span>
&lt;span class="nt">&amp;#34;normal_topic&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">删除消息消费配置&lt;/span>
&lt;span class="nt">&amp;#34;topic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;blob_delete&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err">#&lt;/span> &lt;span class="err">主题&lt;/span>
&lt;span class="nt">&amp;#34;partitions&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">消费分区&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;fail_topic&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">删除失败消息消费配置&lt;/span>
&lt;span class="nt">&amp;#34;topic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;fail_blob_delete&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">主题&lt;/span>
&lt;span class="nt">&amp;#34;partitions&amp;#34;&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">分区&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;safe_delay_time_h&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">72&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">删除保护期&lt;/span>
&lt;span class="nt">&amp;#34;dellog&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">删除记录相关配置&lt;/span>
&lt;span class="nt">&amp;#34;dir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./delete_log&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">删除日志目录&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;clustermgr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">clustermgr地址&lt;/span>
&lt;span class="nt">&amp;#34;hosts&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;http://127.0.0.1:9998&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:9999&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:10000&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;scheduler&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">scheduler服务地址&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:9800&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;service_register&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">自身服务注册信息&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;http://127.0.0.1:9700&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">服务地址&lt;/span>
&lt;span class="nt">&amp;#34;idc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;z0&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">服务所属机房&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;log&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">运行日志相关配置&lt;/span>
&lt;span class="nt">&amp;#34;level&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">0:debug,&lt;/span> &lt;span class="err">1:info,&lt;/span> &lt;span class="err">2:warn,&lt;/span> &lt;span class="err">3:error,&lt;/span> &lt;span class="err">4:panic,&lt;/span> &lt;span class="err">5:fatal&lt;/span>
&lt;span class="nt">&amp;#34;filename&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/tmp/tinker.log&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">运行日志文件，会自动轮转&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;auditlog&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">审计日志相关配置&lt;/span>
&lt;span class="nt">&amp;#34;logdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./auditlog/tinker&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">审计日志目录&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="worker">Worker()&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>执行tinker下发(rpc api)的shard repair, blob delete任务；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动时，将自身注册到&lt;code>scheduler&lt;/code>的service 列表中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>周期性(默认: 500ms)的从&lt;code>scheduler&lt;/code>获取task(调用scheduler rpc：&lt;code>/task/acquire&lt;/code>), 并执行task(包括: Repair, Balance, DiskDrop, ManualMigrate, Inspect)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rpc api:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>/shard/repair&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/stats&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json"> &lt;span class="err">//worker.conf&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;bind_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;:9910&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">服务端口&lt;/span>
&lt;span class="nt">&amp;#34;cluster_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">集群id&lt;/span>
&lt;span class="nt">&amp;#34;service_register&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">自身服务consul注册信息&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:9910&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">服务地址&lt;/span>
&lt;span class="nt">&amp;#34;idc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;z0&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">服务所属机房&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;scheduler&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">scheduler服务相关配置&lt;/span>
&lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:9800&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">服务地址&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;dropped_bid_record&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">丢弃blob&lt;/span> &lt;span class="err">id原因记录&lt;/span>
&lt;span class="nt">&amp;#34;dir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./dropped&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">记录目录&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;log&amp;#34;&lt;/span>&lt;span class="p">:{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">运行日志相关配置&lt;/span>
&lt;span class="nt">&amp;#34;level&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">0:debug,&lt;/span> &lt;span class="err">1:info,&lt;/span> &lt;span class="err">2:warn,&lt;/span> &lt;span class="err">3:error,&lt;/span> &lt;span class="err">4:panic,&lt;/span> &lt;span class="err">5:fatal&lt;/span>
&lt;span class="nt">&amp;#34;filename&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/tmp/worker.log&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">运行日志文件，会自动轮转&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;auditlog&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">审计日志相关配置&lt;/span>
&lt;span class="nt">&amp;#34;logdir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./auditlog/worker&amp;#34;&lt;/span> &lt;span class="err">#&lt;/span> &lt;span class="err">审计日志目录&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="cli">Cli&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>cli是blobstore提供的一个命令行工具，用于对blobstore进行管理操作；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>cli通过&lt;code>access-clinet&lt;/code>api 提供和access交互的能力；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>cli可配置redis来缓存；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="err">//cli.conf&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;access&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">&amp;#34;conn_mode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//4:&lt;/span> &lt;span class="err">no&lt;/span> &lt;span class="err">timeout&lt;/span>
&lt;span class="nt">&amp;#34;consul_addr&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;http://127.0.0.1:8500&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">//&lt;/span>
&lt;span class="nt">&amp;#34;max_host_retry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;max_part_retry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;max_size_put_once&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;priority_addrs&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;http://localhost:9500&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;http://127.0.0.1:9500&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;service_interval_ms&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nt">&amp;#34;redis_addrs&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;127.0.0.1:6379&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;redis_user&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;redis_pass&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;cm_addrs&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;http://localhost:9998&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;http://127.0.0.1:9998&amp;#34;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nt">&amp;#34;verbose&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nt">&amp;#34;vverbose&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="外部组件">外部组件&lt;/h2>
&lt;h3 id="consul">Consul&lt;/h3>
&lt;ul>
&lt;li>提供cluster信息注册，查询服务；&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// ConsulRegisterPath
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">key&lt;/span> &lt;span class="nx">value&lt;/span>
&lt;span class="nx">clusterMgr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">ebs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">region&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">clusters&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">cluster_id&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nx">cluster_info&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="mongodb">MongoDB&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>mongodb用于存储scheduler模块调度信息；&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>db&lt;/th>
&lt;th>dafault table&lt;/th>
&lt;th>config key&lt;/th>
&lt;th>说明&lt;/th>
&lt;th>模块&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>scheduler&lt;/td>
&lt;td>&lt;/td>
&lt;td>&amp;ldquo;database:db_name&amp;rdquo;&lt;/td>
&lt;td>&lt;/td>
&lt;td>scheduler.conf&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>balance_tbl&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>disk_drop_tbl&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>repair_tbl&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>inspect_checkpoint_tbl&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>manual_migrate_tbl&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>svr_register_tbl&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>tasks_tbl&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="kafka">Kafka&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>用于组件间异步 任务消息传递, mqproxy对其相关操作进行封装；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>主要用来传递&lt;code>shardRepair&lt;/code>和&lt;code>blobDelete&lt;/code>两类消息；&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;h3 id="redis">Redis&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>为access访问cm volume提供缓存；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>缓存expires：30-60min;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">//redis key
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">GroupVolumeKey&lt;/span> &lt;span class="s">&amp;#34;get-volume-&amp;lt;cvid&amp;gt;&amp;#34;&lt;/span>
&lt;span class="nx">RedisVolumeKey&lt;/span> &lt;span class="s">&amp;#34;access/volume/&amp;lt;clusterID&amp;gt;/&amp;lt;vid&amp;gt;&amp;#34;&lt;/span> &lt;span class="nx">Value&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">VolumePly&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参数">参数&lt;/h2>
&lt;h3 id="blobnode-1">BlobNode&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>一个disk默认最多chunk数&lt;code>DefaultMaxChunks&lt;/code>：8192;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个chunk默认最大size&lt;code>DefaultMaxChunk&lt;/code>: 1TiB;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>默认chunk size&lt;code>DefaultChunkSize&lt;/code>：16GiB;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">//blobnode/core/config.go
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="nx">DefaultDiskReservedSpaceB&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">int64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">60&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 60 GiB
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultChunkSize&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">int64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 16 GiB
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultMaxChunks&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">int32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 8192
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultChunkReleaseProtectionM&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1440&lt;/span> &lt;span class="c1">// 1 days
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultChunkGcCreateTimeProtectionM&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1440&lt;/span> &lt;span class="c1">// 1 days
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultChunkGcModifyTimeProtectionM&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1440&lt;/span> &lt;span class="c1">// 1 days
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultChunkCompactIntervalSec&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="c1">// 10 min
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultChunkCleanIntervalSec&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="c1">// 1 min
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultDiskUsageIntervalSec&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="c1">// 1 min
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultDiskCleanTrashIntervalSec&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="c1">// 60 min
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultDiskTrashProtectionM&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2880&lt;/span> &lt;span class="c1">// 2 days
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultCompactBatchSize&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1024&lt;/span> &lt;span class="c1">// 1024 counts
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultCompactMinSizeThreshold&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">16&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 16 GiB
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultCompactTriggerThreshold&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 1 TiB
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultMetricReportIntervalS&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="c1">// 30 Sec
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DefaultCompactEmptyRateThreshold&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">float64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.8&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 80% rate
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// blobnode/core/disk/disk.go
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">MaxChunkSize&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">int64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1024&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 1024 GiB, 一个disk chunk最大size，
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// access config
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">defaultMaxObjectSize&lt;/span> &lt;span class="kt">int64&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//单个object最大put大小；
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="关键流程">关键流程&lt;/h2>
&lt;h3 id="创建卷createvolume">创建卷(CreateVolume)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>ClusterMgr&lt;/code>启动后，会根据配置为每种ec策略预先创建一定数量的Volume用于分配；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>入口为clusterMgr中volumeMgr的&lt;code>createVolume()&lt;/code>函数；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>先通过&lt;code>scopMgr.Alloc&lt;/code> 分配一个新vid;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据mode获取unitCount(为tactic的N+M+L);&lt;/p>
&lt;/li>
&lt;li>
&lt;p>初始化volume units信息vuInfos；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>初始化volInfo；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过raft执行initCreateVolume指令，将volume信息记录到transitedTable中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过&lt;code>allocChunkForAllUnits&lt;/code>为vol所有的units分配chunk;&lt;/p>
&lt;ul>
&lt;li>
&lt;p>allocChunkForAllUnits会根据vol的编码策略，将chunk随机分布到不同idc上；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过blobnode ChunkCreate rpc调用在blobnode上创建chunk;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>通过raft执行CreateVolume指令，删除transitedTbl中的volume units，将volume units相关信息记录到volumeTbl中 ；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="写入put">写入(Put)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>put提供将数据写入到blobstore中的能力；&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://gitee.com/justice/gitnote-img-bed/raw/master/2022/02/08-10-44-35-2022-02-08-10-44-24-image.png" alt="">&lt;/p>
&lt;p>Put流程从access-client中的&lt;code>Put()&lt;/code>方法开始：&lt;/p>
&lt;h4 id="access-client-1">access-client&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>access-client &lt;code>Put()&lt;/code>流程：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>根据数据判断，如果size == 0， 返回空location；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Size &amp;lt;= MaxSizePutOnec(默认：256MB) ，通过&lt;code>putObject()&lt;/code>单个对象上传；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>否则，通过&lt;code>putParts&lt;/code>分块上传：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>putObject流程：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>数据size小于PutOnce缓存(默认: 8MB)，把数据一次读入buffer中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调用access put rpc将数据put上去；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>返回location;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>putParts流程：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过rpc 从access中alloc一个location和tokens&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动一个后台goroutine，将数据按&lt;code>config.PartConcurrenc（默认：4）&lt;/code>读取到buffer中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将buffer中的数据增加token，cid，vid等相关信息组装为一个parts；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过&lt;code>putPartsBatch&lt;/code>将parts批量上传；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="access">access&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>access put rpc的入口为&lt;code>service.Put&lt;/code>, 其处理流程如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ParseArgs(args)解析参数；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>args.IsValid()判断参数是否有效；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据args中的hashes设置hasherMap;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调用&lt;code>streamHandler.Put()&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过hasherMap计算返回的hashSumMap;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>stream_put Put()流程：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果size&amp;gt;maxObjectSize(默认：256MB), 返回错误；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果hasherMap个数&amp;gt;0; 复制一个reader用于计算hash；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调用SelectCodeMode(size)，根据大小选择一个合适的纠删码策略；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据access配置&lt;code>MaxBlobSize&lt;/code>，设置blobSize(默认: 4MB)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调用&lt;code>allocFromAllocatorWithHystrix()&lt;/code>, 根据纠删码、size, blobSize，从allocator分配&lt;code>clusterID,blobs&lt;/code>, blob个数由size, blobSize计算而来；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据要读取blob的大小和纠删码策略，在编码器encoder中&lt;code>ec.NewBuffer()&lt;/code>一块ec.Buffer；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过&lt;code>ec.Split()&lt;/code>将ec.Buffer中数据缓存切分为对应编码的&lt;code>shards&lt;/code>;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>依次处理各个blob：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>读取blob数据填充到ec.Buffer的dataBuf中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调用对应编码器的&lt;code>Encode()&lt;/code>将shards进行编码；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过&lt;code>writeToBlobnodesWithHystrix()&lt;/code>将shards写入到blobnode中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果有写入出错的个数&amp;gt;0, 则调用&lt;code>RepairMsgBg()&lt;/code>，往&lt;code>mqproxy&lt;/code>发送repair消息&lt;code>sendRepairMsgBg&lt;/code>；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>上传过程如果不成功，通过&lt;code>clearGarbage()&lt;/code>清理无用垃圾数据；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ec.NewBuffer()&lt;/code>建立编码缓冲区流程：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>根据dataSize和编码策略数据分片数shardN，计算每个分片的大小&lt;code>shardSize=(dataSize+shardN-1)/shardN&lt;/code>;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据分片大小shardSize和策略参数，计算编码总缓冲大小&lt;code>ecSize=shardSize*(N+M+L)&lt;/code>;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从内存池中申请ecSize大小的缓存buf；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据参数设置buf中的不同部分；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>返回设置好的Buffer；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>writeToBlobnodes()&lt;/code>数据写入到blobnode流程：&lt;/p>
&lt;ul>
&lt;li>根据clusterID、vid参数获取volume；&lt;/li>
&lt;li>获取volume中的ec相关参数(包括：tactic，putQuorum等)；&lt;/li>
&lt;li>根据volume中的units, 开启goroutine，通过&lt;code>h.blobnodeClient.PutShard()&lt;/code>往blobnode节点同时发送写入shard请求；&lt;/li>
&lt;li>等待请求发送完后，如果写入成功的个数&lt;code>writtenNum&amp;gt;=putQuorum&lt;/code>成功写入标准()，则写入成功；&lt;/li>
&lt;li>否则, 判断当AZCount &amp;gt;=3时，如果一个AZ down掉，判断剩下的AZ是否每个shard都写入成功，如果是，则也可以判断写入成功；&lt;/li>
&lt;li>否则写入不成功，返回错误；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="blobnode-2">blobnode&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>blobnode &lt;code>ShardPut_()&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>ShardPut_接收&lt;code>access&lt;/code>节点发送的PutShard Rpc调用，执行shard put 写入shard数据操作；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>datafile Write():&lt;/p>
&lt;ul>
&lt;li>
&lt;p>根据&lt;code>Shard.Size&lt;/code>大小， 计算(Alignphysize)写入到chunkfile中的编码后物理大小phySize(Shard 包含header，footer和block crc)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据phySize在datafile中分配待写入空间(allocSpace), 更新变量(cd.wOff)写入偏移(偏移需和4k对齐),并获取旧的(cd.wOff)作为&lt;code>shard.Offset&lt;/code>本次shard写入偏移；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>写入shard header数据到chunk file；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>crc32block.NewEncoder&lt;/code>新建一个crc编码写入器，通过编码器将数据编码，并写入到chunkfile的shard header数据区后面；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>写入shard footer数据到 chunk file；&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="读取get">读取(Get)&lt;/h3>
&lt;p>&lt;img src="https://gitee.com/justice/gitnote-img-bed/raw/master/2022/02/08-10-45-04-2022-02-08-10-44-59-image.png" alt="">&lt;/p>
&lt;h4 id="access-client-2">access-client&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>access-client 中get入口为&lt;code>api/access/client.go (c *client)Get()&lt;/code>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>先检查get参数有效性，如果size 为0，直接返回空；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后随机顺序向多个access发送get rpc请求，返回第一个成功的请求；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="access-1">access&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>access 由&lt;code>access/stream_get.go （h *Handler)Get()&lt;/code>负责get rpc 入口；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>先调用&lt;code>genLocationBlobs&lt;/code>根据参数&lt;code>location,offset,readSize&lt;/code>获取location中需要读取的blobs；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在根据location获取clusterMgr controller sc;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果&lt;code>len(blobs)== 1&lt;/code>, 如果大小较小，直接调用&lt;code>getDataShardOnly()&lt;/code>读取blob数据；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>开启一个后台协程，依次通过&lt;code>readOneBlob&lt;/code>从blobnode读取blobs中的每个blob的数据，通过chan传送个主流程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>主流程依次接收读取的数据，并写入到get结果的buffer中；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>读取一个blob数据&lt;code>access/readOneBlob()&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>根据BlobSize和编码策略，分配一块新的EC buffer&lt;code>GetBufferSizes()&lt;/code>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>// 1. try to min-read shards byte&lt;/p>
&lt;/li>
&lt;li>
&lt;p>// 2. if failed try to read next shard to reconstruct&lt;/p>
&lt;/li>
&lt;li>
&lt;p> // 3. write the the right offset bytes to writer&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="blobnode-3">blobnode&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>ShardGet_:&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;h3 id="删除delete">删除(Delete)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>删除调用了punch hole来是否被删除的data；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过compact异步对碎片化过多的chunkfile进行整理；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="合并compact">合并(Compact)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>compact用于在后台整理chunkfile，由blobnode提供了rpc api；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>chunkfile 是否需要compact（&lt;code>NeedCompact&lt;/code>）:&lt;/p>
&lt;ul>
&lt;li>chunk file size &amp;gt;= &lt;code>conf.CompactTriggerThredshold(默认：1TiB)&lt;/code>，return true；&lt;/li>
&lt;li>chunk file size &amp;gt; &lt;code>conf.CompactMinSizeThreshold(默认: 16GB)&lt;/code>且chunkfile 稀疏率&amp;gt;=80%(&lt;code>CompactEnptyRateThreshold&lt;/code>参数);&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>blobnode/core/chunk/chunk.doCompact():&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="iotype">IOType&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go"> &lt;span class="nx">NormalIO&lt;/span> &lt;span class="nx">IOType&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">iota&lt;/span> &lt;span class="c1">// From: external: user io: read/write
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">BackgroundIO&lt;/span> &lt;span class="c1">// From: external: repair, chunk transfer, delete
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">CompactIO&lt;/span> &lt;span class="c1">// From: internal: chunk compact
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">DeleteIO&lt;/span> &lt;span class="c1">// From: external: delete io
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">InternalIO&lt;/span> &lt;span class="c1">// From: internal: io, such rubbish clean, batch delete
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="安全">安全&lt;/h2>
&lt;ul>
&lt;li>uptoken&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// token between alloc and putat
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// TokenSize max size of token array
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// clusterID + vid + bid + count + time + size
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">TokenSize&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;span class="c1">// UploadToken token between alloc and putat
&lt;/span>&lt;span class="c1">// [0:8] hmac (8) first 8 bytes of sha1 summary
&lt;/span>&lt;span class="c1">// [8:16] minBid (8) in the SliceInfo
&lt;/span>&lt;span class="c1">// [16:20] count (4) in the SliceInfo
&lt;/span>&lt;span class="c1">// [20:24] time (4) expired unix utc time, 0 means not expired
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">UploadToken&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Data&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">TokenSize&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;span class="nx">Offset&lt;/span> &lt;span class="kt">uint8&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://cubefs.readthedocs.io/zh_CN/latest/design/blobstore.html">https://cubefs.readthedocs.io/zh_CN/latest/design/blobstore.html&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.cnblogs.com/itlz/p/14090193.html">详解Hadoop3.x新特性功能-HDFS纠删码 - 五分钟学大数据 - 博客园&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.csdn.net/shelldon/article/details/54144730?spm=1001.2101.3001.6661.1&amp;amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1.pc_relevant_default&amp;amp;utm_relevant_index=1">Erasure Code - EC纠删码原理_shelldon的专栏-CSDN博客_ec纠删码&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>CubeFS-BlobStore配置</title><link>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore%E9%85%8D%E7%BD%AE/</guid><description>&lt;h1 id="cubefs-blobstore配置">CubeFS-BlobStore配置&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>centos: 7.5.1804 (Core)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>linux kernel：3.10.0-862.el7.x86_64&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="mongodb">mongodb&lt;/h3>
&lt;h2 id="参考">参考&lt;/h2></description></item><item><title>Golang 调试</title><link>https://justice.bj.cn/post/14.language/golang/golang%E8%B0%83%E8%AF%95/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E8%B0%83%E8%AF%95/</guid><description>&lt;h1 id="golang-调试">Golang 调试&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>Golang程序的调试工具包括gdb调试、go pprof性能调试工具及go gc分析工具。熟练掌握这些工具的基本用法对golang的程序开发及调试分析拥有很大的帮助。&lt;/p>
&lt;h2 id="gdb单步调试工具">GDB：单步调试工具&lt;/h2>
&lt;p>gdb可以用来作为golang的调试工具。&lt;/p>
&lt;h3 id="gdb用法">Gdb用法&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">#编译时，打开相关编译变量， -gcflags是给go编译器的参数，gc是go compile的意思。-N是不要优化代码，-l 是禁止内联代码。&lt;/span>
$ go build -gcflags &lt;span class="s2">&amp;#34;-N -l&amp;#34;&lt;/span> test.go
&lt;span class="c1"># 运行gdb&lt;/span>
$ gdb &lt;span class="nb">test&lt;/span>
&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> info files &lt;span class="c1">#查看文件&lt;/span>
&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> l main.main &lt;span class="c1"># list&lt;/span>
&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> b &lt;span class="m">10&lt;/span> &lt;span class="c1"># breakpoint 10，第10行设置断点&lt;/span>
&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> r &lt;span class="c1"># run&lt;/span>
&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> s &lt;span class="c1"># step, 单&lt;/span>
&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> p *b &lt;span class="c1"># print *b&lt;/span>
&lt;span class="o">(&lt;/span>gdb&lt;span class="o">)&lt;/span> n &lt;span class="c1"># next&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>gdb对golang的调试功能支持不完善，delve&lt;/p>
&lt;h2 id="pprof">PProf&lt;/h2>
&lt;p>pprof是go tool自带的性能调试工具，看用于对pprof采样数据进行分析。&lt;/p>
&lt;h3 id="获取采样数据">获取采样数据&lt;/h3>
&lt;p>要使用pprof，需要先生成采样数据，有两种使用方式可以产生pprof数据：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通过引入&lt;code>runtime/pprof&lt;/code>包，并手动调用&lt;code>rutime.StartCPUProfile, runtimeStopCPUProfile&lt;/code>等API来获取采样数据；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过引入&lt;code>import _ &amp;quot;net/http/prprof&amp;quot;&lt;/code>方式在线使用;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="c1">// 引入net/http/pprof包，该包自动注册 handler到 http server
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="s">&amp;#34;net/http/pprof&amp;#34;&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">runtime&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GOMAXPROCS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 限制 CPU 使用数，避免过载
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">runtime&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetMutexProfileFraction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 开启对锁调用的跟踪
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">runtime&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetBlockProfileRate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 开启对阻塞操作的跟踪
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 启动一个 http server，以提供pprof http服务端口，服务默认在/debug/pprof下
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ListenAndServe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;:6060&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fatal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="pprof用法">pprof用法&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 浏览器&lt;/span>
$ curl &lt;span class="s1">&amp;#39;http://127.0.0.1:6060/debug/pprof/goroutine&amp;#39;&lt;/span> &amp;gt; /tmp/goroutine.dbg
$ go tool pprof -http&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;:8081&amp;#34;&lt;/span> /tmp/goroutine.dbg
&lt;span class="c1"># 函数调用cpu耗时&lt;/span>
$ go tool pprof http://localhost:6060/debug/pprof/profile
&lt;span class="c1"># 内存&lt;/span>
$ go tool pprof -sample_index&lt;span class="o">=&lt;/span>alloc_space &lt;span class="s2">&amp;#34;http://localhost:6060/debug/pprof/heap?gc=1&amp;amp;seconds=60&amp;#34;&lt;/span>
&lt;span class="c1"># 已分配的堆内存&lt;/span>
$ go tool pprof http://localhost:6060/debug/pprof/allocs
&lt;span class="c1"># goroutine&lt;/span>
$ go tool pprof http://localhost:6060/debug/pprof/goroutine
$ curl &lt;span class="s1">&amp;#39;http://localhost:6060/debug/goroutine?debug=1&amp;#39;&lt;/span> &amp;gt; ~/tmp/gopprof.txt
&lt;span class="c1"># 阻塞&lt;/span>
$ go tool pprof http://localhost:6060/debug/pprof/block
&lt;span class="c1"># 锁 &lt;/span>
$ go tool pprof http://localhost:6060/debug/pprof/mutex
&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span> top &lt;span class="c1"># 查看top 前的指标&lt;/span>
&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span> list &amp;lt;&amp;gt; &lt;span class="c1"># 查看指标对象所在源码，需设置源码目录为编译时目录&lt;/span>
&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span> web --nodefraction&lt;span class="o">=&lt;/span>0.1 &lt;span class="o">[&lt;/span>metanode.NewInode&lt;span class="o">]&lt;/span> &lt;span class="c1"># 生成svg，在浏览其中图形化展示指标&lt;/span>
&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span> traces &lt;span class="c1">#&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="go-tool-trace">go tool trace&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ curl &lt;span class="s1">&amp;#39;http://localhost:6060/debug/pprof/trace?seconds=5&amp;#39;&lt;/span> &amp;gt; ~/tmp/gotrace.out
$ go tool trace -http&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;:8081&amp;#34;&lt;/span> ~/tmp/gotrace.out
$ go tool trace ~/tmp/gotrace.out
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="godebuggc调试">GODEBUG：GC调试&lt;/h2>
&lt;p>GODEBUG 开启 debug 模式后，可做内存 trace 和调度器的 trace&lt;/p>
&lt;p>GODEBUG 还支持设置以下变量:&lt;/p>
&lt;ul>
&lt;li>GOGC： 改变堆增长方式 —— 设置初始的 GC 目标百分比。当新分配内存，与上一次采集后剩余的实时数据的比例达到这个百分比时，才会触发一次 GC。默认值是 GOGC=100。设置 &lt;code>GOGC=off&lt;/code> 则完全禁用垃圾收集器。&lt;/li>
&lt;li>schedtrace：设置 &lt;code>schedtrace=X&lt;/code> ,每 X 毫秒打印一次调度器状态 —— 包括调度器、处理器、线程和 goroutine&lt;/li>
&lt;/ul>
&lt;h3 id="用法">用法&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 输出gc&lt;/span>
$ &lt;span class="nv">GODEBUG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">gctrace&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> go run example.go
$ &lt;span class="nv">GODEBUG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">gctrace&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> ./go-pprof-practice &lt;span class="p">|&lt;/span> grep gc
&lt;span class="c1"># 手动触发gc&lt;/span>
$ curl -X GET &lt;span class="s2">&amp;#34;http://localhost:6060/debug/pprof/heap?gc=1&amp;#34;&lt;/span>
&lt;span class="c1"># 查看调度&lt;/span>
$ &lt;span class="nv">GODEBUG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">schedtrace&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1000&lt;/span> ./awesomeProject
&lt;span class="c1"># 查看调度详情&lt;/span>
$ &lt;span class="nv">GODEBUG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">scheddetail&lt;/span>&lt;span class="o">=&lt;/span>1,schedtrace&lt;span class="o">=&lt;/span>&lt;span class="m">1000&lt;/span> ./awesomeProject
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>gctrace格式&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">gc # @#s #%: #+#+# ms clock, #+#/#/#+# ms cpu, #-&amp;gt;#-&amp;gt;# MB, # MB goal, # P
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>gc#&lt;/code>：GC 执行次数的编号，每次叠加。&lt;/li>
&lt;li>&lt;code>@#s&lt;/code>：自程序启动后到当前的具体秒数。&lt;/li>
&lt;li>&lt;code>#%&lt;/code>：自程序启动以来在GC中花费的时间百分比。&lt;/li>
&lt;li>&lt;code>#+...+#&lt;/code>：GC 的标记工作共使用的 CPU 时间占总 CPU 时间的百分比。&lt;/li>
&lt;li>&lt;code>#-&amp;gt;#-&amp;gt;# MB&lt;/code>：分别表示 GC 启动时, GC 结束时, GC 活动时的堆大小.&lt;/li>
&lt;li>&lt;code>#MB goal&lt;/code>：下一次触发 GC 的内存占用阈值。&lt;/li>
&lt;li>&lt;code>#P&lt;/code>：当前使用的处理器 P 的数量。&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>golang调度器追踪&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ GOMAXPROCS=2 GODEBUG=schedtrace=1000 ./example
SCHED 0ms: gomaxprocs=2 idleprocs=1 threads=2 spinningthreads=0 idlethreads=0 runqueue=0 [0 0]
SCHED 1002ms: gomaxprocs=2 idleprocs=0 threads=4 spinningthreads=1 idlethreads=1 runqueue=0 [0 4]
SCHED 2002ms: gomaxprocs=2 idleprocs=0 threads=4 spinningthreads=0 idlethreads=1 runqueue=0 [4 4]
$ GOMAXPROCS=2 GODEBUG=schedtrace=1000,scheddetail=1 ./example
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>第2秒：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">2002ms : This is the trace for the 2 second mark.
gomaxprocs=2 : 2 processors are configured for this program.
threads=4 : 4 threads exist. 2 for processors and 2 for the runtime.
idlethreads=1 : 1 idle thread (3 threads running).
idleprocs=0 : 0 processors are idle (2 processors busy).
runqueue=0 : All runnable goroutines have been moved to a local run queue.
[4 4] : 4 goroutines are waiting inside each local run queue.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>输出项&lt;/th>
&lt;th>意义&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1009ms&lt;/td>
&lt;td>自从程序开始的毫秒数&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gomaxprocs=1&lt;/td>
&lt;td>配置的处理器数(逻辑的processor，也就是Go模型中的P,会通过操作系统的线程绑定到一个物理处理器上)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>threads=3&lt;/td>
&lt;td>运行期管理的线程数，目前三个线程&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>idlethreads=1&lt;/td>
&lt;td>空闲的线程数,当前一个线程空闲，两个忙&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>idleprocs=0&lt;/td>
&lt;td>空闲的处理器数,当前0个空闲&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>runqueue=0&lt;/td>
&lt;td>在全局的run队列中的goroutine数，目前所有的goroutine都被移动到本地run队列&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>[9]&lt;/td>
&lt;td>本地run队列中的goroutine数，目前9个goroutine在本地run队列中等待&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="堆栈track">堆栈track&lt;/h2>
&lt;p>golang程序panic后，会打印出panic时的内存堆栈信息以便于问题 分析，输出如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">1    panic: runtime error: invalid memory address or nil pointer dereference
2    [signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x751ba4]
3    goroutine 58 [running]:
4    github.com/joeshaw/example.UpdateResponse(0xad3c60, 0xc420257300, 0xc4201f4200, 0x16, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
5 /go/src/github.com/joeshaw/example/resp.go:108 +0x144
6    github.com/joeshaw/example.PrefetchLoop(0xacfd60, 0xc420395480, 0x13a52453c000, 0xad3c60, 0xc420257300)
7 /go/src/github.com/joeshaw/example/resp.go:82 +0xc00
8     created by main.runServer
9 /go/src/github.com/joeshaw/example/cmd/server/server.go:100 +0x7e0
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>第1行 ：panic错误提示消息，&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第2行：引发panic的UNIX信号 ，&lt;/p>
&lt;ul>
&lt;li>
&lt;p>code: UNIX &lt;code>siginfo.si_code&lt;/code>, &lt;code>0x1&lt;/code>为&lt;code>SEGV_MAPERR&lt;/code>(“address not mapped to object”) in Linux’s &lt;code>siginfo.h&lt;/code> file.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>addr: &lt;code>siginfo.si_addr&lt;/code>，030: invalid memory address, 无效内存地址;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>pc: 程序计数器, 代表panic时，程序当前运行的地址；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>第3行：panic时，goroutine 58 的状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第4-9行: gorutine panic时的stack frame&lt;/p>
&lt;ul>
&lt;li>
&lt;p>第4行： UpdateResponse函数调用参数&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第5行：所在文件行数；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>stack track函数参数遵守如下规则：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>每个参数 按函数原型参数列表从左到右按内存布局按word逐一展开，不是和原型参数个数一一对应；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果是method，receiver为最左边开始 展开；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>返回值在参数展开后展开，多返回值也按左到右顺序逐一展开；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>内建类型(int, rune,byte)按word逐个输出，不足一个word的 ，将合并成一个word；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>指针类型：输出指针地址；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>string类型：输出两个：指针地址，string长度；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>slice：输出三个 ：地址, 长度，容量；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>struct：按stuct字段顺序逐个展开；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>interface: 2个： 类型，数据指针；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>参数都未被使用或者只是在 &lt;code>fmt.Print()&lt;/code> 中未作修改使用，用&lt;code>func(...)&lt;/code>代替，内联的函数也只显示&amp;hellip; ；&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>golang stack track 中函数调用各种类型参数的对应的数量：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型名称&lt;/th>
&lt;th>参数域数量&lt;/th>
&lt;th>参数域说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>string&lt;/td>
&lt;td>2&lt;/td>
&lt;td>&lt;code>指针&lt;/code> &lt;code>长度&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>slice&lt;/td>
&lt;td>3&lt;/td>
&lt;td>&lt;code>指针&lt;/code> &lt;code>长度&lt;/code> &lt;code>容量&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>map&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;code>指针&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>chan&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;code>指针&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>interface&lt;/td>
&lt;td>2&lt;/td>
&lt;td>&lt;code>类型指针&lt;/code> &lt;code>值指针&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pointer&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;code>指针&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>func&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;code>指针&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nil&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;code>0x0&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="strace">strace&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ sudo strace -Tfp &amp;lt;PID&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://guidao.github.io/go_debug.html">https://guidao.github.io/go_debug.html&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://cizixs.com/2017/09/11/profiling-golang-program/">https://cizixs.com/2017/09/11/profiling-golang-program/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.wolfogre.com/posts/go-ppof-practice/">golang pprof 实战 | Wolfogre's Blog&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://segmentfault.com/a/1190000020255157">https://segmentfault.com/a/1190000020255157&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/Brby6D7d1szUIBjcD_8kfg">https://mp.weixin.qq.com/s/Brby6D7d1szUIBjcD_8kfg&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/go-delve/delve">GitHub - go-delve/delve: Delve is a debugger for the Go programming language.&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://golang.org/doc/gdb">Debugging Go Code with GDB - The Go Programming Language&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://tonybai.com/2020/12/10/a-kind-of-thinking-about-how-to-trace-function-call-chain/">Go函数调用链跟踪的一种实现思路 | Tony Bai&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://tonybai.com/2019/04/04/notes-about-fixing-a-go-panic-problem/">记一次go panic问题的解决过程 | Tony Bai&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.orztu.com/post/golang-trace/">https://www.orztu.com/post/golang-trace/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://studygolang.com/articles/18792">Go 语言的 Stack Trace - Go语言中文网 - Golang中文社区&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://segmentfault.com/a/1190000040612732">https://segmentfault.com/a/1190000040612732&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://colobu.com/2016/04/19/Scheduler-Tracing-In-Go/">Go 调度器跟踪&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://segmentfault.com/a/1190000019736288">https://segmentfault.com/a/1190000019736288&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/google/pprof/blob/master/doc/README.md#interpreting-the-callgraph">pprof/README.md at master · google/pprof · GitHub&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.jb51.net/article/137597.htm">golang中定时器cpu使用率高的现象详析_Golang_脚本之家&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://swsmile.info/post/golang-trace/">https://swsmile.info/post/golang-trace/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://juejin.cn/post/6844903887757901831">Golang 大杀器之跟踪剖析 trace - 掘金&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/95056679">https://zhuanlan.zhihu.com/p/95056679&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.cnblogs.com/-lee/p/12718025.html">Golang 性能测试 (3) 跟踪刨析 golang trace - 搬砖程序员带你飞 - 博客园&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/strace.html">6. strace 跟踪进程中的系统调用 — Linux Tools Quick Tutorial&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://colobu.com/2021/04/30/strace-commands-for-troubleshooting-and-debugging-linux/">[译]strace的10个命令&lt;/a>&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>MongoDB</title><link>https://justice.bj.cn/post/30.architech/mongo/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/mongo/</guid><description>&lt;h1 id="mongodb">MongoDB&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="特点">特点&lt;/h2>
&lt;ul>
&lt;li>基于内存的文档数据库, NoSQL&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>&lt;strong>模式自由：可以把不同结构的文档存储在同一个数据库里&lt;/strong>&lt;/li>
&lt;li>&lt;strong>面向集合的储存：适合储存JSON风格文件的形式&lt;/strong>&lt;/li>
&lt;li>&lt;strong>完整的索引支持：对任何属性可索引&lt;/strong>&lt;/li>
&lt;li>&lt;strong>复制和高可用性：支持服务器之间的数据复制吗，支持主从模式和服务器间的相互复制，目的是提供冗余及自动故障转移&lt;/strong>&lt;/li>
&lt;li>&lt;strong>自动分片：支持水平的数据库集群，可动态添加额外的机器&lt;/strong>&lt;/li>
&lt;li>&lt;strong>丰富的查询：丰富的查询表达式，查询指令使用JSON形式的标记和查询文档中内嵌的对象和数组&lt;/strong>&lt;/li>
&lt;li>&lt;strong>快速就地更新：查询优化器会分析查询表达式，并生成一个高效的查询计划&lt;/strong>&lt;/li>
&lt;li>&lt;strong>高效的传统储存方式：支持二进制数据集大型对象(如：图片或照片)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>SQL属于/概念&lt;/th>
&lt;th>MongoDB术语/概念&lt;/th>
&lt;th>解释/说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>database&lt;/td>
&lt;td>database&lt;/td>
&lt;td>数据库&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>table&lt;/td>
&lt;td>collection&lt;/td>
&lt;td>数据库表/集合&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>row&lt;/td>
&lt;td>document&lt;/td>
&lt;td>数据记录行/文档&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>column&lt;/td>
&lt;td>field&lt;/td>
&lt;td>数据字段/域&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>index&lt;/td>
&lt;td>index&lt;/td>
&lt;td>索引&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>table joins&lt;/td>
&lt;td>&lt;/td>
&lt;td>表连接,MongoDB不支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>primary key&lt;/td>
&lt;td>primary key&lt;/td>
&lt;td>主键,MongoDB自动将_id字段设置为主键&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="管理">管理&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 显示dbs&lt;/span>
&amp;gt; show dbs
&lt;span class="c1"># 创建db&lt;/span>
&amp;gt; use &amp;lt;DATABASE_NAME&amp;gt;
&lt;span class="c1"># 创建用户&lt;/span>
&amp;gt; db.createUser&lt;span class="o">({&lt;/span>user:&lt;span class="s2">&amp;#34;blobstore&amp;#34;&lt;/span>,pwd:&lt;span class="s2">&amp;#34;blobstore&amp;#34;&lt;/span>,roles:&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;dbOwner&amp;#34;&lt;/span>&lt;span class="o">]})&lt;/span>
&lt;span class="c1"># insert &lt;/span>
&amp;gt; db.&amp;lt;colname&amp;gt;.insert&lt;span class="o">(&lt;/span>
&lt;span class="o">{&lt;/span>name:&lt;span class="s1">&amp;#39;xxx&amp;#39;&lt;/span>,gender:1&lt;span class="o">}&lt;/span>
&lt;span class="o">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://www.jianshu.com/p/b8694894c26f">mongodb基本操作 - 简书&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>ssh</title><link>https://justice.bj.cn/post/70.tool/ssh/</link><pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/70.tool/ssh/</guid><description>&lt;h1 id="ssh">ssh&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="常用配置">常用配置&lt;/h2>
&lt;h3 id="1-关闭ssh-首次连接确认提示yesno">1. 关闭ssh 首次连接确认提示(yes/no)&lt;/h3>
&lt;p>两种方式：&lt;/p>
&lt;p>a. 修改ssh客户端配置文件&lt;code>/etc/ssh/ssh_config&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="na">Host *&lt;/span>
&lt;span class="na">StrictHostKeyChecking no&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>b. ssh命令增加参数选项：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">ssh -o &lt;span class="s2">&amp;#34;StrictHostKeyChecking no&amp;#34;&lt;/span> user@host
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-切换用户执行命令">2. 切换用户执行命令&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">ssh &lt;span class="nv">$hostname&lt;/span> &lt;span class="s2">&amp;#34;su - &lt;/span>&lt;span class="nv">$username&lt;/span>&lt;span class="s2"> -c &amp;#39;cmd&amp;#39;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-ssh通过代理登录">3. ssh通过代理登录&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 跳板机&lt;/span>
Host jumper
HostName xxxxxx
Port &lt;span class="m">20020&lt;/span>
&lt;span class="c1"># 目标机a, 通过跳板机ssh跳转&lt;/span>
Host target-a
HostName xxxxxxx
&lt;span class="c1">#User root&lt;/span>
&lt;span class="c1">#IdentityFile ~/.ssh/hbase_test_id_rsa&lt;/span>
ProxyCommand ssh jumper -W %h:%p
&lt;span class="c1"># 目标机b, 通过跳板机80端口跳转&lt;/span>
Host target-b
User root
ProxyCommand socat - PROXY:172.20.103.50:%h:%p,proxyport&lt;span class="o">=&lt;/span>80,proxyauth&lt;span class="o">=&lt;/span>PROXY_USER:PROXY_PASSWD
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4-ssh-做socks5代理">4. ssh 做socks5代理&lt;/h3>
&lt;p>本地机器在内网，可ssh登录代理机，代理机可访问外网，可在本地机器上开启ssh socks5 代理服务：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ ssh -fC2qTnN -D &lt;span class="m">6080&lt;/span> user@ssh-host
&lt;span class="c1"># sshpass&lt;/span>
$ sshpass -e ssh -fC2qTnN -D &lt;span class="m">6080&lt;/span> user@ssh-host
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>chrome不支持socket5代理，firefox中使用switchyomega插件(chrome不支持socks5，无法使用)，配置socks5代理模式&lt;/p>
&lt;h3 id="5-sshpass--pssh">5. sshpass + pssh&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">sshpass -f /path/passfile pssh -I -A -h /path/hostfile &lt;span class="s2">&amp;#34;sudo -S apt-get dist-upgrade&amp;#34;&lt;/span> &amp;lt; /path/passfile
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="6-ssh保持连接不断掉">6. ssh保持连接不断掉&lt;/h3>
&lt;p>3种方式：&lt;/p>
&lt;p>a. 服务器主动保持连接&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># sshd服务端配置`/etc/ssh/sshd_config&lt;/span>
&lt;span class="c1"># 增加参数&lt;/span>
ClientAliveInterval &lt;span class="m">120&lt;/span> &lt;span class="c1"># 每隔120s会向客户端发送一个空数据包&lt;/span>
ClientAliveCountMax &lt;span class="m">720&lt;/span> &lt;span class="c1"># 最多发送720次&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>b. client主动保持连接&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 客户端配置文件 ~/.ssh/config&lt;/span>
&lt;span class="c1"># 增加选项： ServerAliveInterval 120&lt;/span>
Host server
ServerAliveInterval &lt;span class="m">120&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>c. client 使用连接选项&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ ssh -o &lt;span class="nv">ServerAliveInterval&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">30&lt;/span> host
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="7">
&lt;li>ssh反向代理&lt;/li>
&lt;/ol>
&lt;p>存在3台机器：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>A &amp;ndash;[ssh]&amp;ndash;&amp;gt; B [IP: BB.BB.BB.BB ]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>C &amp;ndash;[ssh]&amp;ndash;&amp;gt; B&lt;/p>
&lt;/li>
&lt;li>
&lt;p>C &amp;ndash; xxxx -&amp;gt; A&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>如果需要C访问A上的某个端口8500, 可进行如下操作：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># HostA上建立反向代理tunnel，将HostB上的127.0.0.0:9090端口 和 HostA上的127.0.0.1:8500端口做绑定;&lt;/span>
&lt;span class="o">[&lt;/span>HOST-A&lt;span class="o">]&lt;/span>$ ssh -NfR 9090:127.0.0.1:8500 root@BB.BB.BB.BB
&lt;span class="c1"># HostB上建立正向代理tunnel，将BB.BB.BB.BB:9090 -&amp;gt; 127.0.0.1:9090&lt;/span>
&lt;span class="o">[&lt;/span>HOST-B&lt;span class="o">]&lt;/span>$ ssh -NfL BB.BB.BB.BB:9090:127.0.0.1:9090 root@BB.BB.BB.BB
&lt;span class="c1"># 之后，C 直接访问 BB.BB.BB.BB:9090, 请求将被转发两次，到A的8500端口上；&lt;/span>
&lt;span class="c1"># 其中，8500是HOST-A上127.0.1上可被访问的应用端口；&lt;/span>
&lt;span class="c1"># 9090是HOST-B上可被 HOST-C 通过BB.BB.BB.BB:9090 访问的端口；&lt;/span>
&lt;span class="c1">## 也可以在将第二条指令放到HOST-A上通过ssh执行，这样就不用特意登录到HOST-B上执行第二条指令了&lt;/span>
&lt;span class="o">[&lt;/span>HOST-A&lt;span class="o">]&lt;/span>$ ssh root@BB.BB.BB.BB &lt;span class="s1">&amp;#39;ssh -NL BB.BB.BB.BB:9090:127.0.0.1:9090 root@BB.BB.BB.BB&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>script:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">local_service_port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">8500&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nv">local_service_ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1&amp;#34;&lt;/span>
&lt;span class="nv">local_service_endpoint&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">local_service_ip&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">local_service_port&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nv">tunnel_port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TUNNEL_PORT&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">9090&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nv">tunnel_local_ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;127.0.0.1&amp;#34;&lt;/span>
&lt;span class="nv">tunnel_export_ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TUNNEL_IP&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">192&lt;/span>&lt;span class="p">.26.29.246&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nv">tunnel_local_endpoint&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_local_ip&lt;/span>&lt;span class="si">}&lt;/span>:&lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_port&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nv">tunnel_export_endpoint&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_export_ip&lt;/span>&lt;span class="si">}&lt;/span>:&lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_port&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nv">tunnel_user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TUNNEL_USER&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">root&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nv">tunnel_ssh_uri&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_user&lt;/span>&lt;span class="si">}&lt;/span>@&lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_export_ip&lt;/span>&lt;span class="si">}&lt;/span>
start_tunnel&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
ssh -NfR &lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_port&lt;/span>&lt;span class="si">}&lt;/span>:&lt;span class="si">${&lt;/span>&lt;span class="nv">local_service_endpoint&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_ssh_uri&lt;/span>&lt;span class="si">}&lt;/span>
ssh &lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_ssh_uri&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="s2">&amp;#34;ssh -NL &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_export_endpoint&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_local_endpoint&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">tunnel_ssh_uri&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
stop_tunnel&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;stop&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
start_tunnel &lt;span class="nv">$@&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>全排列</title><link>https://justice.bj.cn/post/leetcode/doc/46.%E5%85%A8%E6%8E%92%E5%88%97/</link><pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/46.%E5%85%A8%E6%8E%92%E5%88%97/</guid><description>&lt;h1 id="全排列httpsleetcode-cncomproblemspermutationsdescription-httpsleetcode-cncomproblemspermutationsdescription">&lt;a href="https://leetcode-cn.com/problems/permutations/description/" title="https://leetcode-cn.com/problems/permutations/description/">全排列&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (78.41%)&lt;/td>
&lt;td>1698&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Tags&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/backtracking" title="https://leetcode.com/tag/backtracking">&lt;code>backtracking&lt;/code>&lt;/a>&lt;/p>
&lt;p>&lt;strong>Companies&lt;/strong>&lt;/p>
&lt;p>&lt;code>linkedin&lt;/code> | &lt;code>microsoft&lt;/code>&lt;/p>
&lt;p>给定一个不含重复数字的数组 &lt;code>nums&lt;/code> ，返回其 &lt;strong>所有可能的全排列&lt;/strong> 。你可以 &lt;strong>按任意顺序&lt;/strong> 返回答案。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：nums = [1,2,3]
输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：nums = [0,1]
输出：[[0,1],[1,0]]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：nums = [1]
输出：[[1]]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= nums.length &amp;lt;= 6&lt;/code>&lt;/li>
&lt;li>&lt;code>-10 &amp;lt;= nums[i] &amp;lt;= 10&lt;/code>&lt;/li>
&lt;li>&lt;code>nums&lt;/code> 中的所有整数 &lt;strong>互不相同&lt;/strong>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/permutations/comments/" title="https://leetcode-cn.com/problems/permutations/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode-cn.com/problems/permutations/solution/" title="https://leetcode-cn.com/problems/permutations/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Golang数据结构之map</title><link>https://justice.bj.cn/post/14.language/golang/go%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bmap/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/go%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bmap/</guid><description>&lt;h1 id="golang数据结构之map">Golang数据结构之map&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="用法">用法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">//字面量初始化
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">hash1&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s">&amp;#34;5&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//make初始化
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">hash2&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">hash2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;span class="nx">hash2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;span class="nx">hash2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;5&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">6&lt;/span>
&lt;span class="c1">//取值
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">hash1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1">//for 遍历
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">hash2&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// k, v
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">// delete
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">hash1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">value&lt;/span>
&lt;span class="nx">hash1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">newValue&lt;/span>
&lt;span class="nb">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">hash&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="底层实现">底层实现&lt;/h2>
&lt;p>golang的map核心结构是&lt;code>hmap&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">hmap&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">count&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;span class="nx">flags&lt;/span> &lt;span class="kt">uint8&lt;/span>
&lt;span class="nx">B&lt;/span> &lt;span class="kt">uint8&lt;/span>
&lt;span class="nx">noverflow&lt;/span> &lt;span class="kt">uint16&lt;/span>
&lt;span class="nx">hash0&lt;/span> &lt;span class="kt">uint32&lt;/span>
&lt;span class="nx">buckets&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Pointer&lt;/span>
&lt;span class="nx">oldbuckets&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Pointer&lt;/span>
&lt;span class="nx">nevacuate&lt;/span> &lt;span class="kt">uintptr&lt;/span>
&lt;span class="nx">extra&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">mapextra&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">mapextra&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">overflow&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">bmap&lt;/span>
&lt;span class="nx">oldoverflow&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">bmap&lt;/span>
&lt;span class="nx">nextOverflow&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">bmap&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">bmap&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">topbits&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">uint8&lt;/span>
&lt;span class="nx">keys&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nx">keytype&lt;/span>
&lt;span class="nx">values&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nx">valuetype&lt;/span>
&lt;span class="nx">pad&lt;/span> &lt;span class="kt">uintptr&lt;/span>
&lt;span class="nx">overflow&lt;/span> &lt;span class="kt">uintptr&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://gitee.com/justice/gitnote-img-bed/raw/master/2022/02/25-18-17-28-2022-02-25-18-17-22-image.png" alt="">&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://segmentfault.com/a/1190000023879178">https://segmentfault.com/a/1190000023879178&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.bookstack.cn/read/go-internals/zh-02.3.md">基本数据结构 - map的实现 - 《深入解析Go》 - 书栈网 · BookStack&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://draveness.me/golang/docs/part2-foundation/ch03-datastructure/golang-hashmap/">理解 Golang 哈希表 Map 的原理 | Go 语言设计与实现&lt;/a>&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>两数之和</title><link>https://justice.bj.cn/post/leetcode/doc/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>&lt;h1 id="两数之和httpsleetcode-cncomproblemstwo-sumdescription-httpsleetcode-cncomproblemstwo-sumdescription">&lt;a href="https://leetcode-cn.com/problems/two-sum/description/" title="https://leetcode-cn.com/problems/two-sum/description/">两数之和&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Easy (47.03%)&lt;/td>
&lt;td>6994&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Tags&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Companies&lt;/strong>&lt;/p>
&lt;p>给定一个整数数组 &lt;code>nums&lt;/code> 和一个目标值 &lt;code>target&lt;/code>，请你在该数组中找出和为目标值的那 &lt;strong>两个&lt;/strong> 整数，并返回他们的数组下标。&lt;/p>
&lt;p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。&lt;/p>
&lt;p>&lt;strong>示例:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">给定 nums = [2, 7, 11, 15], target = 9
因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/two-sum/comments/" title="https://leetcode-cn.com/problems/two-sum/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode-cn.com/problems/two-sum/solution/" title="https://leetcode-cn.com/problems/two-sum/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;span class="s1"> ## 解题思路
&lt;/span>&lt;span class="s1"> 1.
&lt;/span>&lt;span class="s1"> &amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">twoSum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;span class="n">needed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">enumerate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">needed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">needed&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">needed&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>两链表数相加</title><link>https://justice.bj.cn/post/leetcode/doc/2.%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/2.%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</guid><description>&lt;h1 id="两链表数相加httpsleetcode-cncomproblemsadd-two-numbersdescription-httpsleetcode-cncomproblemsadd-two-numbersdescription">&lt;a href="https://leetcode-cn.com/problems/add-two-numbers/description/" title="https://leetcode-cn.com/problems/add-two-numbers/description/">两链表数相加&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (36.10%)&lt;/td>
&lt;td>3467&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Tags****Companies&lt;/strong>&lt;/p>
&lt;p>给出两个 &lt;strong>非空&lt;/strong> 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 &lt;strong>逆序&lt;/strong> 的方式存储的，并且它们的每个节点只能存储 &lt;strong>一位&lt;/strong> 数字。&lt;/p>
&lt;p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。&lt;/p>
&lt;p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。&lt;/p>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：(2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4)
输出：7 -&amp;gt; 0 -&amp;gt; 8
原因：342 + 465 = 807
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/add-two-numbers/comments/" title="https://leetcode-cn.com/problems/add-two-numbers/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode-cn.com/problems/add-two-numbers/solution/" title="https://leetcode-cn.com/problems/add-two-numbers/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="s1">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;span class="s1"> ## 解题思路
&lt;/span>&lt;span class="s1"> 1.
&lt;/span>&lt;span class="s1"> &amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">addTwoNumbers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">l1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">l2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dummy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="n">l1&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">None&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">l2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">l1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">l1&lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="kc">None&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">l2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">val&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">l2&lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="kc">None&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">v&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">v&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">10&lt;/span>
&lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">l1&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">l1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">l2&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">l2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">l2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">p&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ListNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">dummy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">next&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>外观数列</title><link>https://justice.bj.cn/post/leetcode/doc/38.%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/38.%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</guid><description>&lt;h1 id="外观数列httpsleetcode-cncomproblemscount-and-saydescription-httpsleetcode-cncomproblemscount-and-saydescription">&lt;a href="https://leetcode-cn.com/problems/count-and-say/description/" title="https://leetcode-cn.com/problems/count-and-say/description/">外观数列&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (59.80%)&lt;/td>
&lt;td>869&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Tags&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/string" title="https://leetcode.com/tag/string">&lt;code>string&lt;/code>&lt;/a>&lt;/p>
&lt;p>&lt;strong>Companies&lt;/strong>&lt;/p>
&lt;p>&lt;code>facebook&lt;/code>&lt;/p>
&lt;p>给定一个正整数 &lt;code>n&lt;/code> ，输出外观数列的第 &lt;code>n&lt;/code> 项。&lt;/p>
&lt;p>「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。&lt;/p>
&lt;p>你可以将其视作是由递归公式定义的数字字符串序列：&lt;/p>
&lt;ul>
&lt;li>&lt;code>countAndSay(1) = &amp;quot;1&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>countAndSay(n)&lt;/code> 是对 &lt;code>countAndSay(n-1)&lt;/code> 的描述，然后转换成另一个数字字符串。&lt;/li>
&lt;/ul>
&lt;p>前五项如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">1. 1
2. 11
3. 21
4. 1211
5. 111221
第一项是数字 1
描述前一项，这个数是 1 即 “ 一 个 1 ”，记作 &amp;#34;11&amp;#34;
描述前一项，这个数是 11 即 “ 二 个 1 ” ，记作 &amp;#34;21&amp;#34;
描述前一项，这个数是 21 即 “ 一 个 2 + 一 个 1 ” ，记作 &amp;#34;1211&amp;#34;
描述前一项，这个数是 1211 即 “ 一 个 1 + 一 个 2 + 二 个 1 ” ，记作 &amp;#34;111221&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>要 &lt;strong>描述&lt;/strong> 一个数字字符串，首先要将字符串分割为 &lt;strong>最小&lt;/strong> 数量的组，每个组都由连续的最多 &lt;strong>相同字符&lt;/strong> 组成。然后对于每个组，先描述字符的数量，然后描述字符，形成一个描述组。要将描述转换为数字字符串，先将每组中的字符数量用数字替换，再将所有描述组连接起来。&lt;/p>
&lt;p>例如，数字字符串 &lt;code>&amp;quot;3322251&amp;quot;&lt;/code> 的描述如下图：&lt;/p>
&lt;p>&lt;img src="https://pic.leetcode-cn.com/1629874763-TGmKUh-image.png" alt="">&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 1
输出：&amp;#34;1&amp;#34;
解释：这是一个基本样例。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 4
输出：&amp;#34;1211&amp;#34;
解释：
countAndSay(1) = &amp;#34;1&amp;#34;
countAndSay(2) = 读 &amp;#34;1&amp;#34; = 一 个 1 = &amp;#34;11&amp;#34;
countAndSay(3) = 读 &amp;#34;11&amp;#34; = 二 个 1 = &amp;#34;21&amp;#34;
countAndSay(4) = 读 &amp;#34;21&amp;#34; = 一 个 2 + 一 个 1 = &amp;#34;12&amp;#34; + &amp;#34;11&amp;#34; = &amp;#34;1211&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= n &amp;lt;= 30&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/count-and-say/comments/" title="https://leetcode-cn.com/problems/count-and-say/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode-cn.com/problems/count-and-say/solution/" title="https://leetcode-cn.com/problems/count-and-say/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// * 递归法
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// * 先求出n-1时的字符串；
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// * 再统计n-1个字符串中每个字符出现的次数；
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// * 统计时，可以使用fold iter；
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">count_and_say&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n_1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Self&lt;/span>::&lt;span class="n">count_and_say&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n_1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">chars&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">&amp;#39;&amp;amp;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">done&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in_prog&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in_prog&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">done&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in_prog&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in_prog&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">&amp;#39;&amp;amp;&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}{}{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">done&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in_prog&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">done&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}{}{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>字符串相乘</title><link>https://justice.bj.cn/post/leetcode/doc/43.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/43.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/</guid><description>&lt;h1 id="字符串相乘httpsleetcode-cncomproblemsmultiply-stringsdescription-httpsleetcode-cncomproblemsmultiply-stringsdescription">&lt;a href="https://leetcode-cn.com/problems/multiply-strings/description/" title="https://leetcode-cn.com/problems/multiply-strings/description/">字符串相乘&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (44.98%)&lt;/td>
&lt;td>838&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Tags&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/math" title="https://leetcode.com/tag/math">&lt;code>math&lt;/code>&lt;/a> | &lt;a href="https://leetcode.com/tag/string" title="https://leetcode.com/tag/string">&lt;code>string&lt;/code>&lt;/a>&lt;/p>
&lt;p>&lt;strong>Companies&lt;/strong>&lt;/p>
&lt;p>&lt;code>facebook&lt;/code> | &lt;code>twitter&lt;/code>&lt;/p>
&lt;p>给定两个以字符串形式表示的非负整数 &lt;code>num1&lt;/code> 和 &lt;code>num2&lt;/code>，返回 &lt;code>num1&lt;/code> 和 &lt;code>num2&lt;/code> 的乘积，它们的乘积也表示为字符串形式。&lt;/p>
&lt;p>**注意：**不能使用任何内置的 BigInteger 库或直接将输入转换为整数。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入: num1 = &amp;#34;2&amp;#34;, num2 = &amp;#34;3&amp;#34;
输出: &amp;#34;6&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入: num1 = &amp;#34;123&amp;#34;, num2 = &amp;#34;456&amp;#34;
输出: &amp;#34;56088&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= num1.length, num2.length &amp;lt;= 200&lt;/code>&lt;/li>
&lt;li>&lt;code>num1&lt;/code> 和 &lt;code>num2&lt;/code> 只能由数字组成。&lt;/li>
&lt;li>&lt;code>num1&lt;/code> 和 &lt;code>num2&lt;/code> 都不包含任何前导零，除了数字0本身。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/multiply-strings/comments/" title="https://leetcode-cn.com/problems/multiply-strings/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode-cn.com/problems/multiply-strings/solution/" title="https://leetcode-cn.com/problems/multiply-strings/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>数据湖(Delta Lake)</title><link>https://justice.bj.cn/post/30.architech/%E6%95%B0%E6%8D%AE%E6%B9%96/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/%E6%95%B0%E6%8D%AE%E6%B9%96/</guid><description>&lt;h1 id="数据湖delta-lake">数据湖(Delta Lake)&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Data lake&lt;/strong>这个术语由Pentaho公司创始人兼CTO&lt;strong>詹姆斯·狄克逊&lt;/strong>(James Dixon)发明，他对数据湖的解释是： &lt;u>把你以前在磁带上拥有的东西倒入到数据湖，然后开始探索这些数据&lt;/u>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据湖的想法是将企业中的所有数据（从原始数据开始保存，这意味着源系统数据的精确副本）保存于同一个存储介质中，以用于各种任务（包括报告，可视化，分析和机器学习）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据湖创建了一个适用于所有格式数据的集中式数据存储，包括：关系数据库的数据（行和列），半结构化数据（CSV，日志，XML，JSON），非结构化数据（电子邮件，文档，PDF）甚至二进制数据（图像，音频，视频）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在数据湖方案里，数据移动和管理的工具非常重要。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="数据湖与数据仓库数据集市的区别">数据湖与数据仓库、数据集市的区别&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>数据库：侧重事务处理能力，OLTP，关注:QPS, TPS, IOPS这些指标；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据仓库：侧重分析能力，数据入库时有一定的scheme，OLAP；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据湖：入库时没有scheme，&lt;/p>
&lt;/li>
&lt;li>
&lt;p>湖仓一体：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="主要功能">主要功能&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>ACID 事务&lt;/strong>：Delta Lake 提供多次写入之间的 ACID 事务。每次写入都是一个事务，并且在事务日志中顺序记录了写入的序列。事务日志跟踪文件级别的写入并使用&lt;a href="https://links.jianshu.com/go?to=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FOptimistic_concurrency_control">乐观并发控制&lt;/a>，这非常适合数据湖泊，因为不会经常发生多个写入尝试修改相同的文件的情况。在存在冲突的情况下，Delta Lake 会抛出并发修改异常以遍用户处理并重试其作业。 Delta Lake 还提供强大的&lt;a href="https://links.jianshu.com/go?to=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FIsolation_%28database_systems%29%23Serializable">可序列化隔离级别&lt;/a>，允许工程师持续写入一个目录或表，并允许消费者持续从同一目录或表中进行读取。读取者将会看到开始读取时存在的最新快照。&lt;/li>
&lt;li>&lt;strong>Schema 管理&lt;/strong>：Delta Lake 自动验证正在写入的 DataFrame 的 Schema 是否与表的 Schema 兼容。表中存在但不在 DataFrame 中的列设置为 null。如果 DataFrame 中有 Schema 中没有定义的列，则此操作会引发异常。 Delta Lake 具有显式添加新列的 DDL 以及自动更新 Schema 的能力。&lt;/li>
&lt;li>&lt;strong>可扩展的元数据处理&lt;/strong>：Delta Lake 将表或目录的元数据信息存储在事务日志中，而不是 Metastore 中，这允许Delta Lake在恒定时间内列出大型目录中的文件，并在读取数据时更高效。&lt;/li>
&lt;li>&lt;strong>数据版本控制和时间旅行&lt;/strong>：Delta Lake 允许用户读取表或目录的历史快照。在写入或者修改文件时，Delta Lake会创建较新版本的文件并保留旧版本。当用户想要读取旧版本的表或目录时，他们可以为 Apache Spark 的读取 API 提供时间戳或版本号，Delta Lake 根据事务日志中的信息构建该时间戳或版本的完整快照。这允许用户重现实验和报告，并在需要时将表还原为旧版本。&lt;/li>
&lt;li>&lt;strong>统一批处理和流式处理&lt;/strong>：除了批量写入，Delta Lake 还可以用作 Apache Spark Structured Streaming 的高效流式接收器。结合 ACID 事务和可扩展的元数据处理，高效的流式传输接收器现在可以实现大量近实时分析用例，而无需维护复杂的流式传输和批处理管道。&lt;/li>
&lt;li>&lt;strong>记录更新和删除&lt;/strong>（即将发布）：Delta Lake 提供合并、更新和删除这些 DML 命令。这允许工程师很方便的对数据进行修改和删除，简化数据变更捕获以及 GDPR。因为 Delta Lake 按文件粒度跟踪数据变更，所以比一次处理所有分区或表要高效的多。&lt;/li>
&lt;li>&lt;strong>数据期望&lt;/strong>（即将推出）：Delta Lake 还将支持新的 API 来设置表或目录的数据期望。工程师将能够指定布尔条件并调整严重程度以处理数据期望。当 Apache Spark 作业写入表或目录时，Delta Lake 将自动验证记录，当存在违规时，它将根据提供的严重程度配置对记录进行处理。&lt;/li>
&lt;/ul>
&lt;h2 id="deltalake">deltalake&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scala" data-lang="scala">&lt;span class="c1">//# spark version: 2.4.6
&lt;/span>&lt;span class="c1">//# jdk: 1.8.0_172
&lt;/span>&lt;span class="c1">//# scala: 2.11
&lt;/span>&lt;span class="c1">//$ cd $SPARK_HOME
&lt;/span>&lt;span class="c1">//$ bin/spark-shell --jars ./jars/delta-core_2.11-0.6.0.jar
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">val&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="k">=&lt;/span> &lt;span class="n">spark&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;delta&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="n">save&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;file:///mnt/cfs/spark/delta-table&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="k">val&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="k">=&lt;/span> &lt;span class="n">spark&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;delta&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;overwrite&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="n">save&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;file:///mnt/cfs/spark/delta-table&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1">//du数据
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">val&lt;/span> &lt;span class="n">df&lt;/span> &lt;span class="k">=&lt;/span> &lt;span class="n">spark&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;delta&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/tmp/delta-table&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="o">()&lt;/span>
&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">val&lt;/span> &lt;span class="n">df&lt;/span> &lt;span class="k">=&lt;/span> &lt;span class="n">spark&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;delta&amp;#34;&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="n">option&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;versionAsOf&amp;#34;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">).&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s">&amp;#34;/tmp/delta-table&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="n">df&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://help.aliyun.com/document_detail/148369.html?spm=a2c6h.12873639.0.0.43197803PJYFDj">https://help.aliyun.com/document_detail/148369.html?spm=a2c6h.12873639.0.0.43197803PJYFDj&lt;/a>&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>无重复字符的最长子串</title><link>https://justice.bj.cn/post/leetcode/doc/3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</guid><description>&lt;h1 id="无重复字符的最长子串httpsleetcode-cncomproblemslongest-substring-without-repeating-charactersdescription-httpsleetcode-cncomproblemslongest-substring-without-repeating-charactersdescription">&lt;a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/description/" title="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/description/">无重复字符的最长子串&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (32.18%)&lt;/td>
&lt;td>2861&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Tags&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/hash-table" title="https://leetcode.com/tag/hash-table">&lt;code>hash-table&lt;/code>&lt;/a> | &lt;a href="https://leetcode.com/tag/two-pointers" title="https://leetcode.com/tag/two-pointers">&lt;code>two-pointers&lt;/code>&lt;/a> | &lt;a href="https://leetcode.com/tag/string" title="https://leetcode.com/tag/string">&lt;code>string&lt;/code>&lt;/a> | &lt;a href="https://leetcode.com/tag/sliding-window" title="https://leetcode.com/tag/sliding-window">&lt;code>sliding-window&lt;/code>&lt;/a>&lt;/p>
&lt;p>&lt;strong>Companies&lt;/strong>&lt;/p>
&lt;p>&lt;code>adobe&lt;/code> | &lt;code>amazon&lt;/code> | &lt;code>bloomberg&lt;/code> | &lt;code>yelp&lt;/code>&lt;/p>
&lt;p>给定一个字符串，请你找出其中不含有重复字符的 **最长子串 **的长度。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入: &amp;#34;abcabcbb&amp;#34;
输出: 3
解释: 因为无重复字符的最长子串是 &amp;#34;abc&amp;#34;，所以其长度为 3。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入: &amp;#34;bbbbb&amp;#34;
输出: 1
解释: 因为无重复字符的最长子串是 &amp;#34;b&amp;#34;，所以其长度为 1。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 3:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入: &amp;#34;pwwkew&amp;#34;
输出: 3
解释: 因为无重复字符的最长子串是 &amp;#34;wke&amp;#34;，所以其长度为 3。
  请注意，你的答案必须是 子串 的长度，&amp;#34;pwke&amp;#34; 是一个子序列，不是子串。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/comments/" title="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/" title="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;h3 id="1-滑动窗口">1. 滑动窗口&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>使用一个滑动窗口来记录每个无重复字符子串；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>窗口的右边界&lt;code>r&lt;/code>为遍历时当前字符数组下标；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>窗口的左边界&lt;code>l&lt;/code>在出现重复字符&lt;code>c&lt;/code>时，向右滑动一格；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>最长子串长度为所有滑动窗口长度&lt;code>m&lt;/code>的最大值；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为了快速判断是否出现重复字符，使用map来记录每个已经遍历过的字符c的最后一次出现的下标；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="代码">代码&lt;/h2>
&lt;ul>
&lt;li>rust&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">collections&lt;/span>::&lt;span class="n">HashMap&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">///
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">length_of_longest_substring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>: &lt;span class="nb">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">i32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">chars&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">enumerate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">unwrap_or&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>有效的数独</title><link>https://justice.bj.cn/post/leetcode/doc/36.%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/</link><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/36.%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/</guid><description>&lt;h1 id="有效的数独httpsleetcode-cncomproblemsvalid-sudokudescription-httpsleetcode-cncomproblemsvalid-sudokudescription">&lt;a href="https://leetcode-cn.com/problems/valid-sudoku/description/" title="https://leetcode-cn.com/problems/valid-sudoku/description/">有效的数独&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (63.73%)&lt;/td>
&lt;td>772&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Tags&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/hash-table" title="https://leetcode.com/tag/hash-table">&lt;code>hash-table&lt;/code>&lt;/a>&lt;/p>
&lt;p>&lt;strong>Companies&lt;/strong>&lt;/p>
&lt;p>&lt;code>apple&lt;/code> | &lt;code>snapchat&lt;/code> | &lt;code>uber&lt;/code>&lt;/p>
&lt;p>请你判断一个 &lt;code>9 x 9&lt;/code> 的数独是否有效。只需要 &lt;strong>根据以下规则&lt;/strong> ，验证已经填入的数字是否有效即可。&lt;/p>
&lt;ol>
&lt;li>数字 &lt;code>1-9&lt;/code> 在每一行只能出现一次。&lt;/li>
&lt;li>数字 &lt;code>1-9&lt;/code> 在每一列只能出现一次。&lt;/li>
&lt;li>数字 &lt;code>1-9&lt;/code> 在每一个以粗实线分隔的 &lt;code>3x3&lt;/code> 宫内只能出现一次。（请参考示例图）&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>注意：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>一个有效的数独（部分已被填充）不一定是可解的。&lt;/li>
&lt;li>只需要根据以上规则，验证已经填入的数字是否有效即可。&lt;/li>
&lt;li>空白格用 &lt;code>'.'&lt;/code> 表示。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/04/12/250px-sudoku-by-l2g-20050714svg.png" alt="">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：board =
[[&amp;#34;5&amp;#34;,&amp;#34;3&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;7&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;]
,[&amp;#34;6&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;9&amp;#34;,&amp;#34;5&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;]
,[&amp;#34;.&amp;#34;,&amp;#34;9&amp;#34;,&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;6&amp;#34;,&amp;#34;.&amp;#34;]
,[&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;6&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;3&amp;#34;]
,[&amp;#34;4&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;3&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;1&amp;#34;]
,[&amp;#34;7&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;2&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;6&amp;#34;]
,[&amp;#34;.&amp;#34;,&amp;#34;6&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;2&amp;#34;,&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;]
,[&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;4&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;9&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;5&amp;#34;]
,[&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;7&amp;#34;,&amp;#34;9&amp;#34;]]
输出：true
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：board =
[[&amp;#34;8&amp;#34;,&amp;#34;3&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;7&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;]
,[&amp;#34;6&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;9&amp;#34;,&amp;#34;5&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;]
,[&amp;#34;.&amp;#34;,&amp;#34;9&amp;#34;,&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;6&amp;#34;,&amp;#34;.&amp;#34;]
,[&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;6&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;3&amp;#34;]
,[&amp;#34;4&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;3&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;1&amp;#34;]
,[&amp;#34;7&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;2&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;6&amp;#34;]
,[&amp;#34;.&amp;#34;,&amp;#34;6&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;2&amp;#34;,&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;]
,[&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;4&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;9&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;5&amp;#34;]
,[&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;8&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;.&amp;#34;,&amp;#34;7&amp;#34;,&amp;#34;9&amp;#34;]]
输出：false
解释：除了第一行的第一个数字从 5 改为 8 以外，空格内其他数字均与 示例1 相同。 但由于位于左上角的 3x3 宫内有两个 8 存在, 因此这个数独是无效的。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>board.length == 9&lt;/code>&lt;/li>
&lt;li>&lt;code>board[i].length == 9&lt;/code>&lt;/li>
&lt;li>&lt;code>board[i][j]&lt;/code> 是一位数字（&lt;code>1-9&lt;/code>）或者 &lt;code>'.'&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/valid-sudoku/comments/" title="https://leetcode-cn.com/problems/valid-sudoku/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode-cn.com/problems/valid-sudoku/solution/" title="https://leetcode-cn.com/problems/valid-sudoku/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="cm">/*
&lt;/span>&lt;span class="cm"> * ## 解题思路
&lt;/span>&lt;span class="cm"> * 1. 使用map分别保存每行，每列，每个sub的&amp;lt;c, count&amp;gt;
&lt;/span>&lt;span class="cm"> * 2. 任意map value &amp;gt; 1, 则返回false;
&lt;/span>&lt;span class="cm"> * 3. 没有重复，则retrun true;
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kt">bool&lt;/span> &lt;span class="n">isValidSudoku&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">char&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&amp;amp;&lt;/span> &lt;span class="n">board&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">char&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">col&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">blk&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="kt">char&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">board&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="sc">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="n">row&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">col&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">blk&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>