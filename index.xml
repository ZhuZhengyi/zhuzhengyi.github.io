<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Justice的小站</title><link>https://justice.bj.cn/</link><description>Recent content on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 27 Jun 2023 10:28:19 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Justice's Blog</title><link>https://justice.bj.cn/homepage/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/about/</guid><description>&lt;h2 id="self-introduction">Self Introduction&lt;/h2>
&lt;p>Cras ex dui, tristique a libero eget, consectetur semper ligula. Nunc augue arcu, malesuada a nisi et, molestie finibus metus. Sed lacus odio, ultricies a nisl vitae, sollicitudin tempor ipsum. Vivamus quis feugiat arcu. Sed mi nunc, efficitur quis tellus vitae, posuere mattis metus. Phasellus in mattis dui. Nullam blandit, augue non ullamcorper dapibus, lacus dui molestie massa, in iaculis purus lectus eu lectus. Duis hendrerit lacinia tellus, sit amet feugiat dolor placerat id. Aenean ac velit massa. Vivamus feugiat dui at magna viverra, ut dictum nunc rutrum. Duis eget sapien finibus, lobortis orci id, vestibulum tellus. Maecenas lobortis urna libero, quis fermentum lectus lobortis nec. Nullam laoreet volutpat libero, ac mattis magna ullamcorper quis. Duis eget ipsum eu nisi mattis cursus et vitae turpis.&lt;/p>
&lt;p>Aliquam pretium diam eget leo feugiat finibus. Donec malesuada commodo ipsum. Aenean a massa in lacus venenatis vestibulum. Duis vel sem quis elit iaculis consectetur et quis dolor. Morbi eu ipsum hendrerit, malesuada ante sed, dapibus est. Suspendisse feugiat nulla ut gravida convallis. Phasellus id massa posuere, rhoncus justo ut, porttitor dolor. Nulla ultrices malesuada egestas. Nunc fermentum tincidunt sem ac vulputate. Donec mollis sollicitudin justo eget varius. Donec ornare velit et felis blandit, id molestie sapien lobortis. Morbi eget tristique justo. Mauris posuere, nibh eu laoreet ultricies, ligula erat iaculis sapien, vel dapibus lacus libero ut diam. Etiam viverra ante felis, et scelerisque nunc pellentesque vitae. Praesent feugiat dictum molestie.&lt;/p>
&lt;h2 id="details">Details&lt;/h2>
&lt;p>Nunc pellentesque vitae:&lt;/p>
&lt;ul>
&lt;li>Morbi accumsan nibh efficitur diam molestie, non dignissim diam facilisis.&lt;/li>
&lt;li>Donec dignissim leo in mollis faucibus.&lt;/li>
&lt;li>Donec blandit lacus a pellentesque fermentum.&lt;/li>
&lt;/ul>
&lt;p>Donec mollis sollicitudin:&lt;/p>
&lt;ul>
&lt;li>Nunc dictum purus ornare purus consectetur, eu pellentesque massa ullamcorper.&lt;/li>
&lt;li>Aliquam eu leo vitae justo aliquam tincidunt.&lt;/li>
&lt;li>Fusce non massa id augue interdum feugiat sed et nulla.&lt;/li>
&lt;li>Vivamus molestie augue in tristique laoreet.&lt;/li>
&lt;/ul></description></item><item><title>Pages</title><link>https://justice.bj.cn/homepage/pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/pages/</guid><description/></item><item><title>Experiences</title><link>https://justice.bj.cn/homepage/experiences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/experiences/</guid><description/></item><item><title>Vintage</title><link>https://justice.bj.cn/homepage/vintage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/vintage/</guid><description/></item><item><title>Blank</title><link>https://justice.bj.cn/homepage/blank/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/blank/</guid><description>
&lt;div style="text-align:center">
&lt;p>Write anything you like here!&lt;/p>
&lt;/div></description></item><item><title>Linux虚拟内存空间管理</title><link>https://justice.bj.cn/post/21.linux/linux%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/</link><pubDate>Tue, 27 Jun 2023 10:28:19 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/linux%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/</guid><description>&lt;h1 id="linux虚拟内存空间管理">Linux虚拟内存空间管理&lt;/h1>
&lt;h2 id="段">段&lt;/h2>
&lt;p>在 32 位的操作系统中，每个进程都拥有 4GB 的虚拟内存空间。&lt;/p>
&lt;p>Linux 根据功能上的差异，把整个虚拟内存空间划分为多个不同区间，称为 &lt;code>段&lt;/code>。&lt;/p>
&lt;p>Linux 进程虚拟内存空间的布局图，如图 1 所示：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2023/03/01-08-17-37-2023-03-01-08-17-30-image.png" alt="">&lt;/p>
&lt;p>进程的用户空间大小为 3GB。Linux 按照功能上的差异，把一个进程的用户空间划分为多个段，下面介绍一下各个段的作用：&lt;/p>
&lt;ul>
&lt;li>&lt;code>代码段&lt;/code>：用于存放程序中可执行代码的段。&lt;/li>
&lt;li>&lt;code>数据段&lt;/code>：用于存放已经初始化的全局变量或静态变量的段。如在 C 语言中，使用语句 &lt;code>int global = 10;&lt;/code> 定义的全局变量。&lt;/li>
&lt;li>&lt;code>未初始化数据段&lt;/code>：用于存放未初始化的全局变量或静态变量的段。如在 C 语言中，使用语句 &lt;code>int global;&lt;/code> 定义的全局变量。&lt;/li>
&lt;li>&lt;code>堆&lt;/code>：用于存放使用 &lt;code>malloc&lt;/code> 函数申请的内存。&lt;/li>
&lt;li>&lt;code>mmap区&lt;/code>：用于存放使用 &lt;code>mmap&lt;/code> 函数映射的内存区。&lt;/li>
&lt;li>&lt;code>栈&lt;/code>：用于存放函数局部变量和函数参数。&lt;/li>
&lt;/ul>
&lt;h2 id="虚拟内存区">虚拟内存区&lt;/h2>
&lt;p>从上面的介绍可知，Linux 按照功能上的差异，把虚拟内存空间划分为多个 &lt;code>段&lt;/code>。那么在内核中，是通过什么结构来管理这些段的呢？&lt;/p>
&lt;blockquote>
&lt;p>答案就是：&lt;strong>vm_area_struct&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;p>内核通过 &lt;code>vm_area_struct&lt;/code> 结构（虚拟内存区）来管理各个 &lt;code>段&lt;/code>，其定义如下：&lt;/p>
&lt;p>复制&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">struct&lt;/span> &lt;span class="nx">vm_area_struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">struct&lt;/span> &lt;span class="nx">mm_struct&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">vm_mm&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* The address space we belong to. */&lt;/span>
&lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">long&lt;/span> &lt;span class="nx">vm_start&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Our start address within vm_mm. */&lt;/span>
&lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">long&lt;/span> &lt;span class="nx">vm_end&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* The first byte after our end address within vm_mm. */&lt;/span>
&lt;span class="cm">/* linked list of VM areas per task, sorted by address */&lt;/span>
&lt;span class="nx">struct&lt;/span> &lt;span class="nx">vm_area_struct&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">vm_next&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">pgprot_t&lt;/span> &lt;span class="nx">vm_page_prot&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Access permissions of this VMA. */&lt;/span>
&lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">long&lt;/span> &lt;span class="nx">vm_flags&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Flags, see mm.h. */&lt;/span>
&lt;span class="nx">struct&lt;/span> &lt;span class="nx">rb_node&lt;/span> &lt;span class="nx">vm_rb&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="cm">/* Function pointers to deal with this struct. */&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">struct&lt;/span> &lt;span class="nx">vm_operations_struct&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">vm_ops&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="p">};&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制&lt;/p>
&lt;p>下面介绍一下各个字段的作用：&lt;/p>
&lt;ul>
&lt;li>&lt;code>vm_mm&lt;/code>：指向进程的内存管理对象，每个进程都有一个类型为 &lt;code>mm_struct&lt;/code> 的内存管理对象，用于管理进程的虚拟内存空间和内存映射等。&lt;/li>
&lt;li>&lt;code>vm_start&lt;/code>：虚拟内存区的起始虚拟内存地址。&lt;/li>
&lt;li>&lt;code>vm_end&lt;/code>：虚拟内存区的结束虚拟内存地址。&lt;/li>
&lt;li>&lt;code>vm_next&lt;/code>：Linux 会通过链表把进程的所有虚拟内存区连接起来，这个字段用于指向下一个虚拟内存区。&lt;/li>
&lt;li>&lt;code>vm_page_prot&lt;/code>：主要用于保存当前虚拟内存区所映射的物理内存页的读写权限。&lt;/li>
&lt;li>&lt;code>vm_flags&lt;/code>：标识当前虚拟内存区的功能特性。&lt;/li>
&lt;li>&lt;code>vm_rb&lt;/code>：某些场景中需要通过虚拟内存地址查找对应的虚拟内存区，为了加速查找过程，内核以虚拟内存地址作为key，把进程所有的虚拟内存区保存到一棵红黑树中，而这个字段就是红黑树的节点结构。&lt;/li>
&lt;li>&lt;code>vm_ops&lt;/code>：每个虚拟内存区都可以自定义一套操作接口，通过操作接口，能够让虚拟内存区实现一些特定的功能，比如：把虚拟内存区映射到文件。而 &lt;code>vm_ops&lt;/code> 字段就是虚拟内存区的操作接口集，一般在创建虚拟内存区时指定。&lt;/li>
&lt;/ul>
&lt;p>我们通过图 2 来展示内核是怎么通过 &lt;code>vm_area_struct&lt;/code> 结构来管理进程中的所有 &lt;code>段&lt;/code>：&lt;/p>
&lt;p>&lt;img src="https://ask.qcloudimg.com/http-save/yehe-7686797/20907977pa.png?imageView2/2/w/1620" alt="">&lt;/p>
&lt;p>从上图可以看出，内核通过一个链表和一棵红黑树来管理进程中所有的 &lt;code>段&lt;/code>。&lt;code>mm_struct&lt;/code> 结构的 &lt;code>mmap&lt;/code> 字段就是链表的头节点，而 &lt;code>mm_rb&lt;/code> 字段就是红黑树的根节点。&lt;/p>
&lt;h2 id="加载程序镜像">加载程序镜像&lt;/h2>
&lt;p>前面我们介绍了 Linux 会把虚拟内存地址划分为多个 &lt;code>段&lt;/code>，并且使用 &lt;code>vm_area_struct&lt;/code> 结构来管理这些段。那么，这些虚拟内存区是怎么建立起来的呢？&lt;/p>
&lt;p>在介绍进程虚拟内存区建立的过程前，我们先来简单介绍一下 &lt;code>ELF文件格式&lt;/code>。&lt;/p>
&lt;h3 id="elf文件">ELF文件&lt;/h3>
&lt;p>ELF 全称 &lt;strong>Executable and Linkable Format&lt;/strong>，即可执行可链接文件格式。在 Linux 系统中，就是使用这种文件格式来存储一个可执行的应用程序。让我们来看一下 ELF 文件格式由哪些结构组成：&lt;/p>
&lt;p>一般一个 ELF 文件由以下三部分组成：&lt;/p>
&lt;ul>
&lt;li>ELF 头（ELF header）：描述应用程序的类型、CPU架构、入口地址、程序头表偏移和节头表偏移等等；&lt;/li>
&lt;li>程序头表（Program header table）：列举了所有有效的段（segments）和他们的属性，程序头表需要加载器将文件中的段加载到虚拟内存段中；&lt;/li>
&lt;li>节头表（Section header table）：包含对节（sections）的描述。&lt;/li>
&lt;/ul>
&lt;p>ELF 文件的结构大概如图3所示：&lt;/p>
&lt;p>&lt;img src="https://ask.qcloudimg.com/http-save/yehe-7686797/1ek0ihekji.png?imageView2/2/w/1620" alt="">&lt;/p>
&lt;p>当内核加载一个应用程序时，就是通过读取 ELF 文件的信息，然后把文件中所有的段加载到虚拟内存的段中。ELF 文件通过 &lt;code>程序头表&lt;/code> 来描述应用程序中所有的段，表中的每一个项都描述一个段的信息。我们先来看看 &lt;code>程序头表&lt;/code> 项的结构定义：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">typedef&lt;/span> &lt;span class="nx">struct&lt;/span> &lt;span class="nx">elf64_phdr&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Elf64_Word&lt;/span> &lt;span class="nx">p_type&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 段的类型
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Elf64_Word&lt;/span> &lt;span class="nx">p_flags&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 可读写标志
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Elf64_Off&lt;/span> &lt;span class="nx">p_offset&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 段在ELF文件中的偏移量
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Elf64_Addr&lt;/span> &lt;span class="nx">p_vaddr&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 段的虚拟内存地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Elf64_Addr&lt;/span> &lt;span class="nx">p_paddr&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 段的物理内存地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Elf64_Xword&lt;/span> &lt;span class="nx">p_filesz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 段占用文件的大小
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Elf64_Xword&lt;/span> &lt;span class="nx">p_memsz&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 段占用内存的大小
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Elf64_Xword&lt;/span> &lt;span class="nx">p_align&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 内存对齐
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="nx">Elf64_Phdr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制&lt;/p>
&lt;p>所以，程序加载器可以通过 ELF 头中获取到程序头表的偏移量，然后通过程序头表的偏移量读取到程序头表的数据，再通过程序头表来获取到所有段的信息。&lt;/p>
&lt;p>我们可以通过 &lt;code>readelf -S file&lt;/code> 命令来查看 ELF 文件的段（节）信息，如下图所示：&lt;/p>
&lt;p>&lt;img src="https://ask.qcloudimg.com/http-save/yehe-7686797/lxgeyl149c.png?imageView2/2/w/1620" alt="">&lt;/p>
&lt;p>上面列出了 &lt;code>代码段&lt;/code>、&lt;code>数据段&lt;/code>、&lt;code>未初始化数据段&lt;/code> 和 &lt;code>注释段&lt;/code> 的信息。&lt;/p>
&lt;h3 id="加载过程">加载过程&lt;/h3>
&lt;p>要加载一个程序，需要调用 &lt;code>execve&lt;/code> 系统调用来完成。我们来看看 &lt;code>execve&lt;/code> 系统调用的调用栈：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">sys_execve&lt;/span>
&lt;span class="err">└→&lt;/span> &lt;span class="nx">do_execve&lt;/span>
&lt;span class="err">└→&lt;/span> &lt;span class="nx">do_execveat_common&lt;/span>
&lt;span class="err">└→&lt;/span> &lt;span class="mi">__&lt;/span>&lt;span class="nx">do_execve_file&lt;/span>
&lt;span class="err">└→&lt;/span> &lt;span class="nx">exec_binprm&lt;/span>
&lt;span class="err">└→&lt;/span> &lt;span class="nx">search_binary_handler&lt;/span>
&lt;span class="err">└→&lt;/span> &lt;span class="nx">load_elf_binary&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制&lt;/p>
&lt;p>复制&lt;/p>
&lt;p>从上面的调用者可以看出，&lt;code>execve&lt;/code> 系统调用最终会调用 &lt;code>load_elf_binary&lt;/code> 函数来加载程序的 ELF 文件。&lt;/p>
&lt;p>由于 &lt;code>load_elf_binary&lt;/code> 函数的实现比较复杂，所以我们分段来解说：&lt;/p>
&lt;p>&lt;strong>（1）读取并检查ELF头&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">static&lt;/span> &lt;span class="kr">int&lt;/span> &lt;span class="nx">load_elf_binary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">struct&lt;/span> &lt;span class="nx">linux_binprm&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">bprm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">struct&lt;/span> &lt;span class="nx">pt_regs&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">regs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="nx">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">struct&lt;/span> &lt;span class="nx">elfhdr&lt;/span> &lt;span class="nx">elf_ex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">struct&lt;/span> &lt;span class="nx">elfhdr&lt;/span> &lt;span class="nx">interp_elf_ex&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">loc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">loc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">kmalloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">loc&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">GFP_KERNEL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">loc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">retval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">ENOMEM&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">goto&lt;/span> &lt;span class="nx">out_ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 1. 获取ELF头
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">loc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">elf_ex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">struct&lt;/span> &lt;span class="nx">elfhdr&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nx">bprm&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">buf&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">retval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">ENOEXEC&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 2. 检查ELF签名是否正确
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">memcmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">loc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">elf_ex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">e_ident&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ELFMAG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">SELFMAG&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">goto&lt;/span> &lt;span class="nx">out&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 3. 是否是可执行文件或者动态库
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">loc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">elf_ex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">e_type&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">ET_EXEC&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">loc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">elf_ex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">e_type&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">ET_DYN&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">goto&lt;/span> &lt;span class="nx">out&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 4. 检查系统架构是否正确
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">elf_check_arch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">loc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">elf_ex&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="kr">goto&lt;/span> &lt;span class="nx">out&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制&lt;/p>
&lt;p>复制&lt;/p>
&lt;p>上面这段代码主要是读取应用程序的 ELF 头，然后检查 ELF 头信息是否合法。&lt;/p>
&lt;p>&lt;strong>（2）读取程序头表&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript"> &lt;span class="nx">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">loc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">elf_ex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">e_phnum&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">struct&lt;/span> &lt;span class="nx">elf_phdr&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 程序头表的大小
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">retval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">ENOMEM&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">elf_phdata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">kmalloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GFP_KERNEL&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 申请一块内存来保存程序头表
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">elf_phdata&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">goto&lt;/span> &lt;span class="nx">out&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">// 从ELF文件中读取程序头表的数据, 并且保存到 elf_phdata 变量中
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">retval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">kernel_read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bprm&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">loc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">elf_ex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">e_phoff&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nx">elf_phdata&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">size&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">retval&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">size&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">retval&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">retval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">EIO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">goto&lt;/span> &lt;span class="nx">out_free_ph&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制&lt;/p>
&lt;p>复制&lt;/p>
&lt;p>上面的代码主要完成以下几个工作：&lt;/p>
&lt;ul>
&lt;li>从 ELF 头的信息中获取到程序头表的大小。&lt;/li>
&lt;li>调用 &lt;code>kmalloc&lt;/code> 函数申请一块内存来保存程序头表。&lt;/li>
&lt;li>调用 &lt;code>kernel_read&lt;/code> 函数从 ELF 文件中读取程序头表的数据，保存到 &lt;code>elf_phdata&lt;/code> 变量中，程序头表的偏移量可以通过 ELF 头的 &lt;code>e_phoff&lt;/code> 字段获取。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>（3）加载段到虚拟内存&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript"> &lt;span class="c1">// 遍历程序头表所有的段
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">elf_ppnt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">elf_phdata&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">loc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">elf_ex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">e_phnum&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">elf_ppnt&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">int&lt;/span> &lt;span class="nx">elf_prot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">elf_flags&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">long&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">vaddr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">elf_ppnt&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">p_type&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">PT_LOAD&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 判断段是否需要加载
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">continue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="c1">// 段的可读写权限
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">elf_ppnt&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">p_flags&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="nx">PF_R&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">elf_prot&lt;/span> &lt;span class="o">|=&lt;/span> &lt;span class="nx">PROT_READ&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">elf_ppnt&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">p_flags&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="nx">PF_W&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">elf_prot&lt;/span> &lt;span class="o">|=&lt;/span> &lt;span class="nx">PROT_WRITE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">elf_ppnt&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">p_flags&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="nx">PF_X&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">elf_prot&lt;/span> &lt;span class="o">|=&lt;/span> &lt;span class="nx">PROT_EXEC&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">elf_flags&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">MAP_PRIVATE&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nx">MAP_DENYWRITE&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="nx">MAP_EXECUTABLE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">vaddr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">elf_ppnt&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">p_vaddr&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 获取段的虚拟内存地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="c1">// 把段加载到虚拟内存
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">elf_map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bprm&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">load_bias&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">vaddr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">elf_ppnt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">elf_prot&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">elf_flags&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制&lt;/p>
&lt;p>复制&lt;/p>
&lt;p>上面这段代码主要完成的工作是：&lt;/p>
&lt;ul>
&lt;li>遍历程序头表所有的段。&lt;/li>
&lt;li>判断段是否需要加载。&lt;/li>
&lt;li>获取段的可读写权限和段的虚拟内存地址。&lt;/li>
&lt;li>调用 &lt;code>elf_map&lt;/code> 函数把段加载到虚拟内存。&lt;/li>
&lt;/ul>
&lt;p>所以，把段加载到虚拟内存主要通过 &lt;code>elf_map&lt;/code> 函数完成。我们来看看 &lt;code>elf_map&lt;/code> 函数的调用栈：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">elf_map&lt;/span>
&lt;span class="err">└→&lt;/span> &lt;span class="nx">do_mmap&lt;/span>
&lt;span class="err">└→&lt;/span> &lt;span class="nx">do_mmap_pgoff&lt;/span>
&lt;span class="err">└→&lt;/span> &lt;span class="nx">mmap_region&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制&lt;/p>
&lt;p>复制&lt;/p>
&lt;p>从上面的调用者可以看出，&lt;code>elf_map&lt;/code> 函数最终会调用 &lt;code>mmap_region&lt;/code> 来完成加载段到虚拟内存。我们分析一下 &lt;code>mmap_region&lt;/code> 函数的实现：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">long&lt;/span>
&lt;span class="nx">mmap_region&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">struct&lt;/span> &lt;span class="nx">file&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">long&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">long&lt;/span> &lt;span class="nx">len&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">long&lt;/span> &lt;span class="nx">flags&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">int&lt;/span> &lt;span class="nx">vm_flags&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsigned&lt;/span> &lt;span class="kr">long&lt;/span> &lt;span class="nx">pgoff&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">struct&lt;/span> &lt;span class="nx">mm_struct&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">mm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">current&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">mm&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">struct&lt;/span> &lt;span class="nx">vm_area_struct&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">vma&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">prev&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="c1">// 申请一个 vm_area_struct 结构
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">vma&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">kmem_cache_zalloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vm_area_cachep&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GFP_KERNEL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">vma&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nx">ENOMEM&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">goto&lt;/span> &lt;span class="nx">unacct_error&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 设置 vm_area_struct 结构各个字段的值
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">vma&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">vm_mm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">mm&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">vma&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">vm_start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 段的开始虚拟内存地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">vma&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">vm_end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">addr&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">len&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 段的结束虚拟内存地址
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">vma&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">vm_flags&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vm_flags&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 段的功能特性
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">vma&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">vm_page_prot&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vm_get_page_prot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vm_flags&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">vma&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="nx">vm_pgoff&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">pgoff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="c1">// 把 vm_area_struct 结构连接到虚拟内存区链表和红黑树中
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">vma_link&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">vma&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">prev&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rb_link&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rb_parent&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制&lt;/p>
&lt;p>上面代码对 &lt;code>mmap_region&lt;/code> 函数进行了精简，精简后的工作主要有：&lt;/p>
&lt;ul>
&lt;li>调用 &lt;code>kmem_cache_zalloc&lt;/code> 函数申请一个 &lt;code>vm_area_struct&lt;/code>（虚拟内存区）结构。&lt;/li>
&lt;li>设置 &lt;code>vm_area_struct&lt;/code> 结构各个字段的值。&lt;/li>
&lt;li>调用 &lt;code>vma_link&lt;/code> 函数把 &lt;code>vm_area_struct&lt;/code> 结构连接到虚拟内存区链表和红黑树中。&lt;/li>
&lt;/ul>
&lt;p>通过上面的过程，内核就把应用程序的所有段加载到虚拟内存中。&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://cloud.tencent.com/developer/article/1835295">完全剖析 - Linux虚拟内存空间管理 - 腾讯云开发者社区-腾讯云&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s?__biz=MzA3NzYzODg1OA==&amp;amp;mid=2648464745&amp;amp;idx=1&amp;amp;sn=374b770823d0a9e9677386160e57f71c&amp;amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzA3NzYzODg1OA==&amp;amp;mid=2648464745&amp;amp;idx=1&amp;amp;sn=374b770823d0a9e9677386160e57f71c&amp;amp;scene=21#wechat_redirect&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://wangxuemin.github.io/2015/07/30/LINUX%E7%A8%8B%E5%BA%8F(%E8%BF%9B%E7%A8%8B)%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%B8%83%E5%B1%80/">LINUX程序(进程)在内存中的布局 | mumumuwudi的博客&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Golang汇编</title><link>https://justice.bj.cn/post/14.language/golang/golang%E6%B1%87%E7%BC%96/</link><pubDate>Mon, 26 Jun 2023 14:41:45 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E6%B1%87%E7%BC%96/</guid><description>&lt;h1 id="golang汇编">Golang汇编&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>golang的汇编基于plan9汇编,是一个中间汇编方式，以忽略底层不同架构之间的一些差别；&lt;/p>
&lt;h3 id="寄存器">寄存器&lt;/h3>
&lt;p>Go汇编引入了4个伪寄存器，这4个寄存器时编译器用来维护上下文、特殊标识等作用的:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>PC&lt;/strong>(Program counter, 程序计数器): jumps and branches，指向指令地址&lt;/li>
&lt;li>&lt;strong>FP&lt;/strong>(Frame pointer, 栈桢指针): arguments and locals.(指向当前栈帧)，形如 &lt;code>symbol+offset(FP)&lt;/code> 的方式，引用函数的输入参数。例如 &lt;code>arg0+0(FP)&lt;/code>&lt;/li>
&lt;li>&lt;strong>SB&lt;/strong>(Static base pointer,全局静态基指针): global symbols.(指向全局符号表)&lt;/li>
&lt;li>&lt;strong>SP&lt;/strong>(Stack pointer, 栈顶指针): top of stack.(指向当前栈顶部)，形如 &lt;code>symbol+offset(SP)&lt;/code> 的方式，引用函数的局部变量&lt;/li>
&lt;/ul>
&lt;p>注意: 栈是向下整长 golang的汇编是调用者维护参数返回值跟返回地址。所以FP的值小于参数跟返回值。&lt;/p>
&lt;h4 id="常用操作指令">常用操作指令&lt;/h4>
&lt;p>格式：&lt;code>&amp;lt;指令&amp;gt; [源操作数] [目的操作数]&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>助记符&lt;/th>
&lt;th>指令种类&lt;/th>
&lt;th>用途&lt;/th>
&lt;th>示例&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>MOVQ&lt;/code>&lt;/td>
&lt;td>传送&lt;/td>
&lt;td>数据传送&lt;/td>
&lt;td>MOVQ 48, AX&lt;/td>
&lt;td>// 把 48 传送到 AX&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>LEAQ&lt;/code>&lt;/td>
&lt;td>传送&lt;/td>
&lt;td>地址传送&lt;/td>
&lt;td>LEAQ AX, BX&lt;/td>
&lt;td>// 把 AX 有效地址传送到 BX&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>PUSHQ&lt;/code>&lt;/td>
&lt;td>传送&lt;/td>
&lt;td>栈压入&lt;/td>
&lt;td>PUSHQ AX&lt;/td>
&lt;td>// 将 AX 内容送入栈顶位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>POPQ&lt;/code>&lt;/td>
&lt;td>传送&lt;/td>
&lt;td>栈弹出&lt;/td>
&lt;td>POPQ AX&lt;/td>
&lt;td>// 弹出栈顶数据后修改栈顶指针&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ADDQ&lt;/code>&lt;/td>
&lt;td>运算&lt;/td>
&lt;td>相加并赋值&lt;/td>
&lt;td>ADDQ BX, AX&lt;/td>
&lt;td>// 等价于 AX+=BX&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SUBQ&lt;/code>&lt;/td>
&lt;td>运算&lt;/td>
&lt;td>相减并赋值&lt;/td>
&lt;td>SUBQ BX, AX&lt;/td>
&lt;td>// 等价于 AX-=BX&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CMPQ&lt;/code>&lt;/td>
&lt;td>运算&lt;/td>
&lt;td>比较大小&lt;/td>
&lt;td>CMPQ SI CX&lt;/td>
&lt;td>// 比较 SI 和 CX 的大小&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CALL&lt;/code>&lt;/td>
&lt;td>转移&lt;/td>
&lt;td>调用函数&lt;/td>
&lt;td>CALL runtime.printnl(SB)&lt;/td>
&lt;td>// 发起调用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>JMP&lt;/code>&lt;/td>
&lt;td>转移&lt;/td>
&lt;td>无条件转移指令&lt;/td>
&lt;td>JMP 0x0185&lt;/td>
&lt;td>//无条件转至 0x0185 地址处&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>JLS&lt;/code>&lt;/td>
&lt;td>转移&lt;/td>
&lt;td>条件转移指令&lt;/td>
&lt;td>JLS 0x0185&lt;/td>
&lt;td>//左边小于右边，则跳到 0x0185&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-nasm" data-lang="nasm">&lt;span class="err">//&lt;/span> &lt;span class="err">栈&lt;/span>
&lt;span class="nf">SUBQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mh">0x18&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">SP&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="nb">SP&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="err">=&lt;/span> &lt;span class="mh">0x18&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">栈指针下移，栈范围扩大，为函数分配函数栈帧&lt;/span>
&lt;span class="nf">ADDQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mh">0x18&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">SP&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="nb">SP&lt;/span> &lt;span class="o">++&lt;/span> &lt;span class="mh">0x18&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">清除函数栈帧&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">数据&lt;/span>&lt;span class="nf">copy&lt;/span>
&lt;span class="nf">MOVB&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">DI&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="kt">byte&lt;/span>&lt;span class="err">，常数用&lt;/span>&lt;span class="kc">$&lt;/span>&lt;span class="nv">num表示&lt;/span>
&lt;span class="nf">MOVW&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mh">0x10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">BX&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="nv">s&lt;/span>
&lt;span class="nf">MOVD&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">DX&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="kt">byte&lt;/span>&lt;span class="nv">s&lt;/span>
&lt;span class="nf">MOVQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">AX&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="kt">byte&lt;/span>&lt;span class="nv">s&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">计算指令&lt;/span>
&lt;span class="nf">ADDQ&lt;/span> &lt;span class="nb">AX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">BX&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="nb">BX&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="err">=&lt;/span> &lt;span class="nb">AX&lt;/span>
&lt;span class="nf">SUBQ&lt;/span> &lt;span class="nb">AX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">BX&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="nb">BX&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="err">=&lt;/span> &lt;span class="nb">AX&lt;/span>
&lt;span class="nf">IMULQ&lt;/span> &lt;span class="nb">AX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">BX&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="nb">BX&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="err">=&lt;/span> &lt;span class="nb">AX&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">跳转&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">无条件跳转&lt;/span>
&lt;span class="nf">JMP&lt;/span> &lt;span class="nv">addr&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="err">跳转到地址，地址可为代码中的地址&lt;/span> &lt;span class="err">不过实际上手写不会出现这种东西&lt;/span>
&lt;span class="nf">JMP&lt;/span> &lt;span class="nv">label&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="err">跳转到标签&lt;/span> &lt;span class="err">可以跳转到同一函数内的标签位置&lt;/span>
&lt;span class="nf">JMP&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">PC&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="err">以当前置顶为基础，向前&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">后跳转&lt;/span>&lt;span class="nv">x行&lt;/span>
&lt;span class="nf">JMP&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">PC&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="err">同上&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">有条件跳转&lt;/span>
&lt;span class="nf">JNZ&lt;/span> &lt;span class="nv">target&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="err">如果&lt;/span>&lt;span class="nv">zero&lt;/span> &lt;span class="nv">flag被set过&lt;/span>&lt;span class="err">，则跳转&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="err">变量&lt;/span>
&lt;span class="nf">DATA&lt;/span> &lt;span class="nv">symbol&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nv">offset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nv">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nv">value&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="err">初始化&lt;/span>&lt;span class="nv">symbol&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nv">offset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">的数据中&lt;/span>&lt;span class="nv">width&lt;/span> &lt;span class="kt">byte&lt;/span>&lt;span class="nv">s&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err">赋值为&lt;/span>&lt;span class="nv">value&lt;/span>
&lt;span class="nf">GLOBL&lt;/span> &lt;span class="nv">runtime&lt;/span>&lt;span class="err">·&lt;/span>&lt;span class="nv">tlsoffset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nv">NOPTR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">4&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="err">声明一个全局变量&lt;/span>&lt;span class="nv">tlsoffset&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="err">，没有&lt;/span>&lt;span class="nv">DATA部分&lt;/span>&lt;span class="err">，因其值为&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="err">。&lt;/span>
&lt;span class="err">//&lt;/span> &lt;span class="nf">NOPTR&lt;/span> &lt;span class="err">表示这个变量数据中不存在指针，&lt;/span>&lt;span class="nv">GC不需要扫描&lt;/span>&lt;span class="err">。&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="汇编示例">汇编示例&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">sum&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1">// 不设置该局部变量sum，add栈空间大小会是0
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">sum&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">b&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">sum&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;span class="nb">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编译汇编&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ go tool compile -N -l -S main.go
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-nasm" data-lang="nasm">&lt;span class="err">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nf">.add&lt;/span> &lt;span class="nv">STEXT&lt;/span> &lt;span class="nv">nosplit&lt;/span> &lt;span class="nb">si&lt;/span>&lt;span class="nv">ze&lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="mi">60&lt;/span> &lt;span class="nv">args&lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="mh">0x18&lt;/span> &lt;span class="nv">locals&lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="mh">0x10&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0000&lt;/span> &lt;span class="mi">00000&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">TEXT&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">.add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nv">NOSPLIT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">24&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0000&lt;/span> &lt;span class="mi">00000&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">SUBQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">SP&lt;/span> &lt;span class="c1">;;生成add栈空间&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0004&lt;/span> &lt;span class="mi">00004&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="nb">BP&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0009&lt;/span> &lt;span class="mi">00009&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">LEAQ&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">BP&lt;/span>
&lt;span class="c1">;; ...omitted FUNCDATA stuff... &lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x000e&lt;/span> &lt;span class="mi">00014&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">.~r2&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;;初始化返回值&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0017&lt;/span> &lt;span class="mi">00023&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">.sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;;局部变量sum赋为0&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x001f&lt;/span> &lt;span class="mi">00031&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">.a&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">AX&lt;/span> &lt;span class="c1">;;取参数a&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0024&lt;/span> &lt;span class="mi">00036&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">ADDQ&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">.b&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">AX&lt;/span> &lt;span class="c1">;;等价于AX=a+b&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0029&lt;/span> &lt;span class="mi">00041&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="nb">AX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">.sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;;赋值局部变量sum&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x002d&lt;/span> &lt;span class="mi">00045&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="nb">AX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">.~r2&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;;设置返回值&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0032&lt;/span> &lt;span class="mi">00050&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">BP&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0037&lt;/span> &lt;span class="mi">00055&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">ADDQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">SP&lt;/span> &lt;span class="c1">;;清除add栈空间&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x003b&lt;/span> &lt;span class="mi">00059&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">RET&lt;/span>
&lt;span class="nf">......&lt;/span>
&lt;span class="err">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nf">.main&lt;/span> &lt;span class="nv">STEXT&lt;/span> &lt;span class="nb">si&lt;/span>&lt;span class="nv">ze&lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="mi">107&lt;/span> &lt;span class="nv">args&lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="mh">0x0&lt;/span> &lt;span class="nv">locals&lt;/span>&lt;span class="err">=&lt;/span>&lt;span class="mh">0x28&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0000&lt;/span> &lt;span class="mi">00000&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">TEXT&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">.main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">0&lt;/span>
&lt;span class="nf">......&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x000f&lt;/span> &lt;span class="mi">00015&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">SUBQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">SP&lt;/span> &lt;span class="c1">;; 生成main栈空间&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0013&lt;/span> &lt;span class="mi">00019&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="nb">BP&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0018&lt;/span> &lt;span class="mi">00024&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">LEAQ&lt;/span> &lt;span class="mi">32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">BP&lt;/span>
&lt;span class="c1">;; ...omitted FUNCDATA stuff...&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x001d&lt;/span> &lt;span class="mi">00029&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;;add入参：1&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0025&lt;/span> &lt;span class="mi">00037&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;;add入参：2&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x002e&lt;/span> &lt;span class="mi">00046&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">CALL&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">.add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;;调用add函数&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0033&lt;/span> &lt;span class="mi">00051&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">AX&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0038&lt;/span> &lt;span class="mi">00056&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="nb">AX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">..autotmp_0&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x003d&lt;/span> &lt;span class="mi">00061&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">CALL&lt;/span> &lt;span class="nv">runtime.printlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0042&lt;/span> &lt;span class="mi">00066&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">..autotmp_0&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">AX&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0047&lt;/span> &lt;span class="mi">00071&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="nb">AX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x004b&lt;/span> &lt;span class="mi">00075&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">CALL&lt;/span> &lt;span class="nv">runtime.printint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0050&lt;/span> &lt;span class="mi">00080&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">CALL&lt;/span> &lt;span class="nv">runtime.printnl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0055&lt;/span> &lt;span class="mi">00085&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">CALL&lt;/span> &lt;span class="nv">runtime.printunlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">SB&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x005a&lt;/span> &lt;span class="mi">00090&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">MOVQ&lt;/span> &lt;span class="mi">32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">SP&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">BP&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x005f&lt;/span> &lt;span class="mi">00095&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">ADDQ&lt;/span> &lt;span class="kc">$&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">SP&lt;/span> &lt;span class="c1">;;清除main栈空间&lt;/span>
&lt;span class="err">0&lt;/span>&lt;span class="nf">x0063&lt;/span> &lt;span class="mi">00099&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">main.go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">RET&lt;/span>
&lt;span class="nf">......&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2022/01/09-15-58-32-2022-01-09-15-58-27-image.png" alt="">&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://guidao.github.io/asm.html">golang汇编基础知识&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://chai2010.cn/advanced-go-programming-book/ch3-asm/ch3-02-arch.html">3.2 计算机结构 · Go语言高级编程&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://segmentfault.com/a/1190000039753236">汇编是深入理解 Go 的基础&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://go.dev/doc/asm">A Quick Guide to Go's Assembler - The Go Programming Language&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/348227592">https://zhuanlan.zhihu.com/p/348227592&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://xargin.com/plan9-assembly/">Go 系列文章3 ：plan9 汇编入门&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://xiaomi-info.github.io/2019/11/27/golang-compiler-plan9/">https://xiaomi-info.github.io/2019/11/27/golang-compiler-plan9/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>一和零</title><link>https://justice.bj.cn/post/leetcode/doc/474.%E4%B8%80%E5%92%8C%E9%9B%B6/</link><pubDate>Mon, 26 Jun 2023 14:41:45 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/474.%E4%B8%80%E5%92%8C%E9%9B%B6/</guid><description>&lt;h1 id="一和零httpsleetcodecnproblemsones-and-zeroesdescription-httpsleetcodecnproblemsones-and-zeroesdescription">&lt;a href="https://leetcode.cn/problems/ones-and-zeroes/description/" title="https://leetcode.cn/problems/ones-and-zeroes/description/">一和零&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (65.13%)&lt;/td>
&lt;td>982&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/dynamic-programming" title="https://leetcode.com/tag/dynamic-programming">&lt;code>dynamic-programming&lt;/code>&lt;/a>&lt;/p>
&lt;details open="">&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;p>&lt;code>google&lt;/code>&lt;/p>
&lt;p>给你一个二进制字符串数组 &lt;code>strs&lt;/code> 和两个整数 &lt;code>m&lt;/code> 和 &lt;code>n&lt;/code> 。&lt;/p>
&lt;p>请你找出并返回 &lt;code>strs&lt;/code> 的最大子集的长度，该子集中 &lt;strong>最多&lt;/strong> 有 &lt;code>m&lt;/code> 个 &lt;code>0&lt;/code> 和 &lt;code>n&lt;/code> 个 &lt;code>1&lt;/code> 。&lt;/p>
&lt;p>如果 &lt;code>x&lt;/code> 的所有元素也是 &lt;code>y&lt;/code> 的元素，集合 &lt;code>x&lt;/code> 是集合 &lt;code>y&lt;/code> 的 &lt;strong>子集&lt;/strong> 。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：strs = [&amp;#34;10&amp;#34;, &amp;#34;0001&amp;#34;, &amp;#34;111001&amp;#34;, &amp;#34;1&amp;#34;, &amp;#34;0&amp;#34;], m = 5, n = 3
输出：4
解释：最多有 5 个 0 和 3 个 1 的最大子集是 {&amp;#34;10&amp;#34;,&amp;#34;0001&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;} ，因此答案是 4 。
其他满足题意但较小的子集包括 {&amp;#34;0001&amp;#34;,&amp;#34;1&amp;#34;} 和 {&amp;#34;10&amp;#34;,&amp;#34;1&amp;#34;,&amp;#34;0&amp;#34;} 。{&amp;#34;111001&amp;#34;} 不满足题意，因为它含 4 个 1 ，大于 n 的值 3 。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：strs = [&amp;#34;10&amp;#34;, &amp;#34;0&amp;#34;, &amp;#34;1&amp;#34;], m = 1, n = 1
输出：2
解释：最大的子集是 {&amp;#34;0&amp;#34;, &amp;#34;1&amp;#34;} ，所以答案是 2 。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= strs.length &amp;lt;= 600&lt;/code>&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= strs[i].length &amp;lt;= 100&lt;/code>&lt;/li>
&lt;li>&lt;code>strs[i]&lt;/code> 仅由 &lt;code>'0'&lt;/code> 和 &lt;code>'1'&lt;/code> 组成&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= m, n &amp;lt;= 100&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://leetcode.cn/problems/ones-and-zeroes/comments/" title="https://leetcode.cn/problems/ones-and-zeroes/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/ones-and-zeroes/solution/" title="https://leetcode.cn/problems/ones-and-zeroes/solution/">Solution&lt;/a>&lt;/p>
&lt;p>解法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// @lc code=start
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// - 动态规划(0-1背包问题)
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 1. 令 dp[i][j]: 表示最多i个0,j个1的最大子集数;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 2. 递推关系: dp[i][j] = max(dp[i-z][j-o]+1) (i=[z..=m], j=[o..=n]);
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 3. 初始条件: dp[0][0] = 0;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 4. 终止条件: dp[m][n];
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">find_max_form&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">strs&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">i32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">str_01_count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">str&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="p">(&lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">chars&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">fold&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0_&lt;/span>&lt;span class="k">i32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">strs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">str_01_count&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rev&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">rev&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>分发饼干</title><link>https://justice.bj.cn/post/leetcode/doc/455.%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</link><pubDate>Thu, 22 Jun 2023 14:52:33 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/455.%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</guid><description>&lt;h1 id="分发饼干httpsleetcodecnproblemsassign-cookiesdescription-httpsleetcodecnproblemsassign-cookiesdescription">&lt;a href="https://leetcode.cn/problems/assign-cookies/description/" title="https://leetcode.cn/problems/assign-cookies/description/">分发饼干&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Easy (56.44%)&lt;/td>
&lt;td>727&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/greedy" title="https://leetcode.com/tag/greedy">&lt;code>greedy&lt;/code>&lt;/a>&lt;/p>
&lt;details open="">&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;p>&lt;code>Unknown&lt;/code>&lt;/p>
&lt;p>假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。&lt;/p>
&lt;p>对每个孩子 &lt;code>i&lt;/code>，都有一个胃口值 &lt;code>g[i]&lt;/code> ~，~ 这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 &lt;code>j&lt;/code>，都有一个尺寸 &lt;code>s[j]&lt;/code> ~ ~ 。如果 &lt;code>s[j] &amp;gt;= g[i]&lt;/code>，我们可以将这个饼干 &lt;code>j&lt;/code> 分配给孩子 &lt;code>i&lt;/code> ，这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，并输出这个最大数值。&lt;/p>
&lt;p>&lt;strong>示例 1:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入: g = [1,2,3], s = [1,1]
输出: 1
解释:
你有三个孩子和两块小饼干，3个孩子的胃口值分别是：1,2,3。
虽然你有两块小饼干，由于他们的尺寸都是1，你只能让胃口值是1的孩子满足。
所以你应该输出1。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入: g = [1,2], s = [1,2,3]
输出: 2
解释:
你有两个孩子和三块小饼干，2个孩子的胃口值分别是1,2。
你拥有的饼干数量和尺寸都足以让所有孩子满足。
所以你应该输出2.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= g.length &amp;lt;= 3 * 10&amp;lt;sup&amp;gt;4&amp;lt;/sup&amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>0 &amp;lt;= s.length &amp;lt;= 3 * 10&amp;lt;sup&amp;gt;4&amp;lt;/sup&amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= g[i], s[j] &amp;lt;= 2&amp;lt;sup&amp;gt;31&amp;lt;/sup&amp;gt; - 1&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://leetcode.cn/problems/assign-cookies/comments/" title="https://leetcode.cn/problems/assign-cookies/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/assign-cookies/solution/" title="https://leetcode.cn/problems/assign-cookies/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// @lc code=start
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">find_content_children&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">i32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0_&lt;/span>&lt;span class="k">i32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sort&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sort&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 饼干大小能满足当前最小的孩子胃口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">g&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 分配一块饼干
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>找出数组中的所有 K 近邻下标</title><link>https://justice.bj.cn/post/leetcode/doc/2200.%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89k%E8%BF%91%E9%82%BB%E4%B8%8B%E6%A0%87/</link><pubDate>Thu, 22 Jun 2023 14:52:33 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/2200.%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89k%E8%BF%91%E9%82%BB%E4%B8%8B%E6%A0%87/</guid><description>&lt;h1 id="找出数组中的所有-k-近邻下标httpsleetcodecnproblemsfind-all-k-distant-indices-in-an-arraydescription-httpsleetcodecnproblemsfind-all-k-distant-indices-in-an-arraydescription">&lt;a href="https://leetcode.cn/problems/find-all-k-distant-indices-in-an-array/description/" title="https://leetcode.cn/problems/find-all-k-distant-indices-in-an-array/description/">找出数组中的所有 K 近邻下标&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Easy (53.79%)&lt;/td>
&lt;td>15&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/Unknown" title="https://leetcode.com/tag/Unknown">&lt;code>Unknown&lt;/code>&lt;/a>&lt;/p>
&lt;details open="">&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;p>&lt;code>Unknown&lt;/code>&lt;/p>
&lt;p>给你一个下标从 &lt;strong>0&lt;/strong> 开始的整数数组 &lt;code>nums&lt;/code> 和两个整数 &lt;code>key&lt;/code> 和 &lt;code>k&lt;/code> 。&lt;strong>K 近邻下标&lt;/strong> 是 &lt;code>nums&lt;/code> 中的一个下标 &lt;code>i&lt;/code> ，并满足至少存在一个下标 &lt;code>j&lt;/code> 使得 &lt;code>|i - j| &amp;lt;= k&lt;/code> 且 &lt;code>nums[j] == key&lt;/code> 。&lt;/p>
&lt;p>以列表形式返回按 &lt;strong>递增顺序&lt;/strong> 排序的所有 K 近邻下标。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：nums = [3,4,9,1,3,9,5], key = 9, k = 1
输出：[1,2,3,4,5,6]
解释：因此，nums[2] == key 且 nums[5] == key 。
- 对下标 0 ，|0 - 2| &amp;gt; k 且 |0 - 5| &amp;gt; k ，所以不存在 j 使得 |0 - j| &amp;lt;= k 且 nums[j] == key 。所以 0 不是一个 K 近邻下标。
- 对下标 1 ，|1 - 2| &amp;lt;= k 且 nums[2] == key ，所以 1 是一个 K 近邻下标。
- 对下标 2 ，|2 - 2| &amp;lt;= k 且 nums[2] == key ，所以 2 是一个 K 近邻下标。
- 对下标 3 ，|3 - 2| &amp;lt;= k 且 nums[2] == key ，所以 3 是一个 K 近邻下标。
- 对下标 4 ，|4 - 5| &amp;lt;= k 且 nums[5] == key ，所以 4 是一个 K 近邻下标。
- 对下标 5 ，|5 - 5| &amp;lt;= k 且 nums[5] == key ，所以 5 是一个 K 近邻下标。
- 对下标 6 ，|6 - 5| &amp;lt;= k 且 nums[5] == key ，所以 6 是一个 K 近邻下标。
因此，按递增顺序返回 [1,2,3,4,5,6] 。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：nums = [2,2,2,2,2], key = 2, k = 2
输出：[0,1,2,3,4]
解释：对 nums 的所有下标 i ，总存在某个下标 j 使得 |i - j| &amp;lt;= k 且 nums[j] == key ，所以每个下标都是一个 K 近邻下标。
因此，返回 [0,1,2,3,4] 。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= nums.length &amp;lt;= 1000&lt;/code>&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= nums[i] &amp;lt;= 1000&lt;/code>&lt;/li>
&lt;li>&lt;code>key&lt;/code> 是数组 &lt;code>nums&lt;/code> 中的一个整数&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= k &amp;lt;= nums.length&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://leetcode.cn/problems/find-all-k-distant-indices-in-an-array/comments/" title="https://leetcode.cn/problems/find-all-k-distant-indices-in-an-array/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/find-all-k-distant-indices-in-an-array/solution/" title="https://leetcode.cn/problems/find-all-k-distant-indices-in-an-array/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// @lc code=start
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// -
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">find_k_distant_indices&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Vec&lt;/span>::&lt;span class="n">with_capacity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0_&lt;/span>&lt;span class="k">i32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">enumerate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>网络空闲的时刻</title><link>https://justice.bj.cn/post/leetcode/doc/2039.%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B2%E7%9A%84%E6%97%B6%E5%88%BB/</link><pubDate>Thu, 22 Jun 2023 14:52:33 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/2039.%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B2%E7%9A%84%E6%97%B6%E5%88%BB/</guid><description>&lt;h1 id="网络空闲的时刻httpsleetcodecnproblemsthe-time-when-the-network-becomes-idledescription-httpsleetcodecnproblemsthe-time-when-the-network-becomes-idledescription">&lt;a href="https://leetcode.cn/problems/the-time-when-the-network-becomes-idle/description/" title="https://leetcode.cn/problems/the-time-when-the-network-becomes-idle/description/">网络空闲的时刻&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (55.85%)&lt;/td>
&lt;td>119&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/Unknown" title="https://leetcode.com/tag/Unknown">&lt;code>Unknown&lt;/code>&lt;/a>&lt;/p>
&lt;details open="">&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;p>&lt;code>Unknown&lt;/code>&lt;/p>
&lt;p>给你一个有 &lt;code>n&lt;/code> 个服务器的计算机网络，服务器编号为 &lt;code>0&lt;/code> 到 &lt;code>n - 1&lt;/code> 。同时给你一个二维整数数组 &lt;code>edges&lt;/code> ，其中 &lt;code>edges[i] = [u&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;, v&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;]&lt;/code> 表示服务器 &lt;code>u&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;&lt;/code> 和 &lt;code>v&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;&lt;/code>~ ~之间有一条信息线路，在 &lt;strong>一秒&lt;/strong> 内它们之间可以传输 &lt;strong>任意&lt;/strong> 数目的信息。再给你一个长度为 &lt;code>n&lt;/code> 且下标从 &lt;strong>0&lt;/strong> 开始的整数数组 &lt;code>patience&lt;/code> 。&lt;/p>
&lt;p>题目保证所有服务器都是 &lt;strong>相通&lt;/strong> 的，也就是说一个信息从任意服务器出发，都可以通过这些信息线路直接或间接地到达任何其他服务器。&lt;/p>
&lt;p>编号为 &lt;code>0&lt;/code> 的服务器是 &lt;strong>主&lt;/strong> 服务器，其他服务器为 &lt;strong>数据&lt;/strong> 服务器。每个数据服务器都要向主服务器发送信息，并等待回复。信息在服务器之间按 &lt;strong>最优&lt;/strong> 线路传输，也就是说每个信息都会以 &lt;strong>最少时间&lt;/strong> 到达主服务器。主服务器会处理 &lt;strong>所有&lt;/strong> 新到达的信息并 &lt;strong>立即&lt;/strong> 按照每条信息来时的路线 &lt;strong>反方向&lt;/strong> 发送回复信息。&lt;/p>
&lt;p>在 &lt;code>0&lt;/code> 秒的开始，所有数据服务器都会发送各自需要处理的信息。从第 &lt;code>1&lt;/code> 秒开始，&lt;strong>每&lt;/strong> 一秒最 &lt;strong>开始&lt;/strong> 时，每个数据服务器都会检查它是否收到了主服务器的回复信息（包括新发出信息的回复信息）：&lt;/p>
&lt;ul>
&lt;li>如果还没收到任何回复信息，那么该服务器会周期性 &lt;strong>重发&lt;/strong> 信息。数据服务器 &lt;code>i&lt;/code> 每 &lt;code>patience[i]&lt;/code> 秒都会重发一条信息，也就是说，数据服务器 &lt;code>i&lt;/code> 在上一次发送信息给主服务器后的 &lt;code>patience[i]&lt;/code> 秒 &lt;strong>后&lt;/strong> 会重发一条信息给主服务器。&lt;/li>
&lt;li>否则，该数据服务器 &lt;strong>不会重发&lt;/strong> 信息。&lt;/li>
&lt;/ul>
&lt;p>当没有任何信息在线路上传输或者到达某服务器时，该计算机网络变为 &lt;strong>空闲&lt;/strong> 状态。&lt;/p>
&lt;p>请返回计算机网络变为 &lt;strong>空闲&lt;/strong> 状态的 &lt;strong>最早秒数&lt;/strong> 。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://assets.leetcode.com/uploads/2021/09/22/quiet-place-example1.png" alt="example 1">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：edges = [[0,1],[1,2]], patience = [0,2,1]
输出：8
解释：
0 秒最开始时，
- 数据服务器 1 给主服务器发出信息（用 1A 表示）。
- 数据服务器 2 给主服务器发出信息（用 2A 表示）。
1 秒时，
- 信息 1A 到达主服务器，主服务器立刻处理信息 1A 并发出 1A 的回复信息。
- 数据服务器 1 还没收到任何回复。距离上次发出信息过去了 1 秒（1 &amp;lt; patience[1] = 2），所以不会重发信息。
- 数据服务器 2 还没收到任何回复。距离上次发出信息过去了 1 秒（1 == patience[2] = 1），所以它重发一条信息（用 2B 表示）。
2 秒时，
- 回复信息 1A 到达服务器 1 ，服务器 1 不会再重发信息。
- 信息 2A 到达主服务器，主服务器立刻处理信息 2A 并发出 2A 的回复信息。
- 服务器 2 重发一条信息（用 2C 表示）。
...
4 秒时，
- 回复信息 2A 到达服务器 2 ，服务器 2 不会再重发信息。
...
7 秒时，回复信息 2D 到达服务器 2 。
从第 8 秒开始，不再有任何信息在服务器之间传输，也不再有信息到达服务器。
所以第 8 秒是网络变空闲的最早时刻。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://assets.leetcode.com/uploads/2021/09/04/network_a_quiet_place_2.png" alt="example 2">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：edges = [[0,1],[0,2],[1,2]], patience = [0,10,10]
输出：3
解释：数据服务器 1 和 2 第 2 秒初收到回复信息。
从第 3 秒开始，网络变空闲。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>n == patience.length&lt;/code>&lt;/li>
&lt;li>&lt;code>2 &amp;lt;= n &amp;lt;= 10&amp;lt;sup&amp;gt;5&amp;lt;/sup&amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>patience[0] == 0&lt;/code>&lt;/li>
&lt;li>对于 &lt;code>1 &amp;lt;= i &amp;lt; n&lt;/code> ，满足 &lt;code>1 &amp;lt;= patience[i] &amp;lt;= 10&amp;lt;sup&amp;gt;5&amp;lt;/sup&amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= edges.length &amp;lt;= min(10&amp;lt;sup&amp;gt;5&amp;lt;/sup&amp;gt;, n * (n - 1) / 2)&lt;/code>&lt;/li>
&lt;li>&lt;code>edges[i].length == 2&lt;/code>&lt;/li>
&lt;li>&lt;code>0 &amp;lt;= u&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;, v&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt; &amp;lt; n&lt;/code>&lt;/li>
&lt;li>&lt;code>u&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt; != v&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;&lt;/code>&lt;/li>
&lt;li>不会有重边。&lt;/li>
&lt;li>每个服务器都直接或间接与别的服务器相连。&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://leetcode.cn/problems/the-time-when-the-network-becomes-idle/comments/" title="https://leetcode.cn/problems/the-time-when-the-network-becomes-idle/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/the-time-when-the-network-becomes-idle/solution/" title="https://leetcode.cn/problems/the-time-when-the-network-becomes-idle/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>数位成本和为目标值的最大数字</title><link>https://justice.bj.cn/post/leetcode/doc/1449.%E6%95%B0%E4%BD%8D%E6%88%90%E6%9C%AC%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97/</link><pubDate>Thu, 22 Jun 2023 08:36:30 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1449.%E6%95%B0%E4%BD%8D%E6%88%90%E6%9C%AC%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97/</guid><description>&lt;h1 id="数位成本和为目标值的最大数字httpsleetcodecnproblemsform-largest-integer-with-digits-that-add-up-to-targetdescription-httpsleetcodecnproblemsform-largest-integer-with-digits-that-add-up-to-targetdescription">&lt;a href="https://leetcode.cn/problems/form-largest-integer-with-digits-that-add-up-to-target/description/" title="https://leetcode.cn/problems/form-largest-integer-with-digits-that-add-up-to-target/description/">数位成本和为目标值的最大数字&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Hard (62.33%)&lt;/td>
&lt;td>164&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/Unknown" title="https://leetcode.com/tag/Unknown">&lt;code>Unknown&lt;/code>&lt;/a>&lt;/p>
&lt;details open="">&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;p>&lt;code>Unknown&lt;/code>&lt;/p>
&lt;p>给你一个整数数组 &lt;code>cost&lt;/code> 和一个整数 &lt;code>target&lt;/code> 。请你返回满足如下规则可以得到的 &lt;strong>最大&lt;/strong> 整数：&lt;/p>
&lt;ul>
&lt;li>给当前结果添加一个数位（&lt;code>i + 1&lt;/code>）的成本为 &lt;code>cost[i]&lt;/code> （&lt;code>cost&lt;/code> 数组下标从 0 开始）。&lt;/li>
&lt;li>总成本必须恰好等于 &lt;code>target&lt;/code> 。&lt;/li>
&lt;li>添加的数位中没有数字 0 。&lt;/li>
&lt;/ul>
&lt;p>由于答案可能会很大，请你以字符串形式返回。&lt;/p>
&lt;p>如果按照上述要求无法得到任何整数，请你返回 &amp;ldquo;0&amp;rdquo; 。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：cost = [4,3,2,5,6,7,2,5,5], target = 9
输出：&amp;#34;7772&amp;#34;
解释：添加数位 &amp;#39;7&amp;#39; 的成本为 2 ，添加数位 &amp;#39;2&amp;#39; 的成本为 3 。所以 &amp;#34;7772&amp;#34; 的代价为 2*3+ 3*1 = 9 。 &amp;#34;977&amp;#34; 也是满足要求的数字，但 &amp;#34;7772&amp;#34; 是较大的数字。
数字 成本
1 -&amp;gt; 4
2 -&amp;gt; 3
3 -&amp;gt; 2
4 -&amp;gt; 5
5 -&amp;gt; 6
6 -&amp;gt; 7
7 -&amp;gt; 2
8 -&amp;gt; 5
9 -&amp;gt; 5
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：cost = [7,6,5,5,5,6,8,7,8], target = 12
输出：&amp;#34;85&amp;#34;
解释：添加数位 &amp;#39;8&amp;#39; 的成本是 7 ，添加数位 &amp;#39;5&amp;#39; 的成本是 5 。&amp;#34;85&amp;#34; 的成本为 7 + 5 = 12 。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：cost = [2,4,6,2,4,6,4,4,4], target = 5
输出：&amp;#34;0&amp;#34;
解释：总成本是 target 的条件下，无法生成任何整数。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 4：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：cost = [6,10,15,40,40,40,40,40,40], target = 47
输出：&amp;#34;32211&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>cost.length == 9&lt;/code>&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= cost[i] &amp;lt;= 5000&lt;/code>&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= target &amp;lt;= 5000&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://leetcode.cn/problems/form-largest-integer-with-digits-that-add-up-to-target/comments/" title="https://leetcode.cn/problems/form-largest-integer-with-digits-that-add-up-to-target/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/form-largest-integer-with-digits-that-add-up-to-target/solution/" title="https://leetcode.cn/problems/form-largest-integer-with-digits-that-add-up-to-target/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="k">struct&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=start
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// - 动态规划(完全背包问题)
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 1. 为了得到最大的数字,需要如下两条:
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// a. 数字的位数最长;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// b. 大数字尽量在高位;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 2. 因此可以分两步:
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// a. 求出可以组成目标值的数字的最大位数;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// b. 尽量将大的数位排在最大位数数字的高位;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 3. 则 `dp[target]` 为
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">largest_number&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cost&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">i32&lt;/span>::&lt;span class="n">MIN&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// target为0时, 最大整数位数为0;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 依次求取各个成本和的最大位数
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">cost&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 如果target对应的最高位数&amp;lt;=0, 则不存在目标和的数字
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">into&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 排列数位
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cost&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">enumerate&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">rev&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//找到适合的数字
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>macos日常</title><link>https://justice.bj.cn/post/70.tool/macos/</link><pubDate>Fri, 16 Jun 2023 21:45:26 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/macos/</guid><description>&lt;h1 id="macos日常">macos日常&lt;/h1>
&lt;h2 id="samba连接慢">samba连接慢&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>请进入&lt;strong>应用程序&lt;/strong> &amp;gt; &lt;strong>实用工具&lt;/strong>打开&lt;strong>终端机&lt;/strong>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建空文件 &lt;strong>/etc/nsmb.conf&lt;/strong>：&lt;/p>
&lt;p>sudo touch /etc/nsmb.conf&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 vi 打开 &lt;strong>/etc/nsmb.conf&lt;/strong>：&lt;/p>
&lt;p>sudo vi /etc/nsmb.conf&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过输入以下内容修改 signing_required 的值：&lt;/p>
&lt;p>[default]&lt;br>
signing_required=no&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>为增强安全性，Mac OS X 10.11.5 将默认启用 SMB 客户端签发，从而影响 SMB 文件的传输速度。如果要通过 LAN 执行 SMB 文件传输（出于安全目的，我们建议不要通过 Internet 执行 SMB 文件传输），请进行以下操作以禁用通过 /etc/nsmb.conf 文件从客户端进行 SMB 客户端签发：&lt;/p>
&lt;h2 id="只读">只读&lt;/h2>
&lt;p>首先说一下这是因为苹果新系统升级了根目录的文件权限，变成只读了，这么做对用户来说是友好的，但是对我们开发人员来说简直就是灾难，好多原来的项目都不能运行了。&lt;/p>
&lt;p>解决的办法是：&lt;/p>
&lt;ol>
&lt;li>关掉&lt;code>SIP&lt;/code>（系统安全保护）&lt;/li>
&lt;li>重新挂载根目录&lt;/li>
&lt;li>重新启动项目&lt;/li>
&lt;/ol>
&lt;p>关掉&lt;code>SIP&lt;/code>需要重新启动按住 Command + R 进入 macOS 恢复系统，在实用工具里面点击终端，加上下面这一句代码按下会车，看见&lt;code>successfully...&lt;/code>之后重新启动&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">csrutil disable
sudo mount -uw / &lt;span class="c1">#重新挂载根目录需要在终端输入下面这句代码&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后就可以在根目录创建文件夹了&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">sudo mkdir -p /data/db
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="alfred-文件重复">alfred 文件重复&lt;/h2>
&lt;p>首先，系统中并不存在两个重复的应用。数据卷 &lt;code>Macintosh HD Data&lt;/code> 负责第三方应用的安装，所以 &lt;code>System/volumes/Macintosh/Applications&lt;/code> 才是应用的真实目录，而 &lt;code>Macintosh HD/Applications&lt;/code> 只是它的 firmlink。解决办法也很简单，在 Alfred 中输入 &lt;code>reload&lt;/code> 命令，Alfred 就会恢复正常。&lt;/p>
&lt;h3 id="调整launchpad-启动台">调整Launchpad 启动台&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ defaults write com.apple.dock springboard-columns -int &lt;span class="m">9&lt;/span>
$ defaults write com.apple.dock springboard-rows -int &lt;span class="m">6&lt;/span>
$ defaults write com.apple.dock ResetLaunchPad -bool TRUE
$ killall Dock
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="允许网页下载软件启动">允许网页下载软件启动&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># macosx 10.15&lt;/span>
$ sudo xattr -r -d com.apple.quarantine &amp;lt;/Applications/APPNAME.app/&amp;gt;
&lt;span class="c1"># macosx 10.13， 开启任何来源&lt;/span>
$ sudo spctl --master-disable
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="clang-path">clang path&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ clang -E -x c++ - -v &amp;lt; /dev/null
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="收集macos系统信息">收集macos系统信息&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">log show --info --debug --last 1m --predicate &lt;span class="s2">&amp;#34;(subsystem == &amp;#39;com.apple.processmanager&amp;#39;) || (subsystem == &amp;#39;com.apple.launchservices&amp;#39;)&amp;#34;&lt;/span>
launchctl list &lt;span class="p">|&lt;/span> grep -v com.apple
sudo launchctl list &lt;span class="p">|&lt;/span> grep -v com.apple
launchctl print system &lt;span class="p">|&lt;/span> grep -v com.apple
sudo launchctl print user/&lt;span class="sb">`&lt;/span>whoami&lt;span class="sb">`&lt;/span> &lt;span class="p">|&lt;/span> grep -v com.apple
kextstat &lt;span class="p">|&lt;/span> grep -v com.apple
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>允许网页下载软件启动&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># macosx 10.15&lt;/span>
$ sudo xattr -r -d com.apple.quarantine &amp;lt;/Applications/APPNAME.app/&amp;gt;
&lt;span class="c1"># macosx 10.13， 开启任何来源&lt;/span>
$ sudo spctl --master-disable
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>调整Launchpad 启动台&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ defaults write com.apple.dock springboard-columns -int &lt;span class="m">9&lt;/span>
$ defaults write com.apple.dock springboard-rows -int &lt;span class="m">6&lt;/span>
$ defaults write com.apple.dock ResetLaunchPad -bool TRUE
$ killall Dock
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>too many openfiles&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">## 修改limit限制&lt;/span>
sudo launchctl limit maxfiles &lt;span class="m">1024&lt;/span> unlimited
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>移动硬盘文件显示灰色&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">/usr/local/bin/xattr -c &amp;lt;filename&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>.DS_store&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">## 关闭.DS_store生成&lt;/span>
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE
&lt;span class="c1">## 恢复.DS_store生成&lt;/span>
defaults delete com.apple.desktopservices DSDontWriteNetworkStores
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="opencore-patcher">OpenCore-Patcher&lt;/h2>
&lt;h2 id="gameportingtoolkit">GamePortingToolkit&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://download.developer.apple.com/Developer_Tools/Game_porting_toolkit_beta/Game_porting_toolkit_beta.dmg">download dmg&lt;/a>&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2></description></item><item><title>TrieTree(字典树)</title><link>https://justice.bj.cn/post/12.data_struct/tree/trietree/</link><pubDate>Fri, 16 Jun 2023 21:45:26 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/trietree/</guid><description>&lt;h1 id="trietree字典树">TrieTree(字典树)&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>&lt;code>Trie Tree,&lt;/code>前缀树或字典树，是一种有序树，用于保存关联数组。&lt;/p>
&lt;p>其中的键通常是字符串。&lt;/p>
&lt;p>与二叉查找树不同，键不是直接保存在节点中，而是由节点在树中的位置决定。一个节点的所有子孙都有相同的前缀，也就是这个节点对应的字符串，而根节点对应空字符串。Trie 树的名称来源于搜索引擎中的专有名词的 retrieval&lt;/p>
&lt;h2 id="应用场景">应用场景&lt;/h2>
&lt;ul>
&lt;li>搜索引擎的 suggest 功能;&lt;/li>
&lt;/ul>
&lt;p>比如包含 6 个单词的 Trie 树：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">- `(&amp;#34;abc&amp;#34;)`
- `(&amp;#34;xy&amp;#34;)`
- `(&amp;#34;xyz&amp;#34;)`
- `(&amp;#34;abb&amp;#34;)`
- `(&amp;#34;xyzb&amp;#34;),`
- `(&amp;#34;word&amp;#34;)`
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Trie 树有两种实现策略，&lt;/p>
&lt;ul>
&lt;li>第一种使用数组;&lt;/li>
&lt;li>第二种是使用 Map，&lt;/li>
&lt;li>使用数组的方式需要对存储的字符和数组的 index 之间要有明确的映射规则，这样便于查询，比如如果想做中文的 suggest&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s?__biz=MzAxMzE4MDI0NQ==&amp;amp;mid=2650336593&amp;amp;idx=1&amp;amp;sn=8b3e6225876757485fa6d8299abd0095&amp;amp;chksm=83aac16bb4dd487dae3d69d11808f9a850a0d6e9494b24607f4610c51fbe6c02845eb3d072ef&amp;amp;scene=21#wechat_redirect">深入理解 Trie 树&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>基数树(Radix Tree)</title><link>https://justice.bj.cn/post/12.data_struct/tree/radixtree/</link><pubDate>Fri, 16 Jun 2023 21:45:26 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/radixtree/</guid><description>&lt;h1 id="基数树radix-tree">基数树(Radix Tree)&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>Radix tree(也被称为 radix trie，或者 compact prefix tree)是一种空间优化的前缀树(prefix tree)数据结构。&lt;/p>
&lt;p>针对这对这样的稀疏长整型数据查找，能高速且节省空间地完成映射&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2021/09/04-10-32-55-2021-09-04-10-32-52-image.png" alt="img">&lt;/p>
&lt;h2 id="应用场景">应用场景&lt;/h2>
&lt;ul>
&lt;li>IP 路由；&lt;/li>
&lt;li>倒排索引；&lt;/li>
&lt;li>IDR（ID Radix）机制；&lt;/li>
&lt;li>Linux 基数树（radix tree），内存管理；&lt;/li>
&lt;li>Redis Radix tree；&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://ivanzz1001.github.io/records/post/data-structure/2018/11/18/ds-radix-tree" title="数据结构之Radix Tree">数据结构之 Radix Tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://sourcelink.top/2019/09/26/linux-kernel-radix-tree-analysis/">详解 Linux 内核 Radix 树算法的实现 - 黎棉麒的独立博客&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.tencent.com/developer/article/1597128">图解 Redis 中的 Radix 树 - 云+社区 - 腾讯云&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>添加与搜索单词 - 数据结构设计</title><link>https://justice.bj.cn/post/leetcode/doc/211.%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D/</link><pubDate>Fri, 16 Jun 2023 21:45:26 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/211.%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D/</guid><description>&lt;h1 id="添加与搜索单词---数据结构设计httpsleetcodecnproblemsdesign-add-and-search-words-data-structuredescription-httpsleetcodecnproblemsdesign-add-and-search-words-data-structuredescription">&lt;a href="https://leetcode.cn/problems/design-add-and-search-words-data-structure/description/" title="https://leetcode.cn/problems/design-add-and-search-words-data-structure/description/">添加与搜索单词 - 数据结构设计&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (49.61%)&lt;/td>
&lt;td>506&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/backtracking" title="https://leetcode.com/tag/backtracking">&lt;code>backtracking&lt;/code>&lt;/a> | &lt;a href="https://leetcode.com/tag/design" title="https://leetcode.com/tag/design">&lt;code>design&lt;/code>&lt;/a> | &lt;a href="https://leetcode.com/tag/trie" title="https://leetcode.com/tag/trie">&lt;code>trie&lt;/code>&lt;/a>&lt;/p>
&lt;details open="">&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;p>&lt;code>facebook&lt;/code>&lt;/p>
&lt;p>请你设计一个数据结构，支持 添加新单词 和 查找字符串是否与任何先前添加的字符串匹配 。&lt;/p>
&lt;p>实现词典类 &lt;code>WordDictionary&lt;/code> ：&lt;/p>
&lt;ul>
&lt;li>&lt;code>WordDictionary()&lt;/code> 初始化词典对象&lt;/li>
&lt;li>&lt;code>void addWord(word)&lt;/code> 将 &lt;code>word&lt;/code> 添加到数据结构中，之后可以对它进行匹配&lt;/li>
&lt;li>&lt;code>bool search(word)&lt;/code> 如果数据结构中存在字符串与 &lt;code>word&lt;/code> 匹配，则返回 &lt;code>true&lt;/code> ；否则，返回 &lt;code>false&lt;/code> 。&lt;code>word&lt;/code> 中可能包含一些 &lt;code>'.'&lt;/code> ，每个 &lt;code>.&lt;/code> 都可以表示任何一个字母。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：
[&amp;#34;WordDictionary&amp;#34;,&amp;#34;addWord&amp;#34;,&amp;#34;addWord&amp;#34;,&amp;#34;addWord&amp;#34;,&amp;#34;search&amp;#34;,&amp;#34;search&amp;#34;,&amp;#34;search&amp;#34;,&amp;#34;search&amp;#34;]
[[],[&amp;#34;bad&amp;#34;],[&amp;#34;dad&amp;#34;],[&amp;#34;mad&amp;#34;],[&amp;#34;pad&amp;#34;],[&amp;#34;bad&amp;#34;],[&amp;#34;.ad&amp;#34;],[&amp;#34;b..&amp;#34;]]
输出：
[null,null,null,null,false,true,true,true]
解释：
WordDictionary wordDictionary = new WordDictionary();
wordDictionary.addWord(&amp;#34;bad&amp;#34;);
wordDictionary.addWord(&amp;#34;dad&amp;#34;);
wordDictionary.addWord(&amp;#34;mad&amp;#34;);
wordDictionary.search(&amp;#34;pad&amp;#34;); // 返回 False
wordDictionary.search(&amp;#34;bad&amp;#34;); // 返回 True
wordDictionary.search(&amp;#34;.ad&amp;#34;); // 返回 True
wordDictionary.search(&amp;#34;b..&amp;#34;); // 返回 True
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= word.length &amp;lt;= 25&lt;/code>&lt;/li>
&lt;li>&lt;code>addWord&lt;/code> 中的 &lt;code>word&lt;/code> 由小写英文字母组成&lt;/li>
&lt;li>&lt;code>search&lt;/code> 中的 &lt;code>word&lt;/code> 由 &amp;lsquo;.&amp;rsquo; 或小写英文字母组成&lt;/li>
&lt;li>最多调用 &lt;code>10&amp;lt;sup&amp;gt;4&amp;lt;/sup&amp;gt;&lt;/code> 次 &lt;code>addWord&lt;/code> 和 &lt;code>search&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://leetcode.cn/problems/design-add-and-search-words-data-structure/comments/" title="https://leetcode.cn/problems/design-add-and-search-words-data-structure/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/design-add-and-search-words-data-structure/solution/" title="https://leetcode.cn/problems/design-add-and-search-words-data-structure/solution/">Solution&lt;/a>&lt;/p>
&lt;p>解法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// @lc code=start
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="p">{&lt;/span>&lt;span class="n">collections&lt;/span>::&lt;span class="n">HashMap&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="cp">#[derive(Default)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">TrieNode&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">flag&lt;/span>: &lt;span class="kt">bool&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>: &lt;span class="p">[&lt;/span>&lt;span class="n">OptNode&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">26&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">type&lt;/span> &lt;span class="nc">OptNode&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Box&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">TrieNode&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">WordDictionary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">root&lt;/span>: &lt;span class="nc">OptNode&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="sd">/**
&lt;/span>&lt;span class="sd"> * `&amp;amp;self` means the method takes an immutable reference.
&lt;/span>&lt;span class="sd"> * If you need a mutable reference, change it to `&amp;amp;mut self` instead.
&lt;/span>&lt;span class="sd"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WordDictionary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">new&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">root&lt;/span>: &lt;span class="nb">Some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Box&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TrieNode&lt;/span>::&lt;span class="n">default&lt;/span>&lt;span class="p">()))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">add_word&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">word&lt;/span>: &lt;span class="nb">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">opt_node_ref&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">as_bytes&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">b&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">opt_node_ref&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">opt_node_ref&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">as_mut&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">opt_node_ref&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">is_none&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">opt_node_ref&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Box&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TrieNode&lt;/span>::&lt;span class="n">default&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">opt_node_ref&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">as_mut&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">word&lt;/span>: &lt;span class="nb">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">bool&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pending_nodes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next_pending_nodes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Vec&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">b&amp;#39;.&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 如果当前字符为&amp;#39;.&amp;#39;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 则依次遍历待遍历的节点
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pending_nodes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">drain&lt;/span>&lt;span class="p">(..)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//依次检查当前节点next中的所有节点,如果不为none, 则将
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next_node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">as_ref&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">is_some&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next_pending_nodes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">next_node&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 当前为普通字符
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">b&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 检查待遍历节点,
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pending_nodes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">drain&lt;/span>&lt;span class="p">(..)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">as_ref&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">is_some&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next_pending_nodes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">as_ref&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">mem&lt;/span>::&lt;span class="n">swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pending_nodes&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next_pending_nodes&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pending_nodes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">any&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">as_ref&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="sd">/**
&lt;/span>&lt;span class="sd"> * Your WordDictionary object will be instantiated and called as such:
&lt;/span>&lt;span class="sd"> * let obj = WordDictionary::new();
&lt;/span>&lt;span class="sd"> * obj.add_word(word);
&lt;/span>&lt;span class="sd"> * let ret_2: bool = obj.search(word);
&lt;/span>&lt;span class="sd"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>重新格式化字符串</title><link>https://justice.bj.cn/post/leetcode/doc/1417.%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Mon, 12 Jun 2023 21:41:59 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1417.%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>&lt;h1 id="重新格式化字符串httpsleetcodecnproblemsreformat-the-stringdescription-httpsleetcodecnproblemsreformat-the-stringdescription">&lt;a href="https://leetcode.cn/problems/reformat-the-string/description/" title="https://leetcode.cn/problems/reformat-the-string/description/">重新格式化字符串&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Easy (55.17%)&lt;/td>
&lt;td>92&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/Unknown" title="https://leetcode.com/tag/Unknown">&lt;code>Unknown&lt;/code>&lt;/a>&lt;/p>
&lt;details open="">&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;p>&lt;code>Unknown&lt;/code>&lt;/p>
&lt;p>给你一个混合了数字和字母的字符串 &lt;code>s&lt;/code>，其中的字母均为小写英文字母。&lt;/p>
&lt;p>请你将该字符串重新格式化，使得任意两个相邻字符的类型都不同。也就是说，字母后面应该跟着数字，而数字后面应该跟着字母。&lt;/p>
&lt;p>请你返回 &lt;strong>重新格式化后&lt;/strong> 的字符串；如果无法按要求重新格式化，则返回一个 &lt;strong>空字符串&lt;/strong> 。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：s = &amp;#34;a0b1c2&amp;#34;
输出：&amp;#34;0a1b2c&amp;#34;
解释：&amp;#34;0a1b2c&amp;#34; 中任意两个相邻字符的类型都不同。 &amp;#34;a0b1c2&amp;#34;, &amp;#34;0a1b2c&amp;#34;, &amp;#34;0c2a1b&amp;#34; 也是满足题目要求的答案。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：s = &amp;#34;leetcode&amp;#34;
输出：&amp;#34;&amp;#34;
解释：&amp;#34;leetcode&amp;#34; 中只有字母，所以无法满足重新格式化的条件。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：s = &amp;#34;1229857369&amp;#34;
输出：&amp;#34;&amp;#34;
解释：&amp;#34;1229857369&amp;#34; 中只有数字，所以无法满足重新格式化的条件。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 4：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：s = &amp;#34;covid2019&amp;#34;
输出：&amp;#34;c2o0v1i9d&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 5：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：s = &amp;#34;ab123&amp;#34;
输出：&amp;#34;1a2b3&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= s.length &amp;lt;= 500&lt;/code>&lt;/li>
&lt;li>&lt;code>s&lt;/code> 仅由小写英文字母和/或数字组成。&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://leetcode.cn/problems/reformat-the-string/comments/" title="https://leetcode.cn/problems/reformat-the-string/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/reformat-the-string/solution/" title="https://leetcode.cn/problems/reformat-the-string/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// @lc code=start
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">reformat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>: &lt;span class="nb">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">char_count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">chars&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">is_alphabetic&lt;/span>&lt;span class="p">()).&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">digit_count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">char_count&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">char_count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">digit_count&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">abs&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_owned&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">char_count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">digit_count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res_vec&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="sc">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">chars&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">is_ascii_alphabetic&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res_vec&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res_vec&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res_vec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">into_iter&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">collect&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>避免洪水泛滥</title><link>https://justice.bj.cn/post/leetcode/doc/1488.%E9%81%BF%E5%85%8D%E6%B4%AA%E6%B0%B4%E6%B3%9B%E6%BB%A5/</link><pubDate>Mon, 12 Jun 2023 15:34:17 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1488.%E9%81%BF%E5%85%8D%E6%B4%AA%E6%B0%B4%E6%B3%9B%E6%BB%A5/</guid><description>&lt;h1 id="避免洪水泛滥httpsleetcodecnproblemsavoid-flood-in-the-citydescription-httpsleetcodecnproblemsavoid-flood-in-the-citydescription">&lt;a href="https://leetcode.cn/problems/avoid-flood-in-the-city/description/" title="https://leetcode.cn/problems/avoid-flood-in-the-city/description/">避免洪水泛滥&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (26.32%)&lt;/td>
&lt;td>124&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/Unknown" title="https://leetcode.com/tag/Unknown">&lt;code>Unknown&lt;/code>&lt;/a>&lt;/p>
&lt;details open="">&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;p>&lt;code>Unknown&lt;/code>&lt;/p>
&lt;p>你的国家有无数个湖泊，所有湖泊一开始都是空的。当第 &lt;code>n&lt;/code> 个湖泊下雨前是空的，那么它就会装满水。如果第 &lt;code>n&lt;/code> 个湖泊下雨前是 &lt;strong>满的&lt;/strong> ，这个湖泊会发生 &lt;strong>洪水&lt;/strong> 。你的目标是避免任意一个湖泊发生洪水。&lt;/p>
&lt;p>给你一个整数数组 &lt;code>rains&lt;/code> ，其中：&lt;/p>
&lt;ul>
&lt;li>&lt;code>rains[i] &amp;gt; 0&lt;/code> 表示第 &lt;code>i&lt;/code> 天时，第 &lt;code>rains[i]&lt;/code> 个湖泊会下雨。&lt;/li>
&lt;li>&lt;code>rains[i] == 0&lt;/code> 表示第 &lt;code>i&lt;/code> 天没有湖泊会下雨，你可以选择 &lt;strong>一个&lt;/strong> 湖泊并 &lt;strong>抽干&lt;/strong> 这个湖泊的水。&lt;/li>
&lt;/ul>
&lt;p>请返回一个数组 &lt;code>ans&lt;/code> ，满足：&lt;/p>
&lt;ul>
&lt;li>&lt;code>ans.length == rains.length&lt;/code>&lt;/li>
&lt;li>如果 &lt;code>rains[i] &amp;gt; 0&lt;/code> ，那么 &lt;code>ans[i] == -1&lt;/code> 。&lt;/li>
&lt;li>如果 &lt;code>rains[i] == 0&lt;/code> ，&lt;code>ans[i]&lt;/code> 是你第 &lt;code>i&lt;/code> 天选择抽干的湖泊。&lt;/li>
&lt;/ul>
&lt;p>如果有多种可行解，请返回它们中的 &lt;strong>任意一个&lt;/strong> 。如果没办法阻止洪水，请返回一个 &lt;strong>空的数组&lt;/strong> 。&lt;/p>
&lt;p>请注意，如果你选择抽干一个装满水的湖泊，它会变成一个空的湖泊。但如果你选择抽干一个空的湖泊，那么将无事发生。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：rains = [1,2,3,4]
输出：[-1,-1,-1,-1]
解释：第一天后，装满水的湖泊包括 [1]
第二天后，装满水的湖泊包括 [1,2]
第三天后，装满水的湖泊包括 [1,2,3]
第四天后，装满水的湖泊包括 [1,2,3,4]
没有哪一天你可以抽干任何湖泊的水，也没有湖泊会发生洪水。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：rains = [1,2,0,0,2,1]
输出：[-1,-1,2,1,-1,-1]
解释：第一天后，装满水的湖泊包括 [1]
第二天后，装满水的湖泊包括 [1,2]
第三天后，我们抽干湖泊 2 。所以剩下装满水的湖泊包括 [1]
第四天后，我们抽干湖泊 1 。所以暂时没有装满水的湖泊了。
第五天后，装满水的湖泊包括 [2]。
第六天后，装满水的湖泊包括 [1,2]。
可以看出，这个方案下不会有洪水发生。同时， [-1,-1,1,2,-1,-1] 也是另一个可行的没有洪水的方案。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：rains = [1,2,0,1,2]
输出：[]
解释：第二天后，装满水的湖泊包括 [1,2]。我们可以在第三天抽干一个湖泊的水。
但第三天后，湖泊 1 和 2 都会再次下雨，所以不管我们第三天抽干哪个湖泊的水，另一个湖泊都会发生洪水。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= rains.length &amp;lt;= 10&amp;lt;sup&amp;gt;5&amp;lt;/sup&amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>0 &amp;lt;= rains[i] &amp;lt;= 10&amp;lt;sup&amp;gt;9&amp;lt;/sup&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://leetcode.cn/problems/avoid-flood-in-the-city/comments/" title="https://leetcode.cn/problems/avoid-flood-in-the-city/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/avoid-flood-in-the-city/solution/" title="https://leetcode.cn/problems/avoid-flood-in-the-city/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// @lc code=start
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// - hashmap + btreeset
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 1. 使用hashmap rain_dates记录每个湖下雨的日期;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// btreeset dry_dates记录可以排水的日期(rains[i] == 0);
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 2. 依次检查每天的下雨记录;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 3. 如果未下雨(rains[i] == 0), 则将当天日期i记录到dry_dates中;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 4. 否则, 说明当天lake = rains[i]下雨了;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 5. 此时先通过rain_dates检查该lake以前是否下过雨;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 6. 如果该lake之前下过, 则在day_dates中检查之前下雨后到当前时间前是否有可以排水的适当日期;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 6.1. 如果没有,则湖水将溢出泛滥, 返回空;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 6.2. 否则有, 则在该日期排出之前的湖水, 并更新;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 7. 更新rain_dates中的记录;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 8. 设置当天不排水;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">avoid_flood&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rains&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">collections&lt;/span>::&lt;span class="n">BTreeSet&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">collections&lt;/span>::&lt;span class="n">HashMap&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">ops&lt;/span>::&lt;span class="n">Bound&lt;/span>::&lt;span class="o">*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dry&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rains&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//记录排水计划
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dry_dates&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BTreeSet&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//可排水的日期
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rain_dates&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//湖的下雨日期
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 检查每天下雨的记录
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">day&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">lake&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rains&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">enumerate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 未下雨
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lake&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dry_dates&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">day&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//记录当前可排水的日期
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">continue&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 否则,当天下雨了
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 如果该湖之前下过雨
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rain_dates&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contains_key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">lake&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 如果存在可供排水的适当日期(在之前湖下雨后, 今天之前)
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">old_day&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dry_dates&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">Excluded&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rain_dates&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">lake&lt;/span>&lt;span class="p">]),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Excluded&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">day&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//该湖前一次下雨日期之后, 今天之前
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 存在可排水的日子
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">copied&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dry&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">old_day&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lake&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//在可排水的日子j时, 抽干湖中的水
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dry_dates&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">old_day&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//移除已排过水的日期记录
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 湖里已经有水且没有适合排水的日期, 则发生洪水
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rain_dates&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lake&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">day&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//记录已下过雨的lake
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dry&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">day&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 当前天不用抽水
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dry&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>多 CPU 处理架构</title><link>https://justice.bj.cn/post/21.linux/%E5%A4%9Acpu%E5%A4%84%E7%90%86%E6%9E%B6%E6%9E%84/</link><pubDate>Sun, 11 Jun 2023 07:49:26 +0800</pubDate><guid>https://justice.bj.cn/post/21.linux/%E5%A4%9Acpu%E5%A4%84%E7%90%86%E6%9E%B6%E6%9E%84/</guid><description>&lt;h1 id="多-cpu-处理架构">多 CPU 处理架构&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>多 cpu 系统架构上大概分为三种：&lt;/p>
&lt;ul>
&lt;li>SMP(Symmetric Multi Processing): 对称多处理器，所有 cpu 都是对等的, 一起共享全部资源，如总线，内存和 I/O 系统等;&lt;/li>
&lt;li>NUMA(Non-Uniform Memory Access): 非均匀访问存储模型，&lt;/li>
&lt;li>MMP(Massive Parallel Processing): 大规模并行处理系统，由多个 SMP 服务器通过一定的节点互联网络进行连接，协同工作，完成相同的任务，从用户的角度来看是一个服务器系统；&lt;/li>
&lt;/ul>
&lt;h2 id="smp">SMP&lt;/h2>
&lt;p>SMP 架构&lt;/p>
&lt;p>所谓对称多处理器结构，是指服务器中多个 CPU 对称工作，无主次或从属关系。各 CPU 共享相同的物理内存，每个 CPU 访问内存中的任何地址所需时间是相同的，因此 SMP 也被称为一致存储器访问结构 (UMA ： Uniform Memory Access) 。对 SMP 服务器进行扩展的方式包括增加内存、使用更快的 CPU 、增加 CPU 、扩充 I/O( 槽口数与总线数 ) 以及添加更多的外部设备 ( 通常是磁盘存储 ) 。&lt;/p>
&lt;p>SMP 服务器的主要特征是共享，系统中所有资源 (CPU 、内存、 I/O 等 ) 都是共享的。也正是由于这种特征，导致了 SMP 服务器的主要问题，那就是它的扩展能力非常有限。对于 SMP 服务器而言，每一个共享的环节都可能造成 SMP 服务器扩展时的瓶颈，而最受限制的则是内存。由于每个 CPU 必须通过相同的内存总线访问相同的内存资源，因此随着 CPU 数量的增加，内存访问冲突将迅速增加，最终会造成 CPU 资源的浪费，使 CPU 性能的有效性大大降低。实验证明， SMP 服务器 CPU 利用率最好的情况是 2 至 4 个 CPU 。&lt;/p>
&lt;h2 id="numa">NUMA&lt;/h2>
&lt;p>&lt;strong>非统一内存访问架构&lt;/strong>（英语：&lt;strong>Non-uniform memory access&lt;/strong>，简称 NUMA）是一种为&lt;a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E8%99%95%E7%90%86%E5%99%A8" title="多处理器">多处理器&lt;/a>的电脑设计的内存架构，内存访问时间取决于内存相对于处理器的位置。在 NUMA 下，处理器访问它自己的本地内存的速度比非本地内存（内存位于另一个处理器，或者是处理器之间共享的内存）快一些。&lt;/p>
&lt;p>是为了解决 smp 扩容性而提出的技术方案，smp 相当于多个 cpu 连接一个内存池导致请求经常发生冲突&lt;/p>
&lt;ul>
&lt;li>NUMA 由多个 Node 组成；&lt;/li>
&lt;li>每个 Node 包含多个 CPU( 如 4 个 ) ，并且具有独立的本地内存、 I/O 槽口等。&lt;/li>
&lt;li>各 Node 之间可以通过互联模块 ( 如称为 Crossbar Switch) 进行连接和信息交互， 每个 CPU 可以访问整个系统的内存 ( 这是 NUMA 系统与 MPP 系统的重要差别 ) 。但访问本地内存的速度将远远高于访问远地内存 ( 系统内其它节点的内存 ) 的速度，这也是非一致存储访问 NUMA 的由来&lt;/li>
&lt;/ul>
&lt;h2 id="mmp">MMP&lt;/h2>
&lt;p>和 NUMA 不同， MPP 提供了另外一种进行系统扩展的方式，它由多个 SMP 服务器通过一定的节点互联网络进行连接，协同工作，完成相同的任务，从用户的角度来看是一个服务器系统。其基本特征是由多个 SMP 服务器 ( 每个 SMP 服务器称节点 ) 通过节点互联网络连接而成，每个节点只访问自己的本地资源 ( 内存、存储等 ) ，是一种完全无共享 (Share Nothing) 结构，因而扩展能力最好，理论上其扩展无限制，目前的技术可实现 512 个节点互联，数千个 CPU 。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2022/12/19-21-43-11-2022-12-19-21-43-07-image.png" alt="">&lt;/p>
&lt;h3 id="mpp-的优势">MPP 的优势&lt;/h3>
&lt;p>MPP 系统不共享资源，因此对它而言，资源比 SMP 要多，当需要处理的事务达到一定规模时，MPP 的效率要比 SMP 好。由于 MPP 系统因为要在不同处理单元之间传送信息，在通讯时间少的时候，那 MPP 系统可以充分发挥资源的优势，达到高效率。也就是说：操作相互之间没有什么关系，处理单元之间需要进行的通信比较少，那采用 MPP 系统就要好。因此，**MPP****系统在决策支持和数据挖掘方面显示了优势。**&lt;/p>
&lt;h3 id="smp-的优势">SMP 的优势&lt;/h3>
&lt;p>MPP 系统因为要在不同处理单元之间传送信息，所以它的效率要比 SMP 要差一点。在通讯时间多的时候，那 MPP 系统可以充分发挥资源的优势。当前使用的 OTLP 程序中，用户访问一个中心数据库，如果采用 SMP 系统结构，它的效率要比采用&lt;strong>MPP&lt;/strong>结构要快得多。&lt;/p>
&lt;h3 id="numa-的优势">NUMA 的优势&lt;/h3>
&lt;p>NUMA 架构来看，它可以在一个物理服务器内集成许多 CPU，使系统具有较高的事务处理能力，由于远地内存访问时延远长于本地内存访问，因此需要尽量减少不同 CPU 模块之间的数据交互。显然，NUMA 架构更适用于 OLTP 事务处理环境，当用于数据仓库环境时，由于大量复杂的数据处理必然导致大量的数据交互，将使 CPU 的利用率大大降低。&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/33621500">深挖 NUMA&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zh.wikipedia.org/wiki/%E9%9D%9E%E5%9D%87%E5%8C%80%E8%AE%BF%E5%AD%98%E6%A8%A1%E5%9E%8B">wiki-非均匀访存模型&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/yubo/archive/2010/04/23/1718810.html">SMP、NUMA、MPP 体系结构介绍 - victoryubo - 博客园&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>大小为 K 的不重叠线段的数目</title><link>https://justice.bj.cn/post/leetcode/doc/1621.%E5%A4%A7%E5%B0%8F%E4%B8%BAk%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%95%B0%E7%9B%AE/</link><pubDate>Sun, 11 Jun 2023 07:49:26 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1621.%E5%A4%A7%E5%B0%8F%E4%B8%BAk%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%95%B0%E7%9B%AE/</guid><description>&lt;h1 id="大小为-k-的不重叠线段的数目httpsleetcodecnproblemsnumber-of-sets-of-k-non-overlapping-line-segmentsdescription-httpsleetcodecnproblemsnumber-of-sets-of-k-non-overlapping-line-segmentsdescription">&lt;a href="https://leetcode.cn/problems/number-of-sets-of-k-non-overlapping-line-segments/description/" title="https://leetcode.cn/problems/number-of-sets-of-k-non-overlapping-line-segments/description/">大小为 K 的不重叠线段的数目&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (47.64%)&lt;/td>
&lt;td>55&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/Unknown" title="https://leetcode.com/tag/Unknown">&lt;code>Unknown&lt;/code>&lt;/a>&lt;/p>
&lt;/details>
&lt;details>&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;/details>
&lt;p>给你一维空间的 &lt;code>n&lt;/code> 个点，其中第 &lt;code>i&lt;/code> 个点（编号从 &lt;code>0&lt;/code> 到 &lt;code>n-1&lt;/code>）位于 &lt;code>x = i&lt;/code> 处，请你找到 &lt;strong>恰好&lt;/strong> &lt;code>k&lt;/code> &lt;strong>个不重叠&lt;/strong> 线段且每个线段至少覆盖两个点的方案数。线段的两个端点必须都是 &lt;strong>整数坐标&lt;/strong> 。这 &lt;code>k&lt;/code> 个线段不需要全部覆盖全部 &lt;code>n&lt;/code> 个点，且它们的端点&lt;strong>可以&lt;/strong>重合。&lt;/p>
&lt;p>请你返回 &lt;code>k&lt;/code> 个不重叠线段的方案数。由于答案可能很大，请将结果对 &lt;code>10^9 + 7&lt;/code> &lt;strong>取余&lt;/strong> 后返回。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/10/17/ex1.png" alt="">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 4, k = 2
输出：5
解释：
如图所示，两个线段分别用红色和蓝色标出。
上图展示了 5 种不同的方案 {(0,2),(2,3)}，{(0,1),(1,3)}，{(0,1),(2,3)}，{(1,2),(2,3)}，{(0,1),(1,2)} 。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 3, k = 1
输出：3
解释：总共有 3 种不同的方案 {(0,1)}, {(0,2)}, {(1,2)} 。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 30, k = 7
输出：796297179
解释：画 7 条线段的总方案数为 3796297200 种。将这个数对 10^9 + 7 取余得到 796297179 。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 4：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 5, k = 3
输出：7
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 5：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 3, k = 2
输出：1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>2 &amp;lt;= n &amp;lt;= 1000&lt;/code>&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= k &amp;lt;= n-1&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://leetcode.cn/problems/number-of-sets-of-k-non-overlapping-line-segments/comments/" title="https://leetcode.cn/problems/number-of-sets-of-k-non-overlapping-line-segments/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/number-of-sets-of-k-non-overlapping-line-segments/solution/" title="https://leetcode.cn/problems/number-of-sets-of-k-non-overlapping-line-segments/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// - 动态规划
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 1. 设 dp[i][j]: i个点, j条线段的总方案数;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 2. 如果第j条线段右端点不是i, 则去掉第i个点,组成j条线段的方案数不变,
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 则有: dp[i][j] = dp[i-1][j];
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 3. 如果第j条线段右端点是i, 则去掉第j条线段, 所有由前面点组成j-1条线段的总方案数为:
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// dp[i-1][j-1] + dp[i-2][j-1] + .. dp[0][j-1]), 记为sum_dp[i-1][j-1]
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 则 sum_dp[i][j] = sum_dp[i-1][j] + dp[i][j]
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 4. 所以得到递推关系:
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// dp[i][j] = dp[i-1][j] + sum_dp[i-1][j-1]
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// sum_dp[i][j] = sum_dp[i-1][j] + dp[i][j]
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 5. 初始条件:
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// dp[i][1] = dp[i-1][1] + (i - 1) (i=1..=n)
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// | |-- 线段右端点为i, 因为总共只有一条线段,所以前面部分不是线段,
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// | 以i为右端点的线段总共有i-1条
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// |-- 线段右端点不是i, 第i-1个端点组成1条线段的方案数
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// sum_dp[i][1] = sum_dp[i-1][1] + dp[i][1]
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 6. 终止条件: dp[n][k]
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">number_of_sets&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">i32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">const&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MOD&lt;/span>: &lt;span class="kt">i32&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1000_000_000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0_&lt;/span>&lt;span class="k">i32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum_dp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0_&lt;/span>&lt;span class="k">i32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 初始化, k=1时,
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MOD&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum_dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sum_dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MOD&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum_dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MOD&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum_dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sum_dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MOD&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>