<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Justice的小站</title><link>https://justice.bj.cn/</link><description>Recent content on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 22 Jul 2023 22:10:52 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Justice's Blog</title><link>https://justice.bj.cn/homepage/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/about/</guid><description>&lt;h2 id="self-introduction">Self Introduction&lt;/h2>
&lt;p>Cras ex dui, tristique a libero eget, consectetur semper ligula. Nunc augue arcu, malesuada a nisi et, molestie finibus metus. Sed lacus odio, ultricies a nisl vitae, sollicitudin tempor ipsum. Vivamus quis feugiat arcu. Sed mi nunc, efficitur quis tellus vitae, posuere mattis metus. Phasellus in mattis dui. Nullam blandit, augue non ullamcorper dapibus, lacus dui molestie massa, in iaculis purus lectus eu lectus. Duis hendrerit lacinia tellus, sit amet feugiat dolor placerat id. Aenean ac velit massa. Vivamus feugiat dui at magna viverra, ut dictum nunc rutrum. Duis eget sapien finibus, lobortis orci id, vestibulum tellus. Maecenas lobortis urna libero, quis fermentum lectus lobortis nec. Nullam laoreet volutpat libero, ac mattis magna ullamcorper quis. Duis eget ipsum eu nisi mattis cursus et vitae turpis.&lt;/p>
&lt;p>Aliquam pretium diam eget leo feugiat finibus. Donec malesuada commodo ipsum. Aenean a massa in lacus venenatis vestibulum. Duis vel sem quis elit iaculis consectetur et quis dolor. Morbi eu ipsum hendrerit, malesuada ante sed, dapibus est. Suspendisse feugiat nulla ut gravida convallis. Phasellus id massa posuere, rhoncus justo ut, porttitor dolor. Nulla ultrices malesuada egestas. Nunc fermentum tincidunt sem ac vulputate. Donec mollis sollicitudin justo eget varius. Donec ornare velit et felis blandit, id molestie sapien lobortis. Morbi eget tristique justo. Mauris posuere, nibh eu laoreet ultricies, ligula erat iaculis sapien, vel dapibus lacus libero ut diam. Etiam viverra ante felis, et scelerisque nunc pellentesque vitae. Praesent feugiat dictum molestie.&lt;/p>
&lt;h2 id="details">Details&lt;/h2>
&lt;p>Nunc pellentesque vitae:&lt;/p>
&lt;ul>
&lt;li>Morbi accumsan nibh efficitur diam molestie, non dignissim diam facilisis.&lt;/li>
&lt;li>Donec dignissim leo in mollis faucibus.&lt;/li>
&lt;li>Donec blandit lacus a pellentesque fermentum.&lt;/li>
&lt;/ul>
&lt;p>Donec mollis sollicitudin:&lt;/p>
&lt;ul>
&lt;li>Nunc dictum purus ornare purus consectetur, eu pellentesque massa ullamcorper.&lt;/li>
&lt;li>Aliquam eu leo vitae justo aliquam tincidunt.&lt;/li>
&lt;li>Fusce non massa id augue interdum feugiat sed et nulla.&lt;/li>
&lt;li>Vivamus molestie augue in tristique laoreet.&lt;/li>
&lt;/ul></description></item><item><title>Pages</title><link>https://justice.bj.cn/homepage/pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/pages/</guid><description/></item><item><title>Experiences</title><link>https://justice.bj.cn/homepage/experiences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/experiences/</guid><description/></item><item><title>Vintage</title><link>https://justice.bj.cn/homepage/vintage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/vintage/</guid><description/></item><item><title>Blank</title><link>https://justice.bj.cn/homepage/blank/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/blank/</guid><description>
&lt;div style="text-align:center">
&lt;p>Write anything you like here!&lt;/p>
&lt;/div></description></item><item><title>专题：回溯法</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%9B%9E%E6%BA%AF%E6%B3%95/</link><pubDate>Sat, 22 Jul 2023 22:10:52 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%9B%9E%E6%BA%AF%E6%B3%95/</guid><description>&lt;h1 id="专题回溯法">专题：回溯法&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>回溯法是归纳法的一种。其基本思想是：&lt;/p>
&lt;h2 id="基本要点">基本要点&lt;/h2>
&lt;ol>
&lt;li>先找出一种遍历问题的合理方法；&lt;/li>
&lt;li>&lt;/li>
&lt;/ol>
&lt;h2 id="代码模板">代码模板&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="cm">/*
&lt;/span>&lt;span class="cm">* 回溯法
&lt;/span>&lt;span class="cm">* 参数:
&lt;/span>&lt;span class="cm">* @nums:
&lt;/span>&lt;span class="cm">*/&lt;/span>
&lt;span class="kt">bool&lt;/span> &lt;span class="nf">backtrace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">//退出条件
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">//到达末尾
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//进行遍历
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">//裁剪不合法的情况
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">isValid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">continue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">//试探
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">dillwith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">；&lt;/span>
&lt;span class="c1">//下一级遍历
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">backtrace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">//回退
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="n">undillwith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="c1">//继续下一个
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>题目&lt;/th>
&lt;th>难度&lt;/th>
&lt;th>关键思路&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="../51.n-%E7%9A%87%E5%90%8E">51.N 皇后&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../52.n%E7%9A%87%E5%90%8E-ii">52.N 皇后 II&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../37.%E8%A7%A3%E6%95%B0%E7%8B%AC">37.解数独&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../17.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88">17.电话号码的字母组合&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90">22.括号生成&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../46.%E5%85%A8%E6%8E%92%E5%88%97">46.全排列&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../47.%E5%85%A8%E6%8E%92%E5%88%97ii">47.全排列 ii&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../77.%E7%BB%84%E5%90%88">77.组合&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../78.%E5%AD%90%E9%9B%86">78.子集&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../79.%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2">79.单词搜索&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../90.%E5%AD%90%E9%9B%86ii">90.子集 ii&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../39.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C">39.组合总和&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../40.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Cii">40.组合总和 ii&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../216.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Ciii">216.组合总和 iii&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../131.%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2">131.分割回文串&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://bbs.huaweicloud.com/blogs/349853">一看就懂，一写就懵？搞懂回溯算法，一口气刷了 20 多道题-云社区-华为云&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>分割回文串</title><link>https://justice.bj.cn/post/leetcode/doc/131.%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2/</link><pubDate>Sat, 22 Jul 2023 22:10:52 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/131.%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2/</guid><description>&lt;h1 id="分割回文串httpsleetcodecnproblemspalindrome-partitioningdescription-httpsleetcodecnproblemspalindrome-partitioningdescription">&lt;a href="https://leetcode.cn/problems/palindrome-partitioning/description/" title="https://leetcode.cn/problems/palindrome-partitioning/description/">分割回文串&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (73.42%)&lt;/td>
&lt;td>1567&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;details open="">&lt;summary>&lt;strong>Tags&lt;/strong>&lt;/summary>
&lt;p>&lt;a href="https://leetcode.com/tag/backtracking" title="https://leetcode.com/tag/backtracking">&lt;code>backtracking&lt;/code>&lt;/a>&lt;/p>
&lt;details open="">&lt;summary>&lt;strong>Companies&lt;/strong>&lt;/summary>
&lt;p>&lt;code>bloomberg&lt;/code>&lt;/p>
&lt;p>给你一个字符串 &lt;code>s&lt;/code>，请你将 &lt;code>s&lt;/code> 分割成一些子串，使每个子串都是 &lt;strong>回文串&lt;/strong> 。返回 &lt;code>s&lt;/code> 所有可能的分割方案。&lt;/p>
&lt;p>&lt;strong>回文串&lt;/strong> 是正着读和反着读都一样的字符串。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：s = &amp;#34;aab&amp;#34;
输出：[[&amp;#34;a&amp;#34;,&amp;#34;a&amp;#34;,&amp;#34;b&amp;#34;],[&amp;#34;aa&amp;#34;,&amp;#34;b&amp;#34;]]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：s = &amp;#34;a&amp;#34;
输出：[[&amp;#34;a&amp;#34;]]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= s.length &amp;lt;= 16&lt;/code>&lt;/li>
&lt;li>&lt;code>s&lt;/code> 仅由小写英文字母组成&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://leetcode.cn/problems/palindrome-partitioning/comments/" title="https://leetcode.cn/problems/palindrome-partitioning/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/palindrome-partitioning/solution/" title="https://leetcode.cn/problems/palindrome-partitioning/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// @lc code=start
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// - 回溯法
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">partition&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>: &lt;span class="nb">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">is_huiwen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">bool&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">backtrace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">step&lt;/span>: &lt;span class="kt">usize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tmp&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">step&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_vec&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">off&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">step&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">is_huiwen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">step&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="n">off&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">as_bytes&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">continue&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">step&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="n">off&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">backtrace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">off&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">backtrace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>专题：买卖股票</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8/</link><pubDate>Sat, 22 Jul 2023 13:38:35 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8/</guid><description>&lt;h1 id="专题买卖股票">专题：买卖股票&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>股票买卖时机问题是 leetcode 中一类很常见的问题, 题目表述如下:&lt;/p>
&lt;p>有一个数组 prices, 代表某支股票在每天的价格.&lt;/p>
&lt;p>投资者在每天可以选择买入,卖出,或者不操作来对这支股票进行操作.&lt;/p>
&lt;p>需要求的投资者获取最大收益而每天执行操作的序列.&lt;/p>
&lt;h2 id="解题思路">解题思路&lt;/h2>
&lt;p>动态规划+贪心&lt;/p>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="../121.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA">121.买卖股票的最佳时机&lt;/a>（限交易 1 次）&lt;/li>
&lt;li>&lt;a href="../122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAii">122.买卖股票的最佳时机 II&lt;/a>（不限交易次数）&lt;/li>
&lt;li>&lt;a href="../123.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiii">123.买卖股票的最佳时机 III&lt;/a>（限交易 2 次）&lt;/li>
&lt;li>&lt;a href="../188.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiv">188.买卖股票的最佳时机 IV&lt;/a> (限交易 k 次)&lt;/li>
&lt;li>&lt;a href="../309.%E6%9C%80%E4%BD%B3%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F">309.最佳买卖股票时机含冷冻期&lt;/a>&lt;/li>
&lt;li>&lt;a href="../714.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9">714.买卖股票的最佳时机含手续费&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>专题：区间问题</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 22 Jul 2023 13:38:35 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</guid><description>&lt;h1 id="专题区间问题">专题：区间问题&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="../56.%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6">56.合并区间&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="../435.%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4">435.无重叠区间&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>专题：字符串</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sat, 22 Jul 2023 13:38:35 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>&lt;h1 id="专题字符串">专题：字符串&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>字符串是最常用的数据结构。&lt;/p>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>题目&lt;/th>
&lt;th>难度&lt;/th>
&lt;th>思路&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="../3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2">3.无重复字符的最长子串&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../10.%E6%AD%A3%E5%88%99%E5%BC%8F%E5%8C%B9%E9%85%8D">10.正则式匹配&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../14.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80">14.最长公共前缀&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97">300.最长递增子序列&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.md">344.反转字符串&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../1143.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97">1143.最长公共子序列&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>动态规划&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../97.%E4%BA%A4%E9%94%99%E5%AD%97%E7%AC%A6%E4%B8%B2">97.交错字符串&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>动态规划&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../87.%E6%89%B0%E4%B9%B1%E5%AD%97%E7%AC%A6%E4%B8%B2">87.扰乱字符串&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>动态规划/回溯&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="参考">参考&lt;/h2></description></item><item><title>专题：序列和子串</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%BA%8F%E5%88%97%E5%92%8C%E5%AD%90%E4%B8%B2/</link><pubDate>Sat, 22 Jul 2023 13:38:35 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%BA%8F%E5%88%97%E5%92%8C%E5%AD%90%E4%B8%B2/</guid><description>&lt;h1 id="专题序列和子串">专题：序列和子串&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;ul>
&lt;li>序列：&lt;/li>
&lt;li>子串：&lt;/li>
&lt;/ul>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="../53.%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C">53.最大子序列和&lt;/a>&lt;/li>
&lt;li>&lt;a href="../300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97">300.最长递增子序列&lt;/a>&lt;/li>
&lt;li>&lt;a href="../516.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97">516.最长回文子序列&lt;/a>&lt;/li>
&lt;li>&lt;a href="../673.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0">673.最长递增子序列的个数&lt;/a>&lt;/li>
&lt;li>&lt;a href="../674.%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97">674.最长连续递增序列&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>专题：括号问题</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 22 Jul 2023 13:38:35 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</guid><description>&lt;h1 id="专题括号问题">专题：括号问题&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="../20.%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7">20.有效括号&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="../22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90">22.括号生成&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="../32.%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7">32.最长有效括号&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>专题：栈</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98.%E6%A0%88/</link><pubDate>Sat, 22 Jul 2023 13:38:35 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98.%E6%A0%88/</guid><description>&lt;h1 id="专题栈">专题：栈&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>栈是一个基本数据结构, 其主要特征为先进先出;&lt;/p>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>题目&lt;/th>
&lt;th>难度&lt;/th>
&lt;th>关键思路&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="../42.%E6%8E%A5%E9%9B%A8%E6%B0%B4">42.接雨水&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>单调递减栈&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../84.%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E7%9F%A9%E5%BD%A2">84.柱状图中的最大矩形&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>单调递增栈&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../739.%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6">739.每日温度&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../496.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0I">496.下一个更大元素 I&lt;/a>&lt;/td>
&lt;td>*&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../394.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81">394.字符串解码&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>栈&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>专题：经典数据结构设计</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E7%BB%8F%E5%85%B8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</link><pubDate>Sat, 22 Jul 2023 13:38:35 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E7%BB%8F%E5%85%B8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid><description>&lt;h1 id="专题经典数据结构设计">专题：经典数据结构设计&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>本专题包含一些经典的数据结构设计。&lt;/p>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>题目&lt;/th>
&lt;th>难度&lt;/th>
&lt;th>关键思路&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="../146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6">146.LRU缓存&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../460.lfu%E7%BC%93%E5%AD%98">460.LFU缓存&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../173.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8">173.二叉搜索树迭代器&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://halfrost.com/lru_lfu_interview/">https://halfrost.com/lru_lfu_interview/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>专题：跳跃游戏</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link><pubDate>Sat, 22 Jul 2023 13:38:35 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid><description>&lt;h1 id="专题跳跃游戏">专题：跳跃游戏&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="题目">题目&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="../55.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F">55.跳跃游戏&lt;/a>：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="../45.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8FII">45.跳跃游戏II&lt;/a>:&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>专题：链表</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 22 Jul 2023 13:38:35 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E9%93%BE%E8%A1%A8/</guid><description>&lt;h1 id="专题链表">专题：链表&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>链表是最基本，最常用的结构之一。&lt;/p>
&lt;p>链表具有以下注意特性：&lt;/p>
&lt;ul>
&lt;li>顺序访问；&lt;/li>
&lt;li>离散；&lt;/li>
&lt;li>迭代；&lt;/li>
&lt;li>动态分配；&lt;/li>
&lt;/ul>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="../206.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8">206.反转链表&lt;/a>&lt;/li>
&lt;li>&lt;a href="../21.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8">21.合并两个有序链表&lt;/a>&lt;/li>
&lt;li>&lt;a href="../23.%E5%90%88%E5%B9%B6k%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8">23.合并 k 个有序链表&lt;/a>&lt;/li>
&lt;li>&lt;a href="../24.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD">24.两两交换链表中&lt;/a>&lt;/li>
&lt;li>&lt;a href="../86.%E5%88%86%E5%89%B2%E9%93%BE%E8%A1%A8">86.分割链表&lt;/a>&lt;/li>
&lt;li>&lt;a href="../61.%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8">61.旋转链表&lt;/a>&lt;/li>
&lt;li>&lt;a href="../92.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8II">92.反转链表 II&lt;/a>&lt;/li>
&lt;li>&lt;a href="../876.%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9">876.链表中间节点&lt;/a>&lt;/li>
&lt;li>&lt;a href="../19.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%80%92%E6%95%B0%E7%AC%ACK%E4%B8%AA%E8%8A%82%E7%82%B9">19.删除链表倒数第 K 个节点&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="各种链表实现">各种链表实现&lt;/h2>
&lt;h3 id="rust-中的链表">rust 中的链表&lt;/h3>
&lt;ul>
&lt;li>定义&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="cp">#[derive(PartialEq, Eq, Clone, Debug)]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">ListNode&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">val&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>: &lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">Box&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">ListNode&lt;/span>&lt;span class="o">&amp;gt;&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ListNode&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">#[inline]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">Self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ListNode&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>: &lt;span class="nb">None&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>遍历&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Option&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Box&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ListNode&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)));&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">as_mut&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">is_some&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">as_mut&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2></description></item><item><title>专题：二分法</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E4%BA%8C%E5%88%86%E6%B3%95/</link><pubDate>Sat, 22 Jul 2023 11:48:02 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E4%BA%8C%E5%88%86%E6%B3%95/</guid><description>&lt;h1 id="专题二分法">专题：二分法&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>二分查找法是一种高效的查找方法, 其拥有$ln(n)$的时间复杂度. 其前置条件只有一个:有序数组, 因此在处理有序数组时, 可以优先考虑二分法来降低时间复杂度.&lt;/p>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>题目&lt;/th>
&lt;th>难度&lt;/th>
&lt;th>解题思路&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="../69.x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9">69.x 的平方根&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97">300.最长递增子序列&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="参考">参考&lt;/h2></description></item><item><title>专题：二叉树</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sat, 22 Jul 2023 11:48:02 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>&lt;h1 id="专题二叉树">专题：二叉树&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>二叉树是一个递归的结构&lt;/p>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>题目&lt;/th>
&lt;th>难度&lt;/th>
&lt;th>解题思路&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="../94.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86">94.二叉树的中序遍历&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>递归，栈&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="./100.%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91">100.相同的树&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../101.%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91">101.对称二叉树&lt;/a>&lt;/td>
&lt;td>*&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86">102.二叉树的层序遍历&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../108.%E5%B0%86%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91">108.将有序数组转换为二叉搜索树&lt;/a>&lt;/td>
&lt;td>*&lt;/td>
&lt;td>递归&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="./110.%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91">110.平衡二叉树&lt;/a>&lt;/td>
&lt;td>*&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../543.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84.md">543.二叉树的直径&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../617.%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91.md">617.合并二叉树&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="./111.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6">111.二叉树的最小深度&lt;/a>&lt;/td>
&lt;td>*&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://www.onandon.top/post/er-cha-shu-bian-li-xi-lie-zong-jie/">二叉树遍历系列总结 | 永不止息&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>专题：动态规划</title><link>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><pubDate>Sat, 22 Jul 2023 11:48:02 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/%E4%B8%93%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid><description>&lt;h1 id="专题动态规划">专题：动态规划&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>动态规划问题的难点在于对问题进行合理划分，将大问题转变为小问题的组合，形成递推关系，通过归纳法将问题得到解决；&lt;/p>
&lt;p>动态规划最关键的地方在于对问题进行正确的抽象和建模，进而建立递推公式；&lt;/p>
&lt;h2 id="步骤">步骤&lt;/h2>
&lt;ul>
&lt;li>函数定义：定义问题目标函数，目标函数可通过子目标函数组合而成，子函数需要包含目标函数的所有情形且不能重叠；&lt;/li>
&lt;li>递推公式：定义最终函数 和 子目标函数之间的递推关系，通过将目标问题分解为规模更小的子问题组合来递推解决目标问题；&lt;/li>
&lt;li>初始条件：&lt;/li>
&lt;li>终止条件:&lt;/li>
&lt;/ul>
&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>题目&lt;/th>
&lt;th>难度&lt;/th>
&lt;th>关键思路&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="../5.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2">5.最长回文子串&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../10.%E6%AD%A3%E5%88%99%E5%BC%8F%E5%8C%B9%E9%85%8D">10.正则式匹配&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84">62.不同路径&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../63.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84-ii">63.不同路径 II&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../403.%E9%9D%92%E8%9B%99%E8%BF%87%E6%B2%B3">403.青蛙过河&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>sed</title><link>https://justice.bj.cn/post/14.language/shell/sed/</link><pubDate>Sat, 22 Jul 2023 09:15:14 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/shell/sed/</guid><description>&lt;h1 id="sed">sed&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>sed 是 unix 下常用的文本处理工具之一，&lt;/p>
&lt;h3 id="常用法">常用法&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell"> &lt;span class="c1"># 先读取资料、存入模式空间、对其进行编辑、再输出、再用下一行替换模式空间内容&lt;/span>
&lt;span class="c1"># 调试工具sedsed (参数 -d) http://aurelio.net/sedsed/sedsed-1.0&lt;/span>
-n &lt;span class="c1"># 输出由编辑指令控制(取消默认的输出,必须与编辑指令一起配合)&lt;/span>
-i &lt;span class="c1"># 直接对文件操作&lt;/span>
-e &lt;span class="c1"># 多重编辑&lt;/span>
-r &lt;span class="c1"># 正则可不转移特殊字符&lt;/span>
b &lt;span class="c1"># 跳过匹配的行&lt;/span>
p &lt;span class="c1"># 打印&lt;/span>
d &lt;span class="c1"># 删除&lt;/span>
s &lt;span class="c1"># 替换&lt;/span>
g &lt;span class="c1"># 配合s全部替换&lt;/span>
i &lt;span class="c1"># 行前插入&lt;/span>
a &lt;span class="c1"># 行后插入&lt;/span>
r &lt;span class="c1"># 读&lt;/span>
y &lt;span class="c1"># 转换&lt;/span>
q &lt;span class="c1"># 退出&lt;/span>
&lt;span class="p">&amp;amp;&lt;/span> &lt;span class="c1"># 代表查找的串内容&lt;/span>
* &lt;span class="c1"># 任意多个 前驱字符(前导符)&lt;/span>
? &lt;span class="c1"># 0或1个 最小匹配 没加-r参数需转义 \?&lt;/span>
$ &lt;span class="c1"># 最后一行&lt;/span>
.* &lt;span class="c1"># 匹配任意多个字符&lt;/span>
&lt;span class="se">\(&lt;/span>a&lt;span class="se">\)&lt;/span> &lt;span class="c1"># 保存a作为标签1(\1)&lt;/span>
模式空间&lt;span class="o">{&lt;/span>
&lt;span class="c1"># 模式空间(两行两行处理) 模式匹配的范围，一般而言，模式空间是输入文本中某一行，但是可以通过使用N函数把多于一行读入模式空间&lt;/span>
&lt;span class="c1"># 暂存空间里默认存储一个空行&lt;/span>
n &lt;span class="c1"># 读入下一行(覆盖上一行)&lt;/span>
h &lt;span class="c1"># 把模式空间里的行拷贝到暂存空间&lt;/span>
H &lt;span class="c1"># 把模式空间里的行追加到暂存空间&lt;/span>
g &lt;span class="c1"># 用暂存空间的内容替换模式空间的行&lt;/span>
G &lt;span class="c1"># 把暂存空间的内容追加到模式空间的行后&lt;/span>
x &lt;span class="c1"># 将暂存空间的内容于模式空间里的当前行互换&lt;/span>
！ &lt;span class="c1"># 对其前面的要匹配的范围取反&lt;/span>
D &lt;span class="c1"># 删除当前模式空间中直到并包含第一个换行符的所有字符(/.*/匹配模式空间中所有内容，匹配到就执行D,没匹配到就结束D)&lt;/span>
N &lt;span class="c1"># 追加下一个输入行到模式空间后面并在第二者间嵌入一个换行符，改变当前行号码,模式匹配可以延伸跨域这个内嵌换行&lt;/span>
p &lt;span class="c1"># 打印模式空间中的直到并包含第一个换行的所有字符&lt;/span>
&lt;span class="o">}&lt;/span>
标签函数&lt;span class="o">{&lt;/span>
: lable &lt;span class="c1"># 建立命令标记，配合b，t函数使用跳转&lt;/span>
b lable &lt;span class="c1"># 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。&lt;/span>
t labe &lt;span class="c1"># 判断分支，从最后一行开始，条件一旦满足或者T,t命令，将导致分支到带有标号的命令出，或者到脚本末尾。与b函数不同在于t在执行跳转前会先检查其前一个替换命令是否成功，如成功，则执行跳转。&lt;/span>
sed -e &lt;span class="s1">&amp;#39;{:p1;/A/s/A/AA/;/B/s/B/BB/;/[AB]\{10\}/b;b p1;}&amp;#39;&lt;/span> &lt;span class="c1"># 文件内容第一行A第二行B:建立标签p1;两个替换函数(A替换成AA,B替换成BB)当A或者B达到10个以后调用b,返回&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;sd f f [a b c cddd eee]&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;:n;s#\(\[[^ ]*\) *#\1#;tn&amp;#39;&lt;/span> &lt;span class="c1"># 标签函数t使用方法,替换[]里的空格&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;198723124.03&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span>sed -r &lt;span class="s1">&amp;#39;:a;s/([0-9]+)([0-9]{3})/\1,\2/;ta&amp;#39;&lt;/span> &lt;span class="c1"># 每三个字符加一个逗号&lt;/span>
&lt;span class="o">}&lt;/span>
引用外部变量&lt;span class="o">{&lt;/span>
sed -n &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="nv">$a&lt;/span>&lt;span class="s1">&amp;#39;,10p&amp;#39;&lt;/span>
sed -n &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">$a&lt;/span>&lt;span class="s2">&amp;#34;,10p&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
sed 10q &lt;span class="c1"># 显示文件中的前10行 (模拟&amp;#34;head&amp;#34;)&lt;/span>
sed -n &lt;span class="s1">&amp;#39;$=&amp;#39;&lt;/span> &lt;span class="c1"># 计算行数(模拟 &amp;#34;wc -l&amp;#34;)&lt;/span>
sed -n &lt;span class="s1">&amp;#39;5,/^no/p&amp;#39;&lt;/span> &lt;span class="c1"># 打印从第5行到以no开头行之间的所有行&lt;/span>
sed -i &lt;span class="s2">&amp;#34;/^&lt;/span>&lt;span class="nv">$f&lt;/span>&lt;span class="s2">/d&amp;#34;&lt;/span> a 　　 　 &lt;span class="c1"># 删除匹配行&lt;/span>
sed -i &lt;span class="s1">&amp;#39;/aaa/,$d&amp;#39;&lt;/span> &lt;span class="c1"># 删除匹配行到末尾&lt;/span>
sed -i &lt;span class="s2">&amp;#34;s/=/:/&amp;#34;&lt;/span> c &lt;span class="c1"># 直接对文本替换&lt;/span>
sed -i &lt;span class="s2">&amp;#34;/^pearls/s/&lt;/span>$&lt;span class="s2">/j/&amp;#34;&lt;/span> &lt;span class="c1"># 找到pearls开头在行尾加j&lt;/span>
sed &lt;span class="s1">&amp;#39;/1/,/3/p&amp;#39;&lt;/span> file &lt;span class="c1"># 打印1和3之间的行&lt;/span>
sed -n &lt;span class="s1">&amp;#39;1p&amp;#39;&lt;/span> file &lt;span class="c1"># 取出指定行&lt;/span>
sed &lt;span class="s1">&amp;#39;5i\aaa&amp;#39;&lt;/span> file &lt;span class="c1"># 在第5行之前插入行&lt;/span>
sed &lt;span class="s1">&amp;#39;5a\aaa&amp;#39;&lt;/span> file &lt;span class="c1"># 在第5行之后抽入行&lt;/span>
&lt;span class="nb">echo&lt;/span> a&lt;span class="p">|&lt;/span>sed -e &lt;span class="s1">&amp;#39;/a/i\b&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配行前插入一行&lt;/span>
&lt;span class="nb">echo&lt;/span> a&lt;span class="p">|&lt;/span>sed -e &lt;span class="s1">&amp;#39;/a/a\b&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配行后插入一行&lt;/span>
&lt;span class="nb">echo&lt;/span> a&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/a/&amp;amp;\nb/g&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配行后插入一行&lt;/span>
seq 10&lt;span class="p">|&lt;/span> sed -e&lt;span class="o">{&lt;/span>1,3&lt;span class="o">}&lt;/span>&lt;span class="s1">&amp;#39;s/./a/&amp;#39;&lt;/span> &lt;span class="c1"># 匹配1和3行替换&lt;/span>
sed -n &lt;span class="s1">&amp;#39;/regexp/!p&amp;#39;&lt;/span> &lt;span class="c1"># 只显示不匹配正则表达式的行&lt;/span>
sed &lt;span class="s1">&amp;#39;/regexp/d&amp;#39;&lt;/span> &lt;span class="c1"># 只显示不匹配正则表达式的行&lt;/span>
sed &lt;span class="s1">&amp;#39;$!N;s/\n//&amp;#39;&lt;/span> &lt;span class="c1"># 将每两行连接成一行&lt;/span>
sed &lt;span class="s1">&amp;#39;/baz/s/foo/bar/g&amp;#39;&lt;/span> &lt;span class="c1"># 只在行中出现字串&amp;#34;baz&amp;#34;的情况下将&amp;#34;foo&amp;#34;替换成&amp;#34;bar&amp;#34;&lt;/span>
sed &lt;span class="s1">&amp;#39;/baz/!s/foo/bar/g&amp;#39;&lt;/span> &lt;span class="c1"># 将&amp;#34;foo&amp;#34;替换成&amp;#34;bar&amp;#34;，并且只在行中未出现字串&amp;#34;baz&amp;#34;的情况下替换&lt;/span>
&lt;span class="nb">echo&lt;/span> a&lt;span class="p">|&lt;/span>sed -e &lt;span class="s1">&amp;#39;s/a/#&amp;amp;/g&amp;#39;&lt;/span> &lt;span class="c1"># 在a前面加#号&lt;/span>
sed &lt;span class="s1">&amp;#39;s/foo/bar/4&amp;#39;&lt;/span> &lt;span class="c1"># 只替换每一行中的第四个字串&lt;/span>
sed &lt;span class="s1">&amp;#39;s/\(.*\)foo/\1bar/&amp;#39;&lt;/span> &lt;span class="c1"># 替换每行最后一个字符串&lt;/span>
sed &lt;span class="s1">&amp;#39;s/\(.*\)foo\(.*foo\)/\1bar\2/&amp;#39;&lt;/span> &lt;span class="c1"># 替换倒数第二个字符串&lt;/span>
sed &lt;span class="s1">&amp;#39;s/[0-9][0-9]$/&amp;amp;5&amp;#39;&lt;/span> &lt;span class="c1"># 在以[0-9][0-9]结尾的行后加5&lt;/span>
sed -n &lt;span class="s1">&amp;#39; /^eth\|em[01][^:]/{n;p;}&amp;#39;&lt;/span> &lt;span class="c1"># 匹配多个关键字&lt;/span>
sed -n -r &lt;span class="s1">&amp;#39; /eth|em[01][^:]/{n;p;}&amp;#39;&lt;/span> &lt;span class="c1"># 匹配多个关键字&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;1\n2&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span>xargs -i -t sed &lt;span class="s1">&amp;#39;s/^/1/&amp;#39;&lt;/span> &lt;span class="o">{}&lt;/span> &lt;span class="c1"># 同时处理多个文件&lt;/span>
sed &lt;span class="s1">&amp;#39;/west/,/east/s/$/*VACA*/&amp;#39;&lt;/span> &lt;span class="c1"># 修改west和east之间的所有行，在结尾处加*VACA*&lt;/span>
sed &lt;span class="s1">&amp;#39;s/[^1-9]*\([0-9]\+\).*/\1/&amp;#39;&lt;/span> &lt;span class="c1"># 取出第一组数字，并且忽略掉开头的0&lt;/span>
sed -n &lt;span class="s1">&amp;#39;/regexp/{g;1!p;};h&amp;#39;&lt;/span> &lt;span class="c1"># 查找字符串并将匹配行的上一行显示出来，但并不显示匹配行&lt;/span>
sed -n &lt;span class="s1">&amp;#39; /regexp/{n;p;}&amp;#39;&lt;/span> &lt;span class="c1"># 查找字符串并将匹配行的下一行显示出来，但并不显示匹配行&lt;/span>
sed -n &lt;span class="s1">&amp;#39;s/\(mar\)got/\1ianne/p&amp;#39;&lt;/span> &lt;span class="c1"># 保存\(mar\)作为标签1&lt;/span>
sed -n &lt;span class="s1">&amp;#39;s/\([0-9]\+\).*\(t\)/\2\1/p&amp;#39;&lt;/span> &lt;span class="c1"># 保存多个标签&lt;/span>
sed -i -e &lt;span class="s1">&amp;#39;1,3d&amp;#39;&lt;/span> -e &lt;span class="s1">&amp;#39;s/1/2/&amp;#39;&lt;/span> &lt;span class="c1"># 多重编辑(先删除1-3行，在将1替换成2)&lt;/span>
sed -e &lt;span class="s1">&amp;#39;s/@.*//g&amp;#39;&lt;/span> -e &lt;span class="s1">&amp;#39;/^$/d&amp;#39;&lt;/span> &lt;span class="c1"># 删除掉@后面所有字符，和空行&lt;/span>
sed -n -e &lt;span class="s2">&amp;#34;{s/^ *[0-9]*//p}&amp;#34;&lt;/span> &lt;span class="c1"># 打印并删除正则表达式的那部分内容&lt;/span>
&lt;span class="nb">echo&lt;/span> abcd&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;y/bd/BE/&amp;#39;&lt;/span> &lt;span class="c1"># 匹配字符替换&lt;/span>
sed &lt;span class="s1">&amp;#39;/^#/b;y/y/P/&amp;#39;&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="c1"># 非#号开头的行替换字符&lt;/span>
sed &lt;span class="s1">&amp;#39;/suan/r readfile&amp;#39;&lt;/span> &lt;span class="c1"># 找到含suan的行，在后面加上读入的文件内容&lt;/span>
sed -n &lt;span class="s1">&amp;#39;/no/w writefile&amp;#39;&lt;/span> &lt;span class="c1"># 找到含no的行，写入到指定文件中&lt;/span>
sed &lt;span class="s1">&amp;#39;/regex/G&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配式样行之后插入一空行&lt;/span>
sed &lt;span class="s1">&amp;#39;/regex/{x;p;x;G;}&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配式样行之前和之后各插入一空行&lt;/span>
sed &lt;span class="s1">&amp;#39;n;d&amp;#39;&lt;/span> &lt;span class="c1"># 删除所有偶数行&lt;/span>
sed &lt;span class="s1">&amp;#39;G;G&amp;#39;&lt;/span> &lt;span class="c1"># 在每一行后面增加两空行&lt;/span>
sed &lt;span class="s1">&amp;#39;/^$/d;G&amp;#39;&lt;/span> &lt;span class="c1"># 在输出的文本中每一行后面将有且只有一空行&lt;/span>
sed &lt;span class="s1">&amp;#39;n;n;n;n;G;&amp;#39;&lt;/span> &lt;span class="c1"># 在每5行后增加一空白行&lt;/span>
sed -n &lt;span class="s1">&amp;#39;5~5p&amp;#39;&lt;/span> &lt;span class="c1"># 只打印行号为5的倍数&lt;/span>
seq &lt;span class="m">1&lt;/span> 30&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;5~5s/.*/a/&amp;#39;&lt;/span> &lt;span class="c1"># 倍数行执行替换&lt;/span>
sed -n &lt;span class="s1">&amp;#39;3,${p;n;n;n;n;n;n;}&amp;#39;&lt;/span> &lt;span class="c1"># 从第3行开始，每7行显示一次&lt;/span>
sed -n &lt;span class="s1">&amp;#39;h;n;G;p&amp;#39;&lt;/span> &lt;span class="c1"># 奇偶调换&lt;/span>
seq &lt;span class="m">1&lt;/span> 10&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;1!G;h;$!d&amp;#39;&lt;/span> &lt;span class="c1"># 倒叙排列&lt;/span>
ls -l&lt;span class="p">|&lt;/span>sed -n &lt;span class="s1">&amp;#39;/^.rwx.*/p&amp;#39;&lt;/span> &lt;span class="c1"># 查找属主权限为7的文件&lt;/span>
&lt;span class="nv">sed&lt;/span> &lt;span class="o">=&lt;/span> filename &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;N;s/\n/\t/&amp;#39;&lt;/span> &lt;span class="c1"># 为文件中的每一行进行编号(简单的左对齐方式)&lt;/span>
sed &lt;span class="s1">&amp;#39;s/^[ \t]*//&amp;#39;&lt;/span> &lt;span class="c1"># 将每一行前导的&amp;#34;空白字符&amp;#34;(空格，制表符)删除,使之左对齐&lt;/span>
sed &lt;span class="s1">&amp;#39;s/^[ \t]*//;s/[ \t]*$//&amp;#39;&lt;/span> &lt;span class="c1"># 将每一行中的前导和拖尾的空白字符删除&lt;/span>
sed &lt;span class="s1">&amp;#39;/{abc,def\}\/\[111,222]/s/^/00000/&amp;#39;&lt;/span> &lt;span class="c1"># 匹配需要转行的字符: } / [&lt;/span>
&lt;span class="nb">echo&lt;/span> abcd&lt;span class="se">\\&lt;/span>nabcde &lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/\\n/@/g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span>tr &lt;span class="s1">&amp;#39;@&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;\n&amp;#39;&lt;/span> &lt;span class="c1"># 将换行符转换为换行&lt;/span>
cat tmp&lt;span class="p">|&lt;/span>awk &lt;span class="s1">&amp;#39;{print $1}&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span>sort -n&lt;span class="p">|&lt;/span>sed -n &lt;span class="s1">&amp;#39;$p&amp;#39;&lt;/span> &lt;span class="c1"># 取一列最大值&lt;/span>
sed -n &lt;span class="s1">&amp;#39;{s/^[^\/]*//;s/\:.*//;p}&amp;#39;&lt;/span> /etc/passwd &lt;span class="c1"># 取用户家目录(匹配不为/的字符和匹配:到结尾的字符全部删除)&lt;/span>
&lt;span class="nv">sed&lt;/span> &lt;span class="o">=&lt;/span> filename &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;N;s/^/ /; s/ *\(.\{6,\}\)\n/\1 /&amp;#39;&lt;/span> &lt;span class="c1"># 对文件中的所有行编号(行号在左，文字右端对齐)&lt;/span>
/sbin/ifconfig &lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/.*inet addr:\(.*\) Bca.*/\1/g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span>sed -n &lt;span class="s1">&amp;#39;/eth/{n;p}&amp;#39;&lt;/span> &lt;span class="c1"># 取所有IP&lt;/span>
修改keepalive配置剔除后端服务器&lt;span class="o">{&lt;/span>
sed -i &lt;span class="s1">&amp;#39;/real_server.*10.0.1.158.*8888/,+8 s/^/#/&amp;#39;&lt;/span> keepalived.conf
sed -i &lt;span class="s1">&amp;#39;/real_server.*10.0.1.158.*8888/,+8 s/^#//&amp;#39;&lt;/span> keepalived.conf
&lt;span class="o">}&lt;/span>
模仿rev功能&lt;span class="o">{&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="m">123&lt;/span> &lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;/\n/!G;s/\(.\)\(.*\n\)/&amp;amp;\2\1/;//D;s/.//;&amp;#39;&lt;/span>
/&lt;span class="se">\n&lt;/span>/!G&lt;span class="p">;&lt;/span> 　　　　　　&lt;span class="c1"># 没有\n换行符，要执行G,因为保留空间中为空，所以在模式空间追加一空行&lt;/span>
s/&lt;span class="se">\(&lt;/span>.&lt;span class="se">\)\(&lt;/span>.*&lt;span class="se">\n\)&lt;/span>/&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="se">\2\1&lt;/span>/&lt;span class="p">;&lt;/span> &lt;span class="c1"># 标签替换 &amp;amp;\n23\n1$ (关键在于&amp;amp; ,可以让后面//匹配到空行)&lt;/span>
//D&lt;span class="p">;&lt;/span> 　　　　　　&lt;span class="c1"># D 命令会引起循环删除模式空间中的第一部分，如果删除后，模式空间中还有剩余行，则返回 D 之前的命令，重新执行，如果 D 后，模式空间中没有任何内容，则将退出。 //D 匹配空行执行D,如果上句s没有匹配到,//也无法匹配到空行, &amp;#34;//D;&amp;#34;命令结束&lt;/span>
s/.//&lt;span class="p">;&lt;/span> 　　　　　　&lt;span class="c1"># D结束后,删除开头的 \n&lt;/span>
&lt;span class="o">}&lt;/span>
$ sed -n &lt;span class="s1">&amp;#39;m&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;m,n&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;m,$&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;/pattern1/&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;/pattern1/,$&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;/pattern1/,/pattern2/&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;m,/pattern/&amp;#39;&lt;/span>p filename.txt
&lt;span class="c1">## 删除首行，尾行&lt;/span>
$ sed -n &lt;span class="s1">&amp;#39;1!P;N;$q;D&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2></description></item></channel></rss>