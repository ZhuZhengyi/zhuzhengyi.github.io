<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Justice的小站</title><link>https://justice.bj.cn/</link><description>Recent content on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 23 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://justice.bj.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Justice's Blog</title><link>https://justice.bj.cn/homepage/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/about/</guid><description>&lt;h2 id="self-introduction">Self Introduction&lt;/h2>
&lt;p>Cras ex dui, tristique a libero eget, consectetur semper ligula. Nunc augue arcu, malesuada a nisi et, molestie finibus metus. Sed lacus odio, ultricies a nisl vitae, sollicitudin tempor ipsum. Vivamus quis feugiat arcu. Sed mi nunc, efficitur quis tellus vitae, posuere mattis metus. Phasellus in mattis dui. Nullam blandit, augue non ullamcorper dapibus, lacus dui molestie massa, in iaculis purus lectus eu lectus. Duis hendrerit lacinia tellus, sit amet feugiat dolor placerat id. Aenean ac velit massa. Vivamus feugiat dui at magna viverra, ut dictum nunc rutrum. Duis eget sapien finibus, lobortis orci id, vestibulum tellus. Maecenas lobortis urna libero, quis fermentum lectus lobortis nec. Nullam laoreet volutpat libero, ac mattis magna ullamcorper quis. Duis eget ipsum eu nisi mattis cursus et vitae turpis.&lt;/p>
&lt;p>Aliquam pretium diam eget leo feugiat finibus. Donec malesuada commodo ipsum. Aenean a massa in lacus venenatis vestibulum. Duis vel sem quis elit iaculis consectetur et quis dolor. Morbi eu ipsum hendrerit, malesuada ante sed, dapibus est. Suspendisse feugiat nulla ut gravida convallis. Phasellus id massa posuere, rhoncus justo ut, porttitor dolor. Nulla ultrices malesuada egestas. Nunc fermentum tincidunt sem ac vulputate. Donec mollis sollicitudin justo eget varius. Donec ornare velit et felis blandit, id molestie sapien lobortis. Morbi eget tristique justo. Mauris posuere, nibh eu laoreet ultricies, ligula erat iaculis sapien, vel dapibus lacus libero ut diam. Etiam viverra ante felis, et scelerisque nunc pellentesque vitae. Praesent feugiat dictum molestie.&lt;/p>
&lt;h2 id="details">Details&lt;/h2>
&lt;p>Nunc pellentesque vitae:&lt;/p>
&lt;ul>
&lt;li>Morbi accumsan nibh efficitur diam molestie, non dignissim diam facilisis.&lt;/li>
&lt;li>Donec dignissim leo in mollis faucibus.&lt;/li>
&lt;li>Donec blandit lacus a pellentesque fermentum.&lt;/li>
&lt;/ul>
&lt;p>Donec mollis sollicitudin:&lt;/p>
&lt;ul>
&lt;li>Nunc dictum purus ornare purus consectetur, eu pellentesque massa ullamcorper.&lt;/li>
&lt;li>Aliquam eu leo vitae justo aliquam tincidunt.&lt;/li>
&lt;li>Fusce non massa id augue interdum feugiat sed et nulla.&lt;/li>
&lt;li>Vivamus molestie augue in tristique laoreet.&lt;/li>
&lt;/ul></description></item><item><title>Pages</title><link>https://justice.bj.cn/homepage/pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/pages/</guid><description/></item><item><title>Experiences</title><link>https://justice.bj.cn/homepage/experiences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/experiences/</guid><description/></item><item><title>Vintage</title><link>https://justice.bj.cn/homepage/vintage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/vintage/</guid><description/></item><item><title>Blank</title><link>https://justice.bj.cn/homepage/blank/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/blank/</guid><description>
&lt;div style="text-align:center">
&lt;p>Write anything you like here!&lt;/p>
&lt;/div></description></item><item><title>Bash基础</title><link>https://justice.bj.cn/post/14.language/shell/bash%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/shell/bash%E5%9F%BA%E7%A1%80/</guid><description>&lt;h1 id="bash基础">Bash基础&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="特殊变量">特殊变量&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nv">$#&lt;/span> &lt;span class="c1"># 参数个数&lt;/span>
&lt;span class="nv">$@&lt;/span> &lt;span class="c1"># 所有参数, 每个参数分别用&amp;#34;&amp;#34;包含&lt;/span>
&lt;span class="nv">$*&lt;/span> &lt;span class="c1"># 所有参数，所有参数使用一个外层&amp;#34; &amp;#34;包含&lt;/span>
&lt;span class="nv">$0&lt;/span> &lt;span class="c1"># 文件名&lt;/span>
&lt;span class="nv">$1&lt;/span> &lt;span class="c1"># 第1个参数&lt;/span>
&lt;span class="nv">$?&lt;/span> &lt;span class="c1"># 上一个命令的退出状态&lt;/span>
&lt;span class="nv">$!&lt;/span> &lt;span class="c1"># 进程ID&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参数替换">参数替换&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">value&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 若var已设置，则不进行赋值， 否则，var=value&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">:=value&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 总取value&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">:?mesg&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 若var未设置，则显示mesg&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">:+value&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 若var未设置，则var为空， 否则，var=value&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">%pattern&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 从var右边去掉最短的pattern%%&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">%%pattern&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 从var右边去掉最长的pattern&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">#pattern&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 从var左边去掉最短的pattern&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">##pattern&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 从var左边去掉最长的pattern&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">word&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">pos&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">size&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># chars at pos(&amp;gt;0,from left; &amp;lt;0, from right ) len of size&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">/ABC/DEFG&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># replace ABC with DEFG&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="字符串">字符串&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="nv">str&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;abcdef&amp;#34;&lt;/span>
expr length &lt;span class="nv">$str&lt;/span> &lt;span class="c1"># 4&lt;/span>
&lt;span class="c1">## 获取字符串长度&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${#&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 4&lt;/span>
&lt;span class="c1">## 获取子串index&lt;/span>
expr index &lt;span class="nv">$str&lt;/span> &lt;span class="s2">&amp;#34;b&amp;#34;&lt;/span> &lt;span class="c1"># 2&lt;/span>
&lt;span class="c1">## 子串&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">3&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1">#从第二个位置开始提取3个字符, bcd&lt;/span>
&lt;span class="c1">## 一个井号(#) 表示从左边截取掉最短的匹配 &lt;/span>
&lt;span class="c1">## 两个井号(##) 表示从左边截取掉最长的匹配&lt;/span>
&lt;span class="nv">str&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;abbc,def,ghi,abcjkl&amp;#34;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">#a*c&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 输出,def,ghi,abcjkl (这里把abbc字串去掉）&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">##a*c&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 输出jkl，(这里把abbc,def,ghi,abc字串去掉)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">#&lt;/span>&lt;span class="s2">&amp;#34;a*c&amp;#34;&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 输出abbc,def,ghi,abcjkl 因为str中没有&amp;#34;a*c&amp;#34;子串&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">##&lt;/span>&lt;span class="s2">&amp;#34;a*c&amp;#34;&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 输出abbc,def,ghi,abcjkl 同理&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">#*a*c*&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 空&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">##*a*c*&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 空&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">#d*f&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 输出abbc,def,ghi,abcjkl, &lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">#*d*f&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 输出,ghi,abcjkl &lt;/span>
&lt;span class="c1">## 一个百分号(%)表示从右边截取最短的匹配&lt;/span>
&lt;span class="c1">## 两个百分号表示(%%)表示从右边截取最长的匹配&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">%a*l&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># abbc,def,ghi &lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">%%b*l&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># a &lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">%a*c&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># abbc,def,ghi,abcjkl&lt;/span>
&lt;span class="c1">## 子串替换&lt;/span>
&lt;span class="nv">str&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;apple, tree, apple tree&amp;#34;&lt;/span>
&lt;span class="c1">## /替换第一次出现的apple&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">/apple/APPLE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># APPLE, tree, apple tree&lt;/span>
&lt;span class="c1">## //替换所有apple&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">//apple/APPLE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># APPLE, tree, APPLE tree &lt;/span>
&lt;span class="c1">## /#开头匹配替换&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">/#apple/APPLE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># APPLE, tree, apple tree&lt;/span>
&lt;span class="c1">## %末尾匹配替换&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">str&lt;/span>&lt;span class="p">/%apple/APPLE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># 如果字符串str以apple结尾，则用APPLE替换它&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="数组array">数组(array)&lt;/h2>
&lt;ul>
&lt;li>bash中的数组index可以不连续；&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">## 定义数组&lt;/span>
&lt;span class="nb">declare&lt;/span> -a array1 &lt;span class="nv">array2&lt;/span>&lt;span class="o">=(&lt;/span> a b c d &lt;span class="o">)&lt;/span>
&lt;span class="c1">## 数组赋值&lt;/span>
array1&lt;span class="o">[&lt;/span>2&lt;span class="o">]=&lt;/span>a1
&lt;span class="c1">## 数组所有value &lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">array1&lt;/span>&lt;span class="p">[*]&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="si">${&lt;/span>&lt;span class="nv">array1&lt;/span>&lt;span class="p">[@]&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1">## 数组元素个数&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${#&lt;/span>&lt;span class="nv">array1&lt;/span>&lt;span class="p">[*]&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1">## 数组元素: &lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">array1&lt;/span>&lt;span class="p">[2]&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1">## 数组元素增加前缀&lt;/span>
&lt;span class="nv">array&lt;/span>&lt;span class="o">=(&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">array&lt;/span>&lt;span class="p">[@]/#/prefix_&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">)&lt;/span> &lt;span class="c1"># prefix_a prefix_b prefix_c&lt;/span>
&lt;span class="nv">array&lt;/span>&lt;span class="o">=(&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">array&lt;/span>&lt;span class="p">[@]/%/_suffix&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">)&lt;/span> &lt;span class="c1"># a_suffiix b_suffix c_suffix&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="字典dict">字典(dict)&lt;/h3>
&lt;p>bash 4.1.2 版本以上内置dict支持&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">## bash version &amp;gt; 4.1.2&lt;/span>
&lt;span class="c1">## 字典声明&lt;/span>
&lt;span class="nb">declare&lt;/span> -A hashmap
&lt;span class="nv">hashmap&lt;/span>&lt;span class="o">=(&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="o">]=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="o">]=&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="o">]=&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="o">)&lt;/span>
&lt;span class="c1">## 字典赋值&lt;/span>
hashmap&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="o">]=&lt;/span>&lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>
hashmap&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;key2&amp;#34;&lt;/span>&lt;span class="o">]=&lt;/span>&lt;span class="s2">&amp;#34;value2&amp;#34;&lt;/span>
&lt;span class="c1">## 获取value&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">hashmap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1">## 所有key&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="p">!hashmap[@]&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1">## 所有value&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">hashmap&lt;/span>&lt;span class="p">[@]&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1">## &lt;/span>
&lt;span class="nv">hashmap&lt;/span>&lt;span class="o">+=(&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;key4&amp;#34;&lt;/span>&lt;span class="o">]=&lt;/span>val4 &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;key5&amp;#34;&lt;/span>&lt;span class="o">]=&lt;/span>val5 &lt;span class="o">)&lt;/span>
&lt;span class="c1">## 删除key&lt;/span>
&lt;span class="nb">unset&lt;/span> host_panes&lt;span class="o">[&lt;/span>&lt;span class="nv">$delhost&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="c1">## 遍历key&lt;/span>
&lt;span class="k">for&lt;/span> key in &lt;span class="si">${&lt;/span>&lt;span class="p">!hashmap[@]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="nv">$key&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">hashmap&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nv">$key&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;span class="c1">## 遍历value&lt;/span>
&lt;span class="k">for&lt;/span> value in &lt;span class="si">${&lt;/span>&lt;span class="nv">hashmap&lt;/span>&lt;span class="p">[@]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="nv">$value&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;span class="c1">## 关联数组作为函数参数传递&lt;/span>
&lt;span class="k">function&lt;/span> print_array &lt;span class="o">{&lt;/span>
&lt;span class="c1"># eval string into a new associative array&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="s2">&amp;#34;declare -A func_assoc_array=&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="p">#*=&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># proof that array was successfully created&lt;/span>
&lt;span class="nb">declare&lt;/span> -p func_assoc_array
&lt;span class="o">}&lt;/span>
&lt;span class="c1"># declare an associative array&lt;/span>
&lt;span class="nb">declare&lt;/span> -A &lt;span class="nv">assoc_array&lt;/span>&lt;span class="o">=([&lt;/span>&lt;span class="s2">&amp;#34;key1&amp;#34;&lt;/span>&lt;span class="o">]=&lt;/span>&lt;span class="s2">&amp;#34;value1&amp;#34;&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;key2&amp;#34;&lt;/span>&lt;span class="o">]=&lt;/span>&lt;span class="s2">&amp;#34;value2&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="c1"># show associative array definition&lt;/span>
&lt;span class="nb">declare&lt;/span> -p assoc_array
&lt;span class="c1"># pass associative array in string form to function&lt;/span>
print_array &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">declare&lt;/span> -p assoc_array&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="引用">引用&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="4-case-语句">4. case 语句&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="k">case&lt;/span> &lt;span class="nv">$arg&lt;/span> in
-a&lt;span class="p">|&lt;/span>--aaa&lt;span class="o">)&lt;/span> do_a &lt;span class="p">;;&lt;/span>
-b&lt;span class="p">|&lt;/span>--bbb&lt;span class="o">)&lt;/span> do_b &lt;span class="p">;;&lt;/span>
c*&lt;span class="o">)&lt;/span> do_c &lt;span class="p">;;&lt;/span>
*&lt;span class="o">)&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;span class="k">esac&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="5-read">5. read&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="k">while&lt;/span> &lt;span class="nb">read&lt;/span> line &lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;a &lt;/span>&lt;span class="nv">$line&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">done&lt;/span> &amp;lt;filename
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="6-逻辑操作符">6. 逻辑操作符&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">[[&lt;/span> exp1 -a exp2 &lt;span class="o">]]&lt;/span> &lt;span class="c1">#逻辑与&lt;/span>
&lt;span class="o">[[&lt;/span> exp1 -o exp2 &lt;span class="o">]]&lt;/span> &lt;span class="c1">#逻辑或&lt;/span>
&lt;span class="o">[[&lt;/span> ! exp &lt;span class="o">]]&lt;/span> &lt;span class="c1">#逻辑非&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="7--和-">7. || 和 &amp;amp;&amp;amp;&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">cmd1 &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> cmd2 &lt;span class="c1"># if cmd1 == true ; then cmd2 ;&lt;/span>
cmd1 &lt;span class="o">||&lt;/span> cmd2 &lt;span class="c1"># if cmd1 == false; then cmd2 ;&lt;/span>
cmd1 &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> cmd2 &lt;span class="o">||&lt;/span> cmd3 &lt;span class="c1"># cmd1 ? cmd2 : cmd3&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="8-字符串操作符">8. 字符串操作符&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">[&lt;/span> &lt;span class="nv">$str1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">$str2&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; str1 == str2 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> &lt;span class="nv">$str1&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="nv">$str2&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; str1 != str2 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> &lt;span class="nv">$str&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; str 非空 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -n &lt;span class="nv">$str&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; str 不为空&amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -z &lt;span class="nv">$str&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; str1 空 &amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="9-整数操作符">9. 整数操作符&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">[&lt;/span> &lt;span class="nv">$n1&lt;/span> -eq &lt;span class="nv">$n2&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; n1 == n2 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> &lt;span class="nv">$n1&lt;/span> -ne &lt;span class="nv">$n2&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; n1 != n2 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> &lt;span class="nv">$n1&lt;/span> -gt &lt;span class="nv">$n2&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; n1 &amp;gt; n2 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> &lt;span class="nv">$n1&lt;/span> -ge &lt;span class="nv">$n2&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; n1 &amp;gt;= n2 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> &lt;span class="nv">$n1&lt;/span> -lt &lt;span class="nv">$n2&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; n1 &amp;lt; n2 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> &lt;span class="nv">$n1&lt;/span> -le &lt;span class="nv">$n2&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; n1 &amp;lt;= n2 &amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="10-文件操作符">10. 文件操作符&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">[&lt;/span> -e &lt;span class="nv">$file&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> 存在 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -s &lt;span class="nv">$file&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> 长度不为0 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -f &lt;span class="nv">$file&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> 普通文件 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -d &lt;span class="nv">$file&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> 目录 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -L &lt;span class="nv">$file&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> 链接文件 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -r &lt;span class="nv">$file&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> 可读 &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -w &lt;span class="nv">$file&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> write &amp;#34;&lt;/span>
&lt;span class="o">[&lt;/span> -x &lt;span class="nv">$file&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; &lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> excute &amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="11-for">11. for&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">### 遍历列表&lt;/span>
&lt;span class="k">for&lt;/span> var in var1 var2 ... varn &lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$var&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="c1">### 遍历数组&lt;/span>
&lt;span class="nv">array&lt;/span>&lt;span class="o">=(&lt;/span> var1 var2 ... varn &lt;span class="o">)&lt;/span>
&lt;span class="k">for&lt;/span> var in &lt;span class="si">${&lt;/span>&lt;span class="nv">array&lt;/span>&lt;span class="p">[@]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$var&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="12-算术运算">12. 算术运算&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nv">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">512&lt;/span>
&lt;span class="nv">cnt&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">8&lt;/span>
&lt;span class="nv">total&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$((&lt;/span>&lt;span class="nv">$size&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nv">$cnt&lt;/span>&lt;span class="k">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="13-seq">13. seq&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ seq LastNum
$ seq FirstNum LastNum
$ seq FirstNum Step LastNum
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="16-echo">16 echo&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">### 输出颜色字符&lt;/span>
$ &lt;span class="nb">echo&lt;/span> -ne &lt;span class="s2">&amp;#34;\E[BACK_GROUND_NUM;FOREGROUND_NAME m&amp;#34;&lt;/span> TEXT
$ &lt;span class="nb">echo&lt;/span> -ne &lt;span class="s2">&amp;#34;\E[0m&amp;#34;&lt;/span>
&lt;span class="c1">### 输出到（x,y）坐标处&lt;/span>
$ &lt;span class="nb">echo&lt;/span> -ne &lt;span class="s2">&amp;#34;\E[x;yH&amp;#34;&amp;#34;TEXT&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="判断">判断&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">[[&lt;/span> -L &lt;span class="s2">&amp;#34;/path/to/link&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;false&amp;#34;&lt;/span>
&lt;span class="o">[[&lt;/span> -F &lt;span class="s2">&amp;#34;/path/to/file&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;false&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="数组">数组&lt;/h2>
&lt;h2 id="常用操作">常用操作&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>批量创建目录&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir -p /data&lt;span class="o">{&lt;/span>0..10&lt;span class="o">}&lt;/span>/hdfs/&lt;span class="o">{&lt;/span>name,data&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>合并行&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sed -n &lt;span class="s1">&amp;#39;/Throught*/,/Test*/p&amp;#39;&lt;/span> /tmp/hdfs_io_test.txt &lt;span class="p">|&lt;/span> awk -F&lt;span class="s2">&amp;#34;: &amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;{print $2}&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed -n &lt;span class="s1">&amp;#39;N;N;N;s/\n/\t/gp&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>输出奇数/偶数行&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">sed -n &lt;span class="s1">&amp;#39;n;p&amp;#39;&lt;/span> /filename &lt;span class="c1">#输出偶数行&lt;/span>
sed -n &lt;span class="s1">&amp;#39;p;n&amp;#39;&lt;/span> /filename &lt;span class="c1">#输出奇数行&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="变量替换">变量替换&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">## 从变量 var 的**开头**删除最短或最长匹配 Pattern 的子串&lt;/span>
&lt;span class="c1">## ${var#Pattern}, ${var##Pattern}&lt;/span>
&lt;span class="nv">var&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;abc:123:456&amp;#34;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">#*:&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1">#123:456&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">##*:&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1">#456&lt;/span>
&lt;span class="c1">## 从变量 $var 的结尾删除最短或最长匹配 $Pattern 的子串&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">%:*&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1">#abc:123&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">var&lt;/span>&lt;span class="p">%%:*&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1">#abc&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">set&lt;/span> -euo pipefail &lt;span class="c1">#pipe fail if any reture not 0&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="模板文件变量替换">模板文件变量替换&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/sh
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1"># render a template configuration file&lt;/span>
&lt;span class="c1"># expand variables + preserve formatting&lt;/span>
render_template&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="s2">&amp;#34;echo \&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>cat &lt;span class="nv">$1&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">\&amp;#34;&amp;#34;&lt;/span> 2&amp;gt;/dev/null
&lt;span class="o">}&lt;/span>
&lt;span class="nv">user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Gregory&amp;#34;&lt;/span>
render_template /path/to/template.txt &amp;gt; path/to/configuration_file
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Bash最佳实践</title><link>https://justice.bj.cn/post/14.language/shell/bash%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/shell/bash%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>&lt;h1 id="bash最佳实践">Bash最佳实践&lt;/h1>
&lt;h2 id="基本规则">基本规则&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="cp">#!/usr/env/bin bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">## 增加TRACE调试&lt;/span>
&lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$TRACE&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">set&lt;/span> -x
&lt;span class="c1">## 快速失败并检查退出状态&lt;/span>
&lt;span class="nb">set&lt;/span> -eo pipefail
&lt;span class="c1">## 判断&lt;/span>
&lt;span class="o">[[&lt;/span> x &amp;gt; 2&lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> x
&lt;span class="c1">## 获取脚本绝对路径&lt;/span>
&lt;span class="nv">ROOT_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">cd&lt;/span> &lt;span class="k">$(&lt;/span>dirname &lt;span class="nv">$BASH_SOURCE&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="c1">## 函数定义&lt;/span>
myfunc&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">declare&lt;/span> &lt;span class="nv">desc&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;description&amp;#34;&lt;/span> &lt;span class="c1">##函数描述&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">## 使用反射提取函数描述&lt;/span>
&lt;span class="nb">eval&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nb">type&lt;/span> FUNCTION_NAME &lt;span class="p">|&lt;/span> grep &lt;span class="s1">&amp;#39;declare desc=&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$desc&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1">## 定参函数&lt;/span>
regular_func&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="c1">## 判断参数个数&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="nv">$#&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="m">3&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Parameter incorrect.&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="m">1&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="nb">declare&lt;/span> &lt;span class="nv">arg1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="nv">arg2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="nv">arg3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$3&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># ...&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">## 变参函数&lt;/span>
variadic_func&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">arg1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">shift&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">arg2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">shift&lt;/span>
&lt;span class="nb">local&lt;/span> &lt;span class="nv">rest&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># ...&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">## 测试退出代码（-q静音输出）&lt;/span>
&lt;span class="k">if&lt;/span> grep -q &lt;span class="s1">&amp;#39;foo&amp;#39;&lt;/span> somefile&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
...
&lt;span class="k">fi&lt;/span>
&lt;span class="c1">## 测试输出（ -m1 限制一个结果）&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>grep -m1 &lt;span class="s1">&amp;#39;foo&amp;#39;&lt;/span> somefile&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
...
&lt;span class="k">fi&lt;/span>
func&lt;span class="o">(){&lt;/span>
&lt;span class="c1">#do sth&lt;/span>
｝
&lt;span class="c1">## 并行化执行func&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="o">((&lt;/span>&lt;span class="nv">i&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="p">;&lt;/span> i&amp;lt;10&lt;span class="p">;&lt;/span> i++&lt;span class="o">))&lt;/span>&lt;span class="k">do&lt;/span>
func &lt;span class="p">&amp;amp;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="nb">wait&lt;/span>
&lt;span class="c1">## 函数调用及返回&lt;/span>
func&lt;span class="o">(){&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;2333&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nv">res&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>func&lt;span class="k">)&lt;/span> &lt;span class="c1">#获取函数返回&lt;/span>
&lt;span class="c1">## 间接引用&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="p">!VAR1&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1">## 错误&lt;/span>
err&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="k">$(&lt;/span>date +&lt;span class="s1">&amp;#39;%Y-%m-%dT%H:%M:%S%z&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">]: &lt;/span>&lt;span class="nv">$*&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">2&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1"># DO use &amp;#39;here document&amp;#39;s&lt;/span>
cat &amp;gt;a_file &lt;span class="s">&amp;lt;&amp;lt;END
&lt;/span>&lt;span class="s">I am an exceptionally long
&lt;/span>&lt;span class="s">string.
&lt;/span>&lt;span class="s">END&lt;/span>
&lt;span class="c1"># Long commands&lt;/span>
command1 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="p">|&lt;/span> command2 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="p">|&lt;/span> command3 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> &lt;span class="p">|&lt;/span> command4
&lt;span class="c1">## 使用main&lt;/span>
func1&lt;span class="o">(){&lt;/span>
&lt;span class="c1">#do sth&lt;/span>
&lt;span class="o">}&lt;/span>
func2&lt;span class="o">(){&lt;/span>
&lt;span class="c1">#do sth&lt;/span>
&lt;span class="o">}&lt;/span>
main&lt;span class="o">(){&lt;/span>
func1
func2
&lt;span class="o">}&lt;/span>
main &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://segmentfault.com/a/1190000018110219">Bash 最佳实践和技巧&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://blog.mythsman.com/post/5d2ab67ff678ba2eb3bd346f/">编写Shell脚本的最佳实践&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://google.github.io/styleguide/shellguide.html">styleguide | Style guides for Google-originated open-source projects&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>hbase 配额(quota)</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E9%A2%9D/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E9%A2%9D/</guid><description>&lt;h1 id="hbase-配额quota">hbase 配额(quota)&lt;/h1>
&lt;h2 id="启用配额">启用配额&lt;/h2>
&lt;p>hbase-site.xml”,增加如下配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;property&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>hbase.quota.enabled&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;value&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/value&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/property&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;property&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>hbase.quota.refresh.period&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;value&amp;gt;&lt;/span>10000&lt;span class="nt">&amp;lt;/value&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/property&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Rust 数据类型</title><link>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>&lt;h1 id="rust-数据类型">Rust 数据类型&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>Rust的数据类型分为&lt;code>标量(scalar)&lt;/code>类型和&lt;code>复合(compound)&lt;/code>类型两类。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>标量类型：表示一个单独的值，包括&lt;code>bool&lt;/code>, &lt;code>numeirc&lt;/code>, &lt;code>char&lt;/code>;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>复合(compound)类型：多个值组合而成&lt;/p>
&lt;ul>
&lt;li>
&lt;p>元组(tuple)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数组(array)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>结构体(struct)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>集合类型&lt;/p>
&lt;ul>
&lt;li>向量&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="标量类型scalar">标量类型(scalar)&lt;/h2>
&lt;h3 id="bool类型">bool类型&lt;/h3>
&lt;ul>
&lt;li>bool类型会占一个字节, 从而允许指针指向这个字节的地址;&lt;/li>
&lt;/ul>
&lt;h3 id="numeric类型">numeric类型&lt;/h3>
&lt;ul>
&lt;li>不允许隐式转换；&lt;/li>
&lt;li>如果需要调用类型的方法, 在有二意的情况下必须显式转换, 例如加后缀: &lt;code>(2.0_f64).sqrt()&lt;/code>；&lt;/li>
&lt;li>&lt;code>bool&lt;/code>, &lt;code>char&lt;/code>, &lt;code>enum&lt;/code> 可以转换为任意整型&lt;code>integer&lt;/code>, 但反向转换不行, 唯一例外是&lt;code>u8&lt;/code>转&lt;code>char&lt;/code>；&lt;/li>
&lt;/ul>
&lt;h3 id="char类型">char类型&lt;/h3>
&lt;ul>
&lt;li>大小32bit&lt;/li>
&lt;li>UNICODE编码&lt;/li>
&lt;li>不允许任何形式的隐式转换&lt;/li>
&lt;li>&lt;code>u8&lt;/code>是允许 &lt;code>as&lt;/code> 转换为char的唯一形式&lt;/li>
&lt;/ul>
&lt;h2 id="复合类型">复合类型&lt;/h2>
&lt;p>复合(compound)类型由多个值组合而成。&lt;/p>
&lt;h3 id="tuple元组">Tuple(元组)&lt;/h3>
&lt;p>元组是一个将多个其他类型的值组合进一个复合类型的主要方式。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>包含在&lt;code>()&lt;/code>中的&lt;code>,&lt;/code>分隔的值列表&lt;code>(T1, T2, ...)&lt;/code>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rust元组长度固定，一旦声明，其长度不会增大或缩小；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rust元组分配在栈空间；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// 元组定义
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tup1&lt;/span>: &lt;span class="p">(&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f64&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">u8&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">6.4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tup2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">6.4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// 元组解构
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tup1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// 索引访问
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">five_hundred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tup2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">six_point_four&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tup2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">one&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tup3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="struct结构体">Struct(结构体)&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="k">struct&lt;/span> &lt;span class="nc">Nil&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//单元结构体
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// 普通struct
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Point&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>: &lt;span class="kt">f32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Retangle&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">topleft&lt;/span>: &lt;span class="nc">Point&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bottomRight&lt;/span>: &lt;span class="nc">point&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// 结构体实例化
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">point&lt;/span>: &lt;span class="nc">Point&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Point&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>: &lt;span class="mf">0.3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>: &lt;span class="mf">0.4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;point coordinates: ({},{})&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">point&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">point&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 访问 point 的字段
&lt;/span>&lt;span class="c1">// let解绑struct
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Point&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">x&lt;/span>: &lt;span class="nc">my_x&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>: &lt;span class="nc">my_y&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">point&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// struct tuple
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">Pair&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">f32&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//struct tuple
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pair&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Pair&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pair contains {:?} and {:?}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pair&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pair&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Pair&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decimal&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pair&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pair contains {:?} and {:?}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decimal&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="集合类型">集合类型&lt;/h2>
&lt;h3 id="array数组">Array(数组)&lt;/h3>
&lt;p>在一块连续空间内存中，存储了一系列的同样类型的数据&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Rust数组的类型为&lt;code>[T; N]&lt;/code>，&lt;code>T&lt;/code>表示元素类型，&lt;code>N&lt;/code>为元素个数，只有当两个数组的T, N都相同时，这两个数组的类型才相同；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rust数组大小固定，一旦声明，其长度不会增大或缩小；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rust数组位于&lt;code>栈&lt;/code>上；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数组索引访问错误会产生panic；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数组只能储存一种类型的数据，无法存储不同类型的数据；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// 数组定义
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>: &lt;span class="p">[&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// let a = [1,&amp;#34;string&amp;#34;]; //错误，数组元素类型应该相同
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;Red&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Yellow&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Blue&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// 数组元素索引访问
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// 数组长度
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="slice切片">Slice(切片)&lt;/h2>
&lt;p>Slice(切片)是对数组一个片段的引用。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Slice继承了Array的length、item等很多的方法；&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arr1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">arr1&lt;/span>&lt;span class="p">[..];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//获取数组arr1所有元素；
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">arr1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//获取数组切片 [2,3]
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="vector向量">Vector(向量)&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>vector是rust中的可变数组；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Vec 在&lt;code>堆&lt;/code>上分配空间；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Vec&lt;T>中的泛型&lt;code>T&lt;/code> 必须是&lt;code>Sized&lt;/code>的；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// vector初始化
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v1&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Vec&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//vec!宏
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">collect&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// vector更新
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// vector元素访问
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//通过vec!宏初始化
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">third&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="kt">i32&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">third&lt;/span>: &lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&amp;amp;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 获得引用
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 获得可变引用
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 获得所有权，注意此时Vec的属主将会被转移！！
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="字符串">字符串&lt;/h2>
&lt;p>Rust字符串包括两种：&lt;code>str&lt;/code>和&lt;code>String&lt;/code>。&lt;/p>
&lt;h3 id="str">str&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>str&lt;/code>由核心语言提供；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>常以引用的形式出现——&lt;code>&amp;amp;str&lt;/code>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>静态不可变；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持转义；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持切片操作；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">//定义
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Hello&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nb">&amp;#39;static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">str&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Hello&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//转义
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;foo
&lt;/span>&lt;span class="s">bar&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;foo\nbar&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="n">assert_eq&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">z&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">w&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="string">String&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>String&lt;/code> 由标准库提供的；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>内存位于堆上；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可增长的、可变的、有所有权；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>String&lt;/code> 和&lt;code>&amp;amp;str&lt;/code> 都是 UTF-8 编码的；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>String&lt;/code> -&amp;gt; &lt;code>&amp;amp;str&lt;/code>非常轻松，几乎没有开销；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>&amp;amp;str&lt;/code> -&amp;gt; &lt;code>String&lt;/code>是需要在堆上请求内存的；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>String不支持通过下标访问，可转换为&amp;amp;str进行；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>
&lt;p>不是char数组, 而是UTF-8&lt;strong>变长&lt;/strong>序列；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ASCII字符占一个字节, 其余字符占多个不定长字节.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>len()&lt;/code>方法返回的是字节长度, 而非字符长度&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>chars().count()&lt;/code>返回字符长度&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个栈上的String变量在内存中表示如下:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">//new: 创建空字符串
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//&amp;amp;str -&amp;gt; String
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;string&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//to_string: 创建非空字符串
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;string2&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//from: 创建非空字符串
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;foo&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;bar&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// String -&amp;gt; &amp;amp;str
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">str1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s5&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_str&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">str2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;*&lt;/span>&lt;span class="n">s5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//String 实现impl Deref&amp;lt;Target=str&amp;gt; for String
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">str2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">s5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">//更新字符串
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">s4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push_str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;bar&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//push_str: 添加字符串
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">s4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push_str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">s5&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 这里是&amp;amp;s2 而不是s2
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">s4&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sc">&amp;#39;l&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//push: 添加字符
&lt;/span>&lt;span class="c1">//连接字符串
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;world!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// let s3 = s1 + &amp;#34;wold&amp;#34;;
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//s1 被移动了，不能继续使用
&lt;/span>&lt;span class="c1">//格式化字符串
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tic&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tac&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;toe&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}-{}-{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//format!宏不会获取参数的所有权
&lt;/span>&lt;span class="c1">// 字符串slice
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;tic&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//&amp;amp;str -&amp;gt; String
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;wold&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="p">[..&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 不要忘了 &amp;amp; 符号
&lt;/span>&lt;span class="c1">// 字符串遍历
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;abcd&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">chars&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// a,b,c,d
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;नमस्ते&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 224 164 168 224 ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//字符串切片
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello word&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hello&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">word&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="hashmap哈希表">HashMap(哈希表)&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>所有实现了&lt;code>Eq&lt;/code>和&lt;code>Hash&lt;/code>的类型都可以作为HashMap的key；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过&lt;code>#[derive(PartialEq, Eq,hash)]&lt;/code>可以快速的实现&lt;code>Eq&lt;/code>和&lt;code>Hash&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">//引入hashmap包
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">collections&lt;/span>::&lt;span class="n">HashMap&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//新建
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">scores&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="n">scores&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">form&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Blue&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="n">scores&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Yellow&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">teams&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Blue&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Yellow&amp;#34;&lt;/span>&lt;span class="p">)];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">initial_scores&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">scores&lt;/span>: &lt;span class="nc">HashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">teams&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">initial_scores&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">()).&lt;/span>&lt;span class="n">collect&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">scores&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">form&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Blue&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//返回Option&amp;lt;T&amp;gt;类型
&lt;/span>&lt;span class="c1">//遍历
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">scores&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// entry
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="n">scores&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">entry&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Yellow&amp;#34;&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="n">or_insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//如果存在就忽略，如果不存在就插入. or_insert 方法会返回这个键的值的一个可变引用（&amp;amp;mut V）
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="hashset">HashSet&lt;/h2>
&lt;ul>
&lt;li>Rust中的HashSet实现非常简单就是&lt;code>HashMap&amp;lt;T,()&amp;gt;&lt;/code>；&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://www.codemore.top/p/ce5ae822-e775-351d-830c-994110faf023/">https://www.codemore.top/p/ce5ae822-e775-351d-830c-994110faf023/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://unpluggedcoder.me/2019/08/15/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BOwnership/">https://unpluggedcoder.me/2019/08/15/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BOwnership/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>Rust代码组织</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%8C%85%E7%AE%A1%E7%90%86/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%8C%85%E7%AE%A1%E7%90%86/</guid><description>&lt;h1 id="rust代码组织">Rust代码组织&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>Rust程序代码组织分为两个层级：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>包(crate)&lt;/strong>：是一个独立的可编译单元；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>模块(mod)&lt;/strong>：是包内代码组织单元；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="包crate">包(Crate)&lt;/h2>
&lt;p>包(&lt;code>crate&lt;/code>)是rust可独立编译的单元，包要点如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>包&lt;code>crate&lt;/code> 由一个或一批文件组成，可独立编译为二进制文件；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>包有两种类型：库(lib)和可执行二进制文件(bin)；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同一个包的文件一般放在同一个目录下；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每个包有一个入口文件：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>二进制包入口为&lt;code>main.rs&lt;/code>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>库的入口文件是&lt;code>lib.rs&lt;/code>;&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>包由&lt;code>Cargo.toml&lt;/code>管理组织；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>引入外部crate：&lt;code>extern crate xxx;&lt;/code>;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>引用未发布的本地crate, 在&lt;code>Cargo.toml&lt;/code> &lt;code>dependencies&lt;/code>中声明；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="p">[&lt;/span>&lt;span class="nx">package&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;crate-name&amp;#34;&lt;/span>
&lt;span class="nx">version&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;0.1.0&amp;#34;&lt;/span>
&lt;span class="nx">authors&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="nx">edition&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;2018&amp;#34;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">dependencies&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c">#xxx&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="nx">features&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c">#default = [&amp;#34;test&amp;#34;]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="模块module">模块（module）&lt;/h2>
&lt;p>模块(&lt;code>mod&lt;/code>)是包内部代码组织单元，模块要点如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>模块由关键字&lt;code>mod&lt;/code>定义：&lt;code>mod XXX { ... } &lt;/code>;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>模块的命名风格是 &lt;code>lower_snake_case&lt;/code>，跟其它的 Rust 的标识符一样；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>模块可以嵌套；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>模块中可以写任何合法的 Rust 代码；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每个包默认实现了一个隐式的 &lt;code>根模块（root module）&lt;/code>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>独立的一个文件就是一个mod, mod名就是文件名，main.rs, lib.rs, mod.rs文件除外；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>mod.rs&lt;/code>的模块名就是其所在目录的名字；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>main.rs&lt;/code>, &lt;code>lib.rs&lt;/code> 的模块名是其目录结构，如：&lt;code>exp/src/main.rs&lt;/code>或 &lt;code>lip/src/lib.rs&lt;/code> ;两者的mod名分别是exp和lip；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文件和文件夹内的mod及其内部定义的函数默认都是private的，除非pub声明公开；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>private元素只有本模块内的元素以及它的子模块可以访问；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>public元素上一层的模块就有权访问它；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果存在与文件同名的目录， 则在该目录下定义的模块都是该文件的子模块；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Rust 的多层模块遵循如下两条规则：&lt;/p>
&lt;ol>
&lt;li>优先查找&lt;code>xxx.rs&lt;/code> 文件
&lt;ol>
&lt;li>&lt;code>main.rs&lt;/code>、&lt;code>lib.rs&lt;/code>、&lt;code>mod.rs&lt;/code>中的&lt;code>mod xxx;&lt;/code> 默认优先查找同级目录下的 &lt;code>xxx.rs&lt;/code> 文件；&lt;/li>
&lt;li>其他文件&lt;code>yyy.rs&lt;/code>中的&lt;code>mod xxx;&lt;/code>默认优先查找同级目录的&lt;code>yyy&lt;/code>目录下的 &lt;code>xxx.rs&lt;/code> 文件；&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>如果 &lt;code>xxx.rs&lt;/code> 不存在，则查找 &lt;code>xxx/mod.rs&lt;/code> 文件，即 &lt;code>xxx&lt;/code> 目录下的 &lt;code>mod.rs&lt;/code> 文件。&lt;/li>
&lt;/ol>
&lt;p>上述两种情况，加载成模块后，效果是相同的。Rust 就凭这两条规则，通过迭代使用，结合 &lt;code>pub&lt;/code> 关键字，实现了对深层目录下模块的加载；&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">src
├── a
│ ├── b
│ │ ├── c
│ │ │ ├── d.rs
│ │ │ └── mod.rs
│ │ └── mod.rs
│ └── mod.rs
└── main.rs
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// a/b/c/d.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">print_ddd&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;i am ddd.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// a/b/c/mod.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mod&lt;/span> &lt;span class="nn">d&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// a/b/mod.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mod&lt;/span> &lt;span class="nn">c&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// a/mod.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mod&lt;/span> &lt;span class="nn">b&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// main.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">mod&lt;/span> &lt;span class="nn">a&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>::&lt;span class="n">b&lt;/span>::&lt;span class="n">c&lt;/span>::&lt;span class="n">d&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">d&lt;/span>::&lt;span class="n">print_ddd&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="模块系统">模块系统&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>单文件rust 中称为&lt;code>mod&lt;/code>，模块的名称就是文件的名称。&lt;/p>
&lt;p>模块内部的函数，只能在模块内部使用，如果要在模块外调用，需要用&lt;code>pub&lt;/code>关键词，显式声明函数可在外部使用。&lt;/p>
&lt;p>使用时，使用mod声明引入，mod name::&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">//file: rustmod/src/functions.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">hello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>: &lt;span class="nb">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, {}!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// 嵌套子模块
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mod&lt;/span> &lt;span class="nn">util&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">hello2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>: &lt;span class="nb">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, {}!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//file: rust/src/main.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">mod&lt;/span> &lt;span class="nn">functions&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//声明模块
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">functions&lt;/span>::&lt;span class="n">hello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;World&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">functions&lt;/span>::&lt;span class="n">util&lt;/span>::&lt;span class="n">hello2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;World&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用mod.rs, mod 会去对应目录下mod.rs中导入该目录下声明的mod&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">//file: rustmod/src/util/functions.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">hello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>: &lt;span class="nb">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, {}!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//file: rustmod/src/util/mod.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mod&lt;/span> &lt;span class="nn">functions&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//file: rustmod/src/main.rs
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">mod&lt;/span> &lt;span class="nn">util&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">util&lt;/span>::&lt;span class="n">functions&lt;/span>::&lt;span class="n">util&lt;/span>::&lt;span class="n">hello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;World&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">println&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;{}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在同一层级不能同时存在文件夹和文件类型的模块，否则会名字冲突。&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>sed</title><link>https://justice.bj.cn/post/14.language/shell/sed/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/shell/sed/</guid><description>&lt;h1 id="sed">sed&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>sed是unix下常用的文本处理工具之一，&lt;/p>
&lt;h3 id="常用法">常用法&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell"> &lt;span class="c1"># 先读取资料、存入模式空间、对其进行编辑、再输出、再用下一行替换模式空间内容&lt;/span>
&lt;span class="c1"># 调试工具sedsed (参数 -d) http://aurelio.net/sedsed/sedsed-1.0&lt;/span>
-n &lt;span class="c1"># 输出由编辑指令控制(取消默认的输出,必须与编辑指令一起配合)&lt;/span>
-i &lt;span class="c1"># 直接对文件操作&lt;/span>
-e &lt;span class="c1"># 多重编辑&lt;/span>
-r &lt;span class="c1"># 正则可不转移特殊字符&lt;/span>
b &lt;span class="c1"># 跳过匹配的行&lt;/span>
p &lt;span class="c1"># 打印&lt;/span>
d &lt;span class="c1"># 删除&lt;/span>
s &lt;span class="c1"># 替换&lt;/span>
g &lt;span class="c1"># 配合s全部替换&lt;/span>
i &lt;span class="c1"># 行前插入&lt;/span>
a &lt;span class="c1"># 行后插入&lt;/span>
r &lt;span class="c1"># 读&lt;/span>
y &lt;span class="c1"># 转换&lt;/span>
q &lt;span class="c1"># 退出&lt;/span>
&lt;span class="p">&amp;amp;&lt;/span> &lt;span class="c1"># 代表查找的串内容&lt;/span>
* &lt;span class="c1"># 任意多个 前驱字符(前导符)&lt;/span>
? &lt;span class="c1"># 0或1个 最小匹配 没加-r参数需转义 \?&lt;/span>
$ &lt;span class="c1"># 最后一行&lt;/span>
.* &lt;span class="c1"># 匹配任意多个字符&lt;/span>
&lt;span class="se">\(&lt;/span>a&lt;span class="se">\)&lt;/span> &lt;span class="c1"># 保存a作为标签1(\1)&lt;/span>
模式空间&lt;span class="o">{&lt;/span>
&lt;span class="c1"># 模式空间(两行两行处理) 模式匹配的范围，一般而言，模式空间是输入文本中某一行，但是可以通过使用N函数把多于一行读入模式空间&lt;/span>
&lt;span class="c1"># 暂存空间里默认存储一个空行&lt;/span>
n &lt;span class="c1"># 读入下一行(覆盖上一行)&lt;/span>
h &lt;span class="c1"># 把模式空间里的行拷贝到暂存空间&lt;/span>
H &lt;span class="c1"># 把模式空间里的行追加到暂存空间&lt;/span>
g &lt;span class="c1"># 用暂存空间的内容替换模式空间的行&lt;/span>
G &lt;span class="c1"># 把暂存空间的内容追加到模式空间的行后&lt;/span>
x &lt;span class="c1"># 将暂存空间的内容于模式空间里的当前行互换&lt;/span>
！ &lt;span class="c1"># 对其前面的要匹配的范围取反&lt;/span>
D &lt;span class="c1"># 删除当前模式空间中直到并包含第一个换行符的所有字符(/.*/匹配模式空间中所有内容，匹配到就执行D,没匹配到就结束D)&lt;/span>
N &lt;span class="c1"># 追加下一个输入行到模式空间后面并在第二者间嵌入一个换行符，改变当前行号码,模式匹配可以延伸跨域这个内嵌换行&lt;/span>
p &lt;span class="c1"># 打印模式空间中的直到并包含第一个换行的所有字符&lt;/span>
&lt;span class="o">}&lt;/span>
标签函数&lt;span class="o">{&lt;/span>
: lable &lt;span class="c1"># 建立命令标记，配合b，t函数使用跳转&lt;/span>
b lable &lt;span class="c1"># 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。&lt;/span>
t labe &lt;span class="c1"># 判断分支，从最后一行开始，条件一旦满足或者T,t命令，将导致分支到带有标号的命令出，或者到脚本末尾。与b函数不同在于t在执行跳转前会先检查其前一个替换命令是否成功，如成功，则执行跳转。&lt;/span>
sed -e &lt;span class="s1">&amp;#39;{:p1;/A/s/A/AA/;/B/s/B/BB/;/[AB]\{10\}/b;b p1;}&amp;#39;&lt;/span> &lt;span class="c1"># 文件内容第一行A第二行B:建立标签p1;两个替换函数(A替换成AA,B替换成BB)当A或者B达到10个以后调用b,返回&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;sd f f [a b c cddd eee]&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;:n;s#\(\[[^ ]*\) *#\1#;tn&amp;#39;&lt;/span> &lt;span class="c1"># 标签函数t使用方法,替换[]里的空格&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;198723124.03&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span>sed -r &lt;span class="s1">&amp;#39;:a;s/([0-9]+)([0-9]{3})/\1,\2/;ta&amp;#39;&lt;/span> &lt;span class="c1"># 每三个字符加一个逗号&lt;/span>
&lt;span class="o">}&lt;/span>
引用外部变量&lt;span class="o">{&lt;/span>
sed -n &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="nv">$a&lt;/span>&lt;span class="s1">&amp;#39;,10p&amp;#39;&lt;/span>
sed -n &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="nv">$a&lt;/span>&lt;span class="s2">&amp;#34;,10p&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
sed 10q &lt;span class="c1"># 显示文件中的前10行 (模拟&amp;#34;head&amp;#34;)&lt;/span>
sed -n &lt;span class="s1">&amp;#39;$=&amp;#39;&lt;/span> &lt;span class="c1"># 计算行数(模拟 &amp;#34;wc -l&amp;#34;)&lt;/span>
sed -n &lt;span class="s1">&amp;#39;5,/^no/p&amp;#39;&lt;/span> &lt;span class="c1"># 打印从第5行到以no开头行之间的所有行&lt;/span>
sed -i &lt;span class="s2">&amp;#34;/^&lt;/span>&lt;span class="nv">$f&lt;/span>&lt;span class="s2">/d&amp;#34;&lt;/span> a 　　 　 &lt;span class="c1"># 删除匹配行&lt;/span>
sed -i &lt;span class="s1">&amp;#39;/aaa/,$d&amp;#39;&lt;/span> &lt;span class="c1"># 删除匹配行到末尾&lt;/span>
sed -i &lt;span class="s2">&amp;#34;s/=/:/&amp;#34;&lt;/span> c &lt;span class="c1"># 直接对文本替换&lt;/span>
sed -i &lt;span class="s2">&amp;#34;/^pearls/s/&lt;/span>$&lt;span class="s2">/j/&amp;#34;&lt;/span> &lt;span class="c1"># 找到pearls开头在行尾加j&lt;/span>
sed &lt;span class="s1">&amp;#39;/1/,/3/p&amp;#39;&lt;/span> file &lt;span class="c1"># 打印1和3之间的行&lt;/span>
sed -n &lt;span class="s1">&amp;#39;1p&amp;#39;&lt;/span> file &lt;span class="c1"># 取出指定行&lt;/span>
sed &lt;span class="s1">&amp;#39;5i\aaa&amp;#39;&lt;/span> file &lt;span class="c1"># 在第5行之前插入行&lt;/span>
sed &lt;span class="s1">&amp;#39;5a\aaa&amp;#39;&lt;/span> file &lt;span class="c1"># 在第5行之后抽入行&lt;/span>
&lt;span class="nb">echo&lt;/span> a&lt;span class="p">|&lt;/span>sed -e &lt;span class="s1">&amp;#39;/a/i\b&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配行前插入一行&lt;/span>
&lt;span class="nb">echo&lt;/span> a&lt;span class="p">|&lt;/span>sed -e &lt;span class="s1">&amp;#39;/a/a\b&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配行后插入一行&lt;/span>
&lt;span class="nb">echo&lt;/span> a&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/a/&amp;amp;\nb/g&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配行后插入一行&lt;/span>
seq 10&lt;span class="p">|&lt;/span> sed -e&lt;span class="o">{&lt;/span>1,3&lt;span class="o">}&lt;/span>&lt;span class="s1">&amp;#39;s/./a/&amp;#39;&lt;/span> &lt;span class="c1"># 匹配1和3行替换&lt;/span>
sed -n &lt;span class="s1">&amp;#39;/regexp/!p&amp;#39;&lt;/span> &lt;span class="c1"># 只显示不匹配正则表达式的行&lt;/span>
sed &lt;span class="s1">&amp;#39;/regexp/d&amp;#39;&lt;/span> &lt;span class="c1"># 只显示不匹配正则表达式的行&lt;/span>
sed &lt;span class="s1">&amp;#39;$!N;s/\n//&amp;#39;&lt;/span> &lt;span class="c1"># 将每两行连接成一行&lt;/span>
sed &lt;span class="s1">&amp;#39;/baz/s/foo/bar/g&amp;#39;&lt;/span> &lt;span class="c1"># 只在行中出现字串&amp;#34;baz&amp;#34;的情况下将&amp;#34;foo&amp;#34;替换成&amp;#34;bar&amp;#34;&lt;/span>
sed &lt;span class="s1">&amp;#39;/baz/!s/foo/bar/g&amp;#39;&lt;/span> &lt;span class="c1"># 将&amp;#34;foo&amp;#34;替换成&amp;#34;bar&amp;#34;，并且只在行中未出现字串&amp;#34;baz&amp;#34;的情况下替换&lt;/span>
&lt;span class="nb">echo&lt;/span> a&lt;span class="p">|&lt;/span>sed -e &lt;span class="s1">&amp;#39;s/a/#&amp;amp;/g&amp;#39;&lt;/span> &lt;span class="c1"># 在a前面加#号&lt;/span>
sed &lt;span class="s1">&amp;#39;s/foo/bar/4&amp;#39;&lt;/span> &lt;span class="c1"># 只替换每一行中的第四个字串&lt;/span>
sed &lt;span class="s1">&amp;#39;s/\(.*\)foo/\1bar/&amp;#39;&lt;/span> &lt;span class="c1"># 替换每行最后一个字符串&lt;/span>
sed &lt;span class="s1">&amp;#39;s/\(.*\)foo\(.*foo\)/\1bar\2/&amp;#39;&lt;/span> &lt;span class="c1"># 替换倒数第二个字符串&lt;/span>
sed &lt;span class="s1">&amp;#39;s/[0-9][0-9]$/&amp;amp;5&amp;#39;&lt;/span> &lt;span class="c1"># 在以[0-9][0-9]结尾的行后加5&lt;/span>
sed -n &lt;span class="s1">&amp;#39; /^eth\|em[01][^:]/{n;p;}&amp;#39;&lt;/span> &lt;span class="c1"># 匹配多个关键字&lt;/span>
sed -n -r &lt;span class="s1">&amp;#39; /eth|em[01][^:]/{n;p;}&amp;#39;&lt;/span> &lt;span class="c1"># 匹配多个关键字&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;1\n2&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span>xargs -i -t sed &lt;span class="s1">&amp;#39;s/^/1/&amp;#39;&lt;/span> &lt;span class="o">{}&lt;/span> &lt;span class="c1"># 同时处理多个文件&lt;/span>
sed &lt;span class="s1">&amp;#39;/west/,/east/s/$/*VACA*/&amp;#39;&lt;/span> &lt;span class="c1"># 修改west和east之间的所有行，在结尾处加*VACA*&lt;/span>
sed &lt;span class="s1">&amp;#39;s/[^1-9]*\([0-9]\+\).*/\1/&amp;#39;&lt;/span> &lt;span class="c1"># 取出第一组数字，并且忽略掉开头的0&lt;/span>
sed -n &lt;span class="s1">&amp;#39;/regexp/{g;1!p;};h&amp;#39;&lt;/span> &lt;span class="c1"># 查找字符串并将匹配行的上一行显示出来，但并不显示匹配行&lt;/span>
sed -n &lt;span class="s1">&amp;#39; /regexp/{n;p;}&amp;#39;&lt;/span> &lt;span class="c1"># 查找字符串并将匹配行的下一行显示出来，但并不显示匹配行&lt;/span>
sed -n &lt;span class="s1">&amp;#39;s/\(mar\)got/\1ianne/p&amp;#39;&lt;/span> &lt;span class="c1"># 保存\(mar\)作为标签1&lt;/span>
sed -n &lt;span class="s1">&amp;#39;s/\([0-9]\+\).*\(t\)/\2\1/p&amp;#39;&lt;/span> &lt;span class="c1"># 保存多个标签&lt;/span>
sed -i -e &lt;span class="s1">&amp;#39;1,3d&amp;#39;&lt;/span> -e &lt;span class="s1">&amp;#39;s/1/2/&amp;#39;&lt;/span> &lt;span class="c1"># 多重编辑(先删除1-3行，在将1替换成2)&lt;/span>
sed -e &lt;span class="s1">&amp;#39;s/@.*//g&amp;#39;&lt;/span> -e &lt;span class="s1">&amp;#39;/^$/d&amp;#39;&lt;/span> &lt;span class="c1"># 删除掉@后面所有字符，和空行&lt;/span>
sed -n -e &lt;span class="s2">&amp;#34;{s/^ *[0-9]*//p}&amp;#34;&lt;/span> &lt;span class="c1"># 打印并删除正则表达式的那部分内容&lt;/span>
&lt;span class="nb">echo&lt;/span> abcd&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;y/bd/BE/&amp;#39;&lt;/span> &lt;span class="c1"># 匹配字符替换&lt;/span>
sed &lt;span class="s1">&amp;#39;/^#/b;y/y/P/&amp;#39;&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="c1"># 非#号开头的行替换字符&lt;/span>
sed &lt;span class="s1">&amp;#39;/suan/r readfile&amp;#39;&lt;/span> &lt;span class="c1"># 找到含suan的行，在后面加上读入的文件内容&lt;/span>
sed -n &lt;span class="s1">&amp;#39;/no/w writefile&amp;#39;&lt;/span> &lt;span class="c1"># 找到含no的行，写入到指定文件中&lt;/span>
sed &lt;span class="s1">&amp;#39;/regex/G&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配式样行之后插入一空行&lt;/span>
sed &lt;span class="s1">&amp;#39;/regex/{x;p;x;G;}&amp;#39;&lt;/span> &lt;span class="c1"># 在匹配式样行之前和之后各插入一空行&lt;/span>
sed &lt;span class="s1">&amp;#39;n;d&amp;#39;&lt;/span> &lt;span class="c1"># 删除所有偶数行&lt;/span>
sed &lt;span class="s1">&amp;#39;G;G&amp;#39;&lt;/span> &lt;span class="c1"># 在每一行后面增加两空行&lt;/span>
sed &lt;span class="s1">&amp;#39;/^$/d;G&amp;#39;&lt;/span> &lt;span class="c1"># 在输出的文本中每一行后面将有且只有一空行&lt;/span>
sed &lt;span class="s1">&amp;#39;n;n;n;n;G;&amp;#39;&lt;/span> &lt;span class="c1"># 在每5行后增加一空白行&lt;/span>
sed -n &lt;span class="s1">&amp;#39;5~5p&amp;#39;&lt;/span> &lt;span class="c1"># 只打印行号为5的倍数&lt;/span>
seq &lt;span class="m">1&lt;/span> 30&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;5~5s/.*/a/&amp;#39;&lt;/span> &lt;span class="c1"># 倍数行执行替换&lt;/span>
sed -n &lt;span class="s1">&amp;#39;3,${p;n;n;n;n;n;n;}&amp;#39;&lt;/span> &lt;span class="c1"># 从第3行开始，每7行显示一次&lt;/span>
sed -n &lt;span class="s1">&amp;#39;h;n;G;p&amp;#39;&lt;/span> &lt;span class="c1"># 奇偶调换&lt;/span>
seq &lt;span class="m">1&lt;/span> 10&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;1!G;h;$!d&amp;#39;&lt;/span> &lt;span class="c1"># 倒叙排列&lt;/span>
ls -l&lt;span class="p">|&lt;/span>sed -n &lt;span class="s1">&amp;#39;/^.rwx.*/p&amp;#39;&lt;/span> &lt;span class="c1"># 查找属主权限为7的文件&lt;/span>
&lt;span class="nv">sed&lt;/span> &lt;span class="o">=&lt;/span> filename &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;N;s/\n/\t/&amp;#39;&lt;/span> &lt;span class="c1"># 为文件中的每一行进行编号(简单的左对齐方式)&lt;/span>
sed &lt;span class="s1">&amp;#39;s/^[ \t]*//&amp;#39;&lt;/span> &lt;span class="c1"># 将每一行前导的&amp;#34;空白字符&amp;#34;(空格，制表符)删除,使之左对齐&lt;/span>
sed &lt;span class="s1">&amp;#39;s/^[ \t]*//;s/[ \t]*$//&amp;#39;&lt;/span> &lt;span class="c1"># 将每一行中的前导和拖尾的空白字符删除&lt;/span>
sed &lt;span class="s1">&amp;#39;/{abc,def\}\/\[111,222]/s/^/00000/&amp;#39;&lt;/span> &lt;span class="c1"># 匹配需要转行的字符: } / [&lt;/span>
&lt;span class="nb">echo&lt;/span> abcd&lt;span class="se">\\&lt;/span>nabcde &lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/\\n/@/g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span>tr &lt;span class="s1">&amp;#39;@&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;\n&amp;#39;&lt;/span> &lt;span class="c1"># 将换行符转换为换行&lt;/span>
cat tmp&lt;span class="p">|&lt;/span>awk &lt;span class="s1">&amp;#39;{print $1}&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span>sort -n&lt;span class="p">|&lt;/span>sed -n &lt;span class="s1">&amp;#39;$p&amp;#39;&lt;/span> &lt;span class="c1"># 取一列最大值&lt;/span>
sed -n &lt;span class="s1">&amp;#39;{s/^[^\/]*//;s/\:.*//;p}&amp;#39;&lt;/span> /etc/passwd &lt;span class="c1"># 取用户家目录(匹配不为/的字符和匹配:到结尾的字符全部删除)&lt;/span>
&lt;span class="nv">sed&lt;/span> &lt;span class="o">=&lt;/span> filename &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;N;s/^/ /; s/ *\(.\{6,\}\)\n/\1 /&amp;#39;&lt;/span> &lt;span class="c1"># 对文件中的所有行编号(行号在左，文字右端对齐)&lt;/span>
/sbin/ifconfig &lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/.*inet addr:\(.*\) Bca.*/\1/g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span>sed -n &lt;span class="s1">&amp;#39;/eth/{n;p}&amp;#39;&lt;/span> &lt;span class="c1"># 取所有IP&lt;/span>
修改keepalive配置剔除后端服务器&lt;span class="o">{&lt;/span>
sed -i &lt;span class="s1">&amp;#39;/real_server.*10.0.1.158.*8888/,+8 s/^/#/&amp;#39;&lt;/span> keepalived.conf
sed -i &lt;span class="s1">&amp;#39;/real_server.*10.0.1.158.*8888/,+8 s/^#//&amp;#39;&lt;/span> keepalived.conf
&lt;span class="o">}&lt;/span>
模仿rev功能&lt;span class="o">{&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="m">123&lt;/span> &lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;/\n/!G;s/\(.\)\(.*\n\)/&amp;amp;\2\1/;//D;s/.//;&amp;#39;&lt;/span>
/&lt;span class="se">\n&lt;/span>/!G&lt;span class="p">;&lt;/span> 　　　　　　&lt;span class="c1"># 没有\n换行符，要执行G,因为保留空间中为空，所以在模式空间追加一空行&lt;/span>
s/&lt;span class="se">\(&lt;/span>.&lt;span class="se">\)\(&lt;/span>.*&lt;span class="se">\n\)&lt;/span>/&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="se">\2\1&lt;/span>/&lt;span class="p">;&lt;/span> &lt;span class="c1"># 标签替换 &amp;amp;\n23\n1$ (关键在于&amp;amp; ,可以让后面//匹配到空行)&lt;/span>
//D&lt;span class="p">;&lt;/span> 　　　　　　&lt;span class="c1"># D 命令会引起循环删除模式空间中的第一部分，如果删除后，模式空间中还有剩余行，则返回 D 之前的命令，重新执行，如果 D 后，模式空间中没有任何内容，则将退出。 //D 匹配空行执行D,如果上句s没有匹配到,//也无法匹配到空行, &amp;#34;//D;&amp;#34;命令结束&lt;/span>
s/.//&lt;span class="p">;&lt;/span> 　　　　　　&lt;span class="c1"># D结束后,删除开头的 \n&lt;/span>
&lt;span class="o">}&lt;/span>
$ sed -n &lt;span class="s1">&amp;#39;m&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;m,n&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;m,$&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;/pattern1/&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;/pattern1/,$&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;/pattern1/,/pattern2/&amp;#39;&lt;/span>p filename.txt
$ sed -n &lt;span class="s1">&amp;#39;m,/pattern/&amp;#39;&lt;/span>p filename.txt
&lt;span class="c1">## 删除首行，尾行&lt;/span>
$ sed -n &lt;span class="s1">&amp;#39;1!P;N;$q;D&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>吃掉 N 个橘子的最少天数</title><link>https://justice.bj.cn/post/leetcode/1553.%E5%90%83%E6%8E%89-n-%E4%B8%AA%E6%A9%98%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/leetcode/1553.%E5%90%83%E6%8E%89-n-%E4%B8%AA%E6%A9%98%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0/</guid><description>&lt;h1 id="吃掉-n-个橘子的最少天数httpsleetcode-cncomproblemsminimum-number-of-days-to-eat-n-orangesdescription-httpsleetcode-cncomproblemsminimum-number-of-days-to-eat-n-orangesdescription">&lt;a href="https://leetcode-cn.com/problems/minimum-number-of-days-to-eat-n-oranges/description/" title="https://leetcode-cn.com/problems/minimum-number-of-days-to-eat-n-oranges/description/">吃掉 N 个橘子的最少天数&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Hard (26.35%)&lt;/td>
&lt;td>96&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Tags&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/Unknown" title="https://leetcode.com/tag/Unknown">&lt;code>Unknown&lt;/code>&lt;/a>&lt;/p>
&lt;p>&lt;strong>Companies&lt;/strong>&lt;/p>
&lt;p>&lt;code>Unknown&lt;/code>&lt;/p>
&lt;p>厨房里总共有 &lt;code>n&lt;/code> 个橘子，你决定每一天选择如下方式之一吃这些橘子：&lt;/p>
&lt;ul>
&lt;li>吃掉一个橘子。&lt;/li>
&lt;li>如果剩余橘子数 &lt;code>n&lt;/code> 能被 2 整除，那么你可以吃掉 &lt;code>n/2&lt;/code> 个橘子。&lt;/li>
&lt;li>如果剩余橘子数 &lt;code>n&lt;/code> 能被 3 整除，那么你可以吃掉 &lt;code>2*(n/3)&lt;/code> 个橘子。&lt;/li>
&lt;/ul>
&lt;p>每天你只能从以上 3 种方案中选择一种方案。&lt;/p>
&lt;p>请你返回吃掉所有 &lt;code>n&lt;/code> 个橘子的最少天数。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 10
输出：4
解释：你总共有 10 个橘子。
第 1 天：吃 1 个橘子，剩余橘子数 10 - 1 = 9。
第 2 天：吃 6 个橘子，剩余橘子数 9 - 2*(9/3) = 9 - 6 = 3。（9 可以被 3 整除）
第 3 天：吃 2 个橘子，剩余橘子数 3 - 2*(3/3) = 3 - 2 = 1。
第 4 天：吃掉最后 1 个橘子，剩余橘子数 1 - 1 = 0。
你需要至少 4 天吃掉 10 个橘子。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 6
输出：3
解释：你总共有 6 个橘子。
第 1 天：吃 3 个橘子，剩余橘子数 6 - 6/2 = 6 - 3 = 3。（6 可以被 2 整除）
第 2 天：吃 2 个橘子，剩余橘子数 3 - 2*(3/3) = 3 - 2 = 1。（3 可以被 3 整除）
第 3 天：吃掉剩余 1 个橘子，剩余橘子数 1 - 1 = 0。
你至少需要 3 天吃掉 6 个橘子。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 1
输出：1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 4：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：n = 56
输出：6
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>1 &amp;lt;= n &amp;lt;= 2*10^9&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://leetcode-cn.com/problems/minimum-number-of-days-to-eat-n-oranges/comments/" title="https://leetcode-cn.com/problems/minimum-number-of-days-to-eat-n-oranges/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode-cn.com/problems/minimum-number-of-days-to-eat-n-oranges/solution/" title="https://leetcode-cn.com/problems/minimum-number-of-days-to-eat-n-oranges/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>该问题明显是一个递归问题，先选择一种吃法，剩下的成为递归子问题；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>吃法：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>0，1，2这三个分别是0，1，2；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当大于2个的时候，每次吃一个显然是最慢的，&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每次最好选择吃1/2或者2/3，选择的依据是剩下的加上当前步骤应该为最小的；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每种选择k必须先将不整除的先一个一个吃掉, 需消耗&lt;code>n%k&lt;/code>天；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>因此总天数: &lt;code>f(n) = min(n%2+1+f(n/2), n%3+1+f(n/3))&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="代码">代码&lt;/h2>
&lt;h3 id="解法一自顶向下递归">解法一：自顶向下递归&lt;/h3>
&lt;p>通过&lt;code>HashMap&lt;/code>剪支，加快结果，时间复杂度$O(log(n))$。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">collections&lt;/span>::&lt;span class="n">HashMap&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">cmp&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">min_days&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">i32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//记录已经吃过的方法
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Self&lt;/span>::&lt;span class="n">eat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">eat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">record&lt;/span>: &lt;span class="kp">&amp;amp;&lt;/span>&lt;span class="nc">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">i32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contains_key&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cmp&lt;/span>::&lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Self&lt;/span>::&lt;span class="n">eat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Self&lt;/span>::&lt;span class="n">eat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">record&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="解法二自底向上">解法二：自底向上&lt;/h3>
&lt;p>通过数组缓存所有结果，时间复杂度：$O(n)$， leetcode超时；&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">min_days&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">i32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">vec&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cmp&lt;/span>::&lt;span class="n">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">%&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>文件系统测试</title><link>https://justice.bj.cn/post/40.storage/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95/</guid><description>&lt;h1 id="文件系统测试">文件系统测试&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback"># 安装mpirun
# wget https://download.open-mpi.org/release/open-mpi/v1.10/openmpi-1.10.7.tar.gz
# ./configure --prefix=/usr/local/openmpi/
# make
# make install
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="openmpi">openmpi&lt;/h3>
&lt;ul>
&lt;li>安装rsh&lt;/li>
&lt;li>安装mpirun&lt;/li>
&lt;/ul>
&lt;h3 id="mdtest">mdtest&lt;/h3>
&lt;h3 id="fio">fio&lt;/h3>
&lt;h3 id="ior">ior&lt;/h3></description></item><item><title>详解 Kubernetes Volume 的实现原理</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s-volume/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s-volume/</guid><description>&lt;h1 id="详解-kubernetes-volume-的实现原理">详解 Kubernetes Volume 的实现原理&lt;/h1>
&lt;p>在 Kubernetes 集群中，虽然无状态的服务非常常见，但是在实际的生产中仍然会需要在集群中部署一些有状态的节点，比如一些存储中间件、消息队列等等。&lt;/p>
&lt;p>然而 Kuberentes 中的每一个容器随时都可能因为某些原因而被删除和重启，容器中的文件也会随着它的删除而丢失，所以我们需要对集群中的某些文件和数据进行『持久化』；除此之外，由于同一个 Pod 中的多个 Container 可能也会有共享文件的需求，比如通过共享文件目录的方式为 nginx 生成需要代理的静态文件，所以我们需要一种方式来解决这两个问题。&lt;/p>
&lt;p>作为 Kubernetes 集群中除了 Pod 和 Service 之外最常见的基本对象，Volume 不仅能够解决 Container 中文件的临时性问题，也能够让同一个 Pod 中的多个 Container 共享文件。&lt;/p>
&lt;blockquote>
&lt;p>这篇文章并不会介绍 Kubernetes 中 Volume 的使用方法和 API，而是会着重介绍 Volume 的工作原理，包含其创建过程、多种 Volume 实现的异同以及如何与云服务提供商进行适配。&lt;/p>
&lt;/blockquote>
&lt;h2 id="概述">概述&lt;/h2>
&lt;p>Kubernetes 中的 Volume 种类非常多，它不仅要支持临时的、易失的磁盘文件，还需要解决持久存储的问题；第一个问题往往都比较容易解决，后者作为持久存储在很多时候都需要与云服务商提供的存储方案打交道，如果是 Kubernetes 中已经支持的存储类型倒是还好，遇到不支持的类型还是比较麻烦的。&lt;/p>
&lt;p>&lt;img src="https://img.draveness.me/2019-01-14-kubernetes-storage.png" alt="kubernetes-storage">&lt;/p>
&lt;p>除了卷和持久卷之外，Kubernetes 还有另外一种更加复杂的概念 - 动态存储供应，它能够允许存储卷按需进行创建，不再需要集群的管理员手动调用云服务商提供的接口或者界面创建新的存储卷。&lt;/p>
&lt;p>集群中的每一个卷在被 Pod 使用时都会经历四个操作，也就是附着（Attach）、挂载（Mount）、卸载（Unmount）和分离（Detach）。&lt;/p>
&lt;p>如果 Pod 中使用的是 EmptyDir、HostPath 这种类型的卷，那么这些卷并不会经历附着和分离的操作，它们只会被挂载和卸载到某一个的 Pod 中，不过如果使用的云服务商提供的存储服务，这些持久卷只有附着到某一个节点之后才可以被挂在到相应的目录下，不过在其他节点使用这些卷时，该存储资源也需要先与当前的节点分离。&lt;/p>
&lt;p>如果 pod&lt;/p>
&lt;h3 id="卷">卷&lt;/h3>
&lt;p>在这一节中提到的卷（Volume）其实是一个比较特定的概念，它并不是一个持久化存储，可能会随着 Pod 的删除而删除，常见的卷就包括 EmptyDir、HostPath、ConfigMap 和 Secret，这些卷与所属的 Pod 具有相同的生命周期，它们可以通过如下的方式挂载到 Pod 下面的某一个目录中：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-container&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">k8s.gcr.io/busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cache-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/cache&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/hostpath&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">config-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/data/configmap&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">special-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/data/secret&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cache-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">emptyDir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{}&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hostpath-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hostPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/data/hostpath&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">config-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">configMap&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">special-config&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">secret-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">secret&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">secretName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">secret-config&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>需要注意的是，当我们将 ConfigMap 或者 Secret 『包装』成卷并挂载到某个目录时，我们其实创建了一些新的 Volume，这些 Volume 并不是 Kubernetes 中的对象，它们只存在于当前 Pod 中，随着 Pod 的删除而删除，但是需要注意的是这些『临时卷』的删除并不会导致相关  &lt;code>ConfigMap&lt;/code>  或者  &lt;code>Secret&lt;/code>  对象的删除。&lt;/p>
&lt;p>从上面我们其实可以看出 Volume 没有办法脱离 Pod 而生存，它与 Pod 拥有完全相同的生命周期，而且它们也不是 Kubernetes 对象，所以 Volume 的主要作用还是用于跨节点或者容器对数据进行同步和共享。&lt;/p>
&lt;h3 id="持久卷">持久卷&lt;/h3>
&lt;p>临时的卷没有办法解决数据持久存储的问题，想要让数据能够持久化，首先就需要将 Pod 和卷的声明周期分离，这也就是引入持久卷  &lt;code>PersistentVolume(PV)&lt;/code>  的原因。我们可以将  &lt;code>PersistentVolume&lt;/code>  理解为集群中资源的一种，它与集群中的节点 Node 有些相似，PV 为 Kubernete 集群提供了一个如何提供并且使用存储的抽象，与它一起被引入的另一个对象就是  &lt;code>PersistentVolumeClaim(PVC)&lt;/code>，这两个对象之间的关系与节点和 Pod 之间的关系差不多：&lt;/p>
&lt;p>&lt;img src="https://img.draveness.me/2019-01-14-kubernetes-pv-and-pvc.png" alt="kubernetes-pv-and-pvc">&lt;/p>
&lt;p>&lt;code>PersistentVolume&lt;/code>  是集群中的一种被管理员分配的存储资源，而  &lt;code>PersistentVolumeClaim&lt;/code>  表示用户对存储资源的申请，它与 Pod 非常相似，PVC 消耗了持久卷资源，而 Pod 消耗了节点上的 CPU 和内存等物理资源。&lt;/p>
&lt;p>因为 PVC 允许用户消耗抽象的存储资源，所以用户需要不同类型、属性和性能的 PV 就是一个比较常见的需求了，在这时我们可以通过  &lt;code>StorageClass&lt;/code>  来提供不同种类的 PV 资源，上层用户就可以直接使用系统管理员提供好的存储类型。&lt;/p>
&lt;h4 id="访问模式">访问模式&lt;/h4>
&lt;p>Kubernetes 中的 PV 提供三种不同的访问模式，分别是  &lt;code>ReadWriteOnce&lt;/code>、&lt;code>ReadOnlyMany&lt;/code>  和  &lt;code>ReadWriteMany&lt;/code>，这三种模式的含义和用法我们可以通过它们的名字推测出来：&lt;/p>
&lt;ul>
&lt;li>&lt;code>ReadWriteOnce&lt;/code>  表示当前卷可以被一个节点使用读写模式挂载；&lt;/li>
&lt;li>&lt;code>ReadOnlyMany&lt;/code>  表示当前卷可以被多个节点使用只读模式挂载；&lt;/li>
&lt;li>&lt;code>ReadWriteMany&lt;/code>  表示当前卷可以被多个节点使用读写模式挂载；&lt;/li>
&lt;/ul>
&lt;p>不同的卷插件对于访问模式其实有着不同的支持，AWS 上的  &lt;code>AWSElasticBlockStore&lt;/code>  和 GCP 上的  &lt;code>GCEPersistentDisk&lt;/code>  就只支持  &lt;code>ReadWriteOnce&lt;/code>  方式的挂载，不能同时挂载到多个节点上，但是  &lt;code>CephFS&lt;/code>  就同时支持这三种访问模式。&lt;/p>
&lt;h4 id="回收策略">回收策略&lt;/h4>
&lt;p>当某个服务使用完某一个卷之后，它们会从 apiserver 中删除 PVC 对象，这时 Kubernetes 就需要对卷进行回收（Reclaim），持久卷也同样包含三种不同的回收策略，这三种回收策略会指导 Kubernetes 选择不同的方式对使用过的卷进行处理。&lt;/p>
&lt;p>&lt;img src="https://img.draveness.me/2019-01-14-kubernetes-pv-reclaiming-strategy.png" alt="kubernetes-pv-reclaiming-strategy">&lt;/p>
&lt;p>第一种回收策略就是保留（Retain）PV 中的数据，如果希望 PV 能够被重新使用，系统管理员需要删除被使用的  &lt;code>PersistentVolume&lt;/code>  对象并手动清除存储和相关存储上的数据。&lt;/p>
&lt;p>另一种常见的回收策略就是删除（Delete），当 PVC 被使用者删除之后，如果当前卷支持删除的回收策略，那么 PV 和相关的存储会被自动删除，如果当前 PV 上的数据确实不再需要，那么将回收策略设置成 Delete 能够节省手动处理的时间并快速释放无用的资源。&lt;/p>
&lt;h4 id="存储供应">存储供应&lt;/h4>
&lt;p>Kubernetes 集群中包含了很多的 PV 资源，而 PV 资源有两种供应的方式，一种是静态的，另一种是动态的，静态存储供应要求集群的管理员预先创建一定数量的 PV，然后使用者通过 PVC 的方式对 PV 资源的使用进行声明和申请；但是当系统管理员创建的 PV 对象不能满足使用者的需求时，就会进入动态存储供应的逻辑，供应的方式是基于集群中的  &lt;code>StorageClass&lt;/code>  对象，当然这种动态供应的方式也可以通过配置进行关闭。&lt;/p>
&lt;h2 id="管理">管理&lt;/h2>
&lt;p>Volume 的创建和管理在 Kubernetes 中主要由卷管理器  &lt;code>VolumeManager&lt;/code>  和  &lt;code>AttachDetachController&lt;/code>  和  &lt;code>PVController&lt;/code>  三个组件负责。其中卷管理器会负责卷的创建和管理的大部分工作，而  &lt;code>AttachDetachController&lt;/code>  主要负责对集群中的卷进行 Attach 和 Detach，&lt;code>PVController&lt;/code>  负责处理持久卷的变更，文章接下来的内容会详细介绍这几部分之间的关系、工作原理以及它们是如何协作的。&lt;/p>
&lt;h3 id="kubelet">kubelet&lt;/h3>
&lt;p>作者在  &lt;a href="https://draveness.me/kubernetes-pod">详解 Kubernetes Pod 的实现原理&lt;/a>  一文中曾简单介绍过 kubelet 和 Pod 的关系，前者会负责后者的创建和管理，kubelet 中与 Pod 相关的信息都是从 apiserver 中获取的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph LR
apiserver-.-&amp;gt;u
u((updates))-.-&amp;gt;kubelet
kubelet-.-&amp;gt;podWorkers
podWorkers-.-&amp;gt;worker1
podWorkers-.-&amp;gt;worker2
style u fill:#fffede,stroke:#ebebb7
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>两者的通信会使用一个  &lt;code>kubetypes.PodUpdate&lt;/code>  类型的 Channel，kubelet 从 apiserver 中获取 Pod 时也会通过字段过滤器  &lt;code>fields.OneTermEqualSelector(api.PodHostField, string(nodeName))&lt;/code>  仅选择被调度到 kubelet 所在节点上的 Pod：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">NewSourceApiserver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="nx">clientset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Interface&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">nodeName&lt;/span> &lt;span class="nx">types&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NodeName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">updates&lt;/span> &lt;span class="kd">chan&lt;/span>&lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">lw&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">cache&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewListWatchFromClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">CoreV1&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nf">RESTClient&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="s">&amp;#34;pods&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">metav1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NamespaceAll&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fields&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">OneTermEqualSelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">api&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PodHostField&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">nodeName&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;span class="nf">newSourceApiserverFromLW&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">lw&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">updates&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>所有对 Pod 的变更最终都会通知给具体的 PodWorker，这些 Worker 协程会调用 kubelet &lt;code>syncPod&lt;/code>  函数完成对 Pod 的同步：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">sequenceDiagram
participant PW as PodWorker
participant K as Kubelet
participant VL as VolumeManager
participant DSOWP as DesiredStateOfWorldPopulator
participant ASOW as ActualStateOfWorld
PW-&amp;gt;&amp;gt;+K: syncPod
K-&amp;gt;&amp;gt;+VL: WaitForAttachAndMount
VL-xDSOWP: ReprocessPod
loop verifyVolumesMounted
VL-&amp;gt;&amp;gt;+ASOW: getUnmountedVolumes
ASOW--&amp;gt;&amp;gt;-VL: Volumes
end
VL--&amp;gt;&amp;gt;-K: Attached/Timeout
K--&amp;gt;&amp;gt;-PW: return
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在一个 100 多行的  &lt;code>syncPod&lt;/code>  方法中，kubelet 会调用  &lt;code>WaitForAttachAndMount&lt;/code>  方法，等待某一个 Pod 中的全部卷已经被成功地挂载：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">kl&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Kubelet&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">syncPod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">o&lt;/span> &lt;span class="nx">syncPodOptions&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">pod&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">o&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pod&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">kl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">podIsTerminated&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pod&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">kl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">volumeManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WaitForAttachAndMount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pod&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个方法会将当前的 Pod 加入需要重新处理卷挂载的队列并在循环中持续调用  &lt;code>verifyVolumesMounted&lt;/code>  方法来比较期望挂载的卷和实际挂载卷的区别，这个循环会等待两者变得完全相同或者超时后才会返回，当前方法的返回一般也意味着 Pod 中的全部卷已经挂载成功了。&lt;/p>
&lt;h3 id="卷管理器">卷管理器&lt;/h3>
&lt;p>当前节点卷的管理就都是由  &lt;code>VolumeManager&lt;/code>  来负责了，在 Kubernetes 集群中的每一个节点（Node）上的 kubelet 启动时都会运行一个  &lt;code>VolumeManager&lt;/code> Goroutine，它会负责在当前节点上的 Pod 和 Volume 发生变动时对 Volume 进行挂载和卸载等操作。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph TD
subgraph Node
VolumeManager-.-&amp;gt;Kubelet
DesiredStateOfWorldPopulator-.-&amp;gt;VolumeManager
Reconciler-.-&amp;gt;VolumeManager
end
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个组件会在运行时启动两个 Goroutine 来管理节点中的卷，其中一个是  &lt;code>DesiredStateOfWorldPopulator&lt;/code>，另一个是  &lt;code>Reconciler&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph LR
VM(VolumeManager)-. run .-&amp;gt;R(Reconciler)
VM-. run .-&amp;gt;DSWP(DesiredStateOfWorldPopulator)
DSWP-. update .-&amp;gt;DSW[DesiredStateOfWorld]
ASW[ActualStateOfWorld]-. get .-&amp;gt;DSWP
DSW-. get .-&amp;gt;R
R-. update .-&amp;gt;ASW
DSWP-. getpods .-&amp;gt;PodManager
style ASW fill:#fffede,stroke:#ebebb7
style DSW fill:#fffede,stroke:#ebebb7
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如上图所示，这里的  &lt;code>DesiredStateOfWorldPopulator&lt;/code>  和  &lt;code>Reconciler&lt;/code>  两个 Goroutine 会通过图中两个的  &lt;code>XXXStateOfWorld&lt;/code>  状态进行通信，&lt;code>DesiredStateOfWorldPopulator&lt;/code>  主要负责从 Kubernetes 节点中获取新的 Pod 对象并更新  &lt;code>DesiredStateOfWorld&lt;/code>  结构；而后者会根据实际状态和当前状态的区别对当前节点的状态进行迁移，也就是通过  &lt;code>DesiredStateOfWorld&lt;/code>  中状态的变更更新  &lt;code>ActualStateOfWorld&lt;/code>  中的内容。&lt;/p>
&lt;p>卷管理器中的两个 Goroutine，一个根据工程师的需求更新节点的期望状态  &lt;code>DesiredStateOfWorld&lt;/code>，另一个 Goroutine 保证节点向期望状态『迁移』，也就是说  &lt;code>DesiredStateOfWorldPopulator&lt;/code>  是卷管理器中的生产者，而  &lt;code>Reconciler&lt;/code>  是消费者，接下来我们会分别介绍这两个 Goroutine 的工作和实现。&lt;/p>
&lt;h4 id="desiredstateofworldpopulator">DesiredStateOfWorldPopulator&lt;/h4>
&lt;p>作为卷管理器中的消费者，&lt;code>DesiredStateOfWorldPopulator&lt;/code>  会根据工程师的请求不断修改当前节点的期望状态，我们可以通过以下的时序图来了解它到底做了哪些工作：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">sequenceDiagram
participant DSOWP as DesiredStateOfWorldPopulator
participant ASOW as ActualStateOfWorld
participant DSOW as DesiredStateOfWorld
participant PM as PodManager
participant VPM as VolumePluginManager
loop populatorLoop
DSOWP-&amp;gt;&amp;gt;+DSOWP: findAndAddNewPods
DSOWP-&amp;gt;&amp;gt;+ASOW: GetMountedVolumes
ASOW--&amp;gt;&amp;gt;-DSOWP: mountedVolume
DSOWP-&amp;gt;&amp;gt;+PM: GetPods
PM--&amp;gt;&amp;gt;-DSOWP: pods
loop Every Pod
DSOWP-&amp;gt;&amp;gt;+DSOW: AddPodToVolume
DSOW-&amp;gt;&amp;gt;+VPM: FindPluginBySpec
VPM--&amp;gt;&amp;gt;-DSOW: volumePlugin
DSOW--&amp;gt;&amp;gt;-DSOWP: volumeName
end
deactivate DSOWP
DSOWP-&amp;gt;&amp;gt;+DSOWP: findAndRemoveDeletedPods
DSOWP-&amp;gt;&amp;gt;+DSOW: GetVolumesToMount
DSOW--&amp;gt;&amp;gt;-DSOWP: volumeToMount
loop Every Volume
DSOWP-&amp;gt;&amp;gt;+PM: GetPodByUID
PM--&amp;gt;&amp;gt;-DSOWP: pods
DSOWP-&amp;gt;&amp;gt;DSOW: DeletePodFromVolume
end
deactivate DSOWP
end
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>整个  &lt;code>DesiredStateOfWorldPopulator&lt;/code>  运行在一个大的循环  &lt;code>populatorLoop&lt;/code>  中，当前循环会通过两个方法  &lt;code>findAndAddNewPods&lt;/code>  和  &lt;code>findAndRemoveDeletedPods&lt;/code>  分别获取节点中被添加的新 Pod 或者已经被删除的老 Pod，获取到 Pod 之后会根据当前的状态修改期望状态：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">dswp&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">desiredStateOfWorldPopulator&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">findAndAddNewPods&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">mountedVolumesForPod&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">volumetypes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UniquePodName&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nx">cache&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">MountedVolume&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">processedVolumesForFSResize&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">sets&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewString&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pod&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">dswp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">podManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetPods&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">dswp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">isPodTerminated&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pod&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">continue&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">dswp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">processPodVolumes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">mountedVolumesForPod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">processedVolumesForFSResize&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就像时序图和代码中所描述的，&lt;code>DesiredStateOfWorldPopulator&lt;/code>  会从  &lt;code>PodManager&lt;/code>  中获取当前节点中的 Pod，随后调用  &lt;code>processPodVolumes&lt;/code>  方法为将所有的 Pod 对象加入  &lt;code>DesiredStateOfWorld&lt;/code>  结构中：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">dswp&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">desiredStateOfWorldPopulator&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">processPodVolumes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pod&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Pod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">mountedVolumesForPod&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">volumetypes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UniquePodName&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nx">cache&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">MountedVolume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">processedVolumesForFSResize&lt;/span> &lt;span class="nx">sets&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">String&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">uniquePodName&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">util&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetUniquePodName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pod&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">dswp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">podPreviouslyProcessed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">uniquePodName&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">mountsMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">devicesMap&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dswp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">makeVolumeMap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pod&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Containers&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">podVolume&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">pod&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Volumes&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">pvc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">volumeSpec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">volumeGidValue&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">dswp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">createVolumeSpec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">podVolume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pod&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pod&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Namespace&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">mountsMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">devicesMap&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">dswp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">desiredStateOfWorld&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">AddPodToVolume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">uniquePodName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">volumeSpec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">podVolume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">volumeGidValue&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">dswp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">markPodProcessed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">uniquePodName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">dswp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">actualStateOfWorld&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">MarkRemountRequired&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">uniquePodName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>findAndAddNewPods&lt;/code>  方法做的主要就是将节点中加入的新 Pod 添加到  &lt;code>DesiredStateOfWorld&lt;/code>  中，而另一个方法  &lt;code>findAndRemoveDeletedPods&lt;/code>  其实也做着类似的事情，它会将已经被删除的节点从  &lt;code>DesiredStateOfWorld&lt;/code>  中剔除，总而言之  &lt;code>DesiredStateOfWorldPopulator&lt;/code>  就是将当前节点的期望状态同步到  &lt;code>DesiredStateOfWorld&lt;/code>  中，等待消费者的处理。&lt;/p>
&lt;h4 id="reconciler">Reconciler&lt;/h4>
&lt;p>&lt;code>VolumeManager&lt;/code>  持有的另一个 Goroutine &lt;code>Reconciler&lt;/code>  会负责对当前节点上的 Volume 进行管理，它在正常运行时会启动  &lt;code>reconcile&lt;/code>  循环，在这个方法中会分三次对当前状态和期望状态不匹配的卷进行卸载、挂载等操作：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">sequenceDiagram
participant R as Reconciler
participant ASOW as ActualStateOfWorld
participant DSOW as DesiredStateOfWorld
participant OE as OperationExecutor
loop reconcile
R-&amp;gt;&amp;gt;+ASOW: GetMountedVolumes
activate R
ASOW--&amp;gt;&amp;gt;-R: MountedVolumes
R-&amp;gt;&amp;gt;DSOW: PodExistsInVolume
R-&amp;gt;&amp;gt;OE: UnmountVolume
deactivate R
R-&amp;gt;&amp;gt;+DSOW: GetVolumesToMount
activate R
DSOW--&amp;gt;&amp;gt;-R: volumeToMount
R-&amp;gt;&amp;gt;ASOW: PodExistsInVolume
R-&amp;gt;&amp;gt;OE: AttachVolume/MountVolume
deactivate R
R-&amp;gt;&amp;gt;+ASOW: GetUnmountedVolumes
activate R
R-&amp;gt;&amp;gt;DSOW: VolumeExists
R-&amp;gt;&amp;gt;OE: UnmountDevice/DetachVolume
deactivate R
end
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在当前的循环中首先会保证应该被卸载但是仍然在节点中存在的卷被卸载，然后将应该挂载的卷挂载到合适的位置，最后将设备与节点分离或者卸载，所有挂载和卸载的操作都是通过  &lt;code>OperationExecutor&lt;/code>  完成的，这个结构体负责调用相应的插件执行操作，我们会在文章的后面展开进行介绍。&lt;/p>
&lt;h3 id="附着分离控制器">附着分离控制器&lt;/h3>
&lt;p>除了  &lt;code>VolumeManager&lt;/code>  之外，另一个负责管理 Kubernetes 卷的组件就是  &lt;code>AttachDetachController&lt;/code>  了，引入这个组件的目的主要是：&lt;/p>
&lt;ol>
&lt;li>让卷的挂载和卸载能够与节点的可用性脱离；
&lt;ul>
&lt;li>一旦节点或者 kubelet 宕机，附着（Attach）在当前节点上的卷应该能够被分离（Detach），分离之后的卷就能够再次附着到其他节点上；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>保证云服务商秘钥的安全；
&lt;ul>
&lt;li>如果每一个 kubelet 都需要触发卷的附着和分离逻辑，那么每一个节点都应该有操作卷的权限，但是这些权限应该只由主节点掌握，这样能够降低秘钥泄露的风险；&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>提高卷附着和分离部分代码的稳定性；&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>这些内容都是在 Kubernetes 官方项目的 GitHub issue &lt;a href="https://github.com/kubernetes/kubernetes/issues/20262">Detailed Design for Volume Attach/Detach Controller #20262&lt;/a>  中讨论的，想要了解  &lt;code>AttachDetachController&lt;/code>  出现的原因可以阅读相关的内容。&lt;/p>
&lt;/blockquote>
&lt;p>每一个  &lt;code>AttachDetachController&lt;/code>  其实也包含  &lt;code>Reconciler&lt;/code>  和  &lt;code>DesiredStateOfWorldPopulator&lt;/code>  两个组件，这两个组件虽然与  &lt;code>VolumeManager&lt;/code>  中的两个组件重名，实现的功能也非常类似，与  &lt;code>VolumeManager&lt;/code>  具有几乎相同的数据流向，但是这两个 Goroutine 是跑在 Kubernetes 主节点中的，所以实现上可能一些差异：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph LR
ADC(AttachDetachController)-. run .-&amp;gt;R(Reconciler)
ADC-. run .-&amp;gt;DSWP(DesiredStateOfWorldPopulator)
DSWP-. update .-&amp;gt;DSW[DesiredStateOfWorld]
ASW[ActualStateOfWorld]-. get .-&amp;gt;DSWP
DSW-. get .-&amp;gt;R
R-. update .-&amp;gt;ASW
DSWP-. getpods .-&amp;gt;PodManager
style ASW fill:#fffede,stroke:#ebebb7
style DSW fill:#fffede,stroke:#ebebb7
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>首先，无论是  &lt;code>Reconciler&lt;/code>  还是  &lt;code>DesiredStateOfWorldPopulator&lt;/code>，它们同步的就不再只是某个节点上 Pod 的信息了，它们需要对整个集群中的 Pod 对象负责，相关数据也不再是通过 apiserver 拉取了，而是使用  &lt;code>podInformer&lt;/code>  在 Pod 对象发生变更时调用相应的方法。&lt;/p>
&lt;h4 id="desiredstateofworldpopulator-1">DesiredStateOfWorldPopulator&lt;/h4>
&lt;p>作为  &lt;code>AttachDetachController&lt;/code>  启动的 Goroutine，&lt;code>DesiredStateOfWorldPopulator&lt;/code>  的主要作用是从当前集群的状态中获取 Pod 对象并修改  &lt;code>DesiredStateOfWorld&lt;/code>  结构，与  &lt;code>VolumeManager&lt;/code>  中的同名 Goroutine 起到相同的作用，作为整个链路的生产者，它们只是在实现上由于处理 Pod 范围的不同有一些区别：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">sequenceDiagram
participant DSOWP as DesiredStateOfWorldPopulator
participant ASOW as ActualStateOfWorld
participant DSOW as DesiredStateOfWorld
participant PL as PodLister
participant VPM as VolumePluginManager
loop populatorLoopFunc
DSOWP-&amp;gt;&amp;gt;+DSOWP: findAndRemoveDeletedPods
DSOWP-&amp;gt;&amp;gt;+DSOW: GetPodToAdd
DSOW--&amp;gt;&amp;gt;-DSOWP: podsToAdd
loop Every Pod
DSOWP-&amp;gt;&amp;gt;+PL: GetPod
alt PodNotFound
PL--&amp;gt;&amp;gt;-DSOWP: return
DSOWP-&amp;gt;&amp;gt;DSOW: DeletePod
else
end
end
deactivate DSOWP
DSOWP-&amp;gt;&amp;gt;+DSOWP: findAndAddActivePods
DSOWP-&amp;gt;&amp;gt;+PL: List
PL--&amp;gt;&amp;gt;-DSOWP: pods
loop Every Pod
DSOWP-&amp;gt;&amp;gt;+VPM: FindAttachablePluginBySpec
VPM--&amp;gt;&amp;gt;-DSOW: attachableVolumePlugin
DSOWP-&amp;gt;&amp;gt;+DSOW: AddPod/DeletePod
DSOW--&amp;gt;&amp;gt;-DSOWP: volumeName
end
deactivate DSOWP
end
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>AttachDetachController&lt;/code>  中的  &lt;code>DesiredStateOfWorldPopulator&lt;/code>  协程就主要会先处理 Pod 的删除逻辑，添加 Pod 的逻辑都是根据  &lt;code>listPodsRetryDuration&lt;/code>  的设置周期性被触发的，所以从这里我们就能看到  &lt;code>AttachDetachController&lt;/code>  其实主要还是处理被删除 Pod 中 Volume 的分离工作，当节点或者 kubelet 宕机时能够将节点中的卷进行分离，保证 Pod 在其他节点重启时不会出现问题。&lt;/p>
&lt;h4 id="reconciler-1">Reconciler&lt;/h4>
&lt;p>另一个用于调节当前状态与期望状态的 Goroutine 在执行它内部的循环时，也会优先处理分离卷的逻辑，后处理附着卷的工作，整个时序图与  &lt;code>VolumeManager&lt;/code>  中的  &lt;code>Reconciler&lt;/code>  非常相似：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">sequenceDiagram
participant R as Reconciler
participant ASOW as ActualStateOfWorld
participant DSOW as DesiredStateOfWorld
participant OE as OperationExecutor
loop reconcile
R-&amp;gt;&amp;gt;+ASOW: GetAttachedVolumes
activate R
ASOW--&amp;gt;&amp;gt;-R: attachedVolumes
R-&amp;gt;&amp;gt;+DSOW: VolumeExists
alt VolumeNotExists
DSOW--&amp;gt;&amp;gt;-R: return
R-&amp;gt;&amp;gt;OE: DetachVolume
deactivate R
else
end
R-&amp;gt;&amp;gt;+DSOW: GetVolumesToAttach
activate R
DSOW--&amp;gt;&amp;gt;-R: volumeToAttach
R-&amp;gt;&amp;gt;+ASOW: VolumeNodeExists
alt VolumeNotExists
ASOW--&amp;gt;&amp;gt;-R: return
R-&amp;gt;&amp;gt;OE: AttachVolume
else
end
deactivate R
end
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里处理的工作其实相对更少一些，&lt;code>Reconciler&lt;/code>  会将期望状态中的卷与实际状态进行比较，然后分离需要分离的卷、附着需要附着的卷，逻辑非常的清晰和简单。&lt;/p>
&lt;h3 id="持久卷控制器">持久卷控制器&lt;/h3>
&lt;p>作为集群中与 PV 和 PVC 打交道的控制器，持久卷控制器同时运行着三个 Goroutine 用于处理相应的逻辑，其中  &lt;code>Resync&lt;/code>  协程负责从 Kubernetes 集群中同步 PV 和 PVC 的信息，而另外两个工作协程主要负消费队列中的任务：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph LR
PVC(PVController)-.-&amp;gt;R(Resync)
PVC-.-&amp;gt;VW(VolumeWorker)
R-. enqueue .-&amp;gt;VQ(VolumeQueue)
R-. enqueue .-&amp;gt;CQ(ClaimQueue)
VQ-. dequeue .-&amp;gt;VW
CQ-. dequeue .-&amp;gt;CW
PVC-.-&amp;gt;CW(ClaimWorker)
style VQ fill:#fffede,stroke:#ebebb7
style CQ fill:#fffede,stroke:#ebebb7
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这两个工作协程主要负责对需要绑定或者解绑的 PV 和 PVC 进行处理，例如，当用户创建了新的 PVC 对象时，从集群中查找该 PVC 选择的 PV 并绑定到当前的 PVC 上。&lt;/p>
&lt;h4 id="volumeworker">VolumeWorker&lt;/h4>
&lt;p>&lt;code>VolumeWorker&lt;/code>  协程中执行的最重要的方法其实就是  &lt;code>syncVolume&lt;/code>，在这个方法中会根据当前 PV 对象的规格对 PV 和 PVC 进行绑定或者解绑：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ctrl&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">PersistentVolumeController&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">syncVolume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolume&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClaimRef&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClaimRef&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="nx">claim&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolumeClaim&lt;/span>
&lt;span class="nx">claimName&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">claimrefToClaimKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClaimRef&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">obj&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">claims&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetByKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claimName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">claim&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolumeClaim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">claim&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UID&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClaimRef&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UID&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">claim&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">claim&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">reclaimVolume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">VolumeName&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">claimQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">claimToClaimKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">VolumeName&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">metav1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HasAnnotation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ObjectMeta&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">annDynamicallyProvisioned&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolumeReclaimPolicy&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolumeReclaimDelete&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">reclaimVolume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">unbindVolume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果当前 PV 没有绑定的 PVC 对象，那么这里的  &lt;code>reclaimVolume&lt;/code>  可能会将当前的 PV 对象根据回收策略将其放回资源池等待重用、回收或者保留；而  &lt;code>unbindVolume&lt;/code>  会删除 PV 与 PVC 之间的关系并更新 apiserver 中保存的 Kubernetes 对象数据。&lt;/p>
&lt;h4 id="claimworker">ClaimWorker&lt;/h4>
&lt;p>&lt;code>ClaimWorker&lt;/code>  就是控制器用来决定如何处理一个 PVC 对象的方法了，它会在一个 PVC 对象被创建、更新或者同步时被触发，&lt;code>syncClaim&lt;/code>  会根据当前对象中的注解决定调用  &lt;code>syncUnboundClaim&lt;/code>  或者  &lt;code>syncBoundClaim&lt;/code>  方法来处理相应的逻辑：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ctrl&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">PersistentVolumeController&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">syncClaim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolumeClaim&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">!&lt;/span>&lt;span class="nx">metav1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">HasAnnotation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ObjectMeta&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">annBindCompleted&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">syncUnboundClaim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">syncBoundClaim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>syncUnboundClaim&lt;/code>  会处理绑定没有结束的 PVC 对象，如果当前 PVC 对象没有对应合适的 PV 存在，那么就会调用  &lt;code>provisionClaim&lt;/code>  尝试从集群中获取新的 PV 供应，如果能够找到 PV 对象，就会通过  &lt;code>bind&lt;/code>  方法将两者绑定：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ctrl&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">PersistentVolumeController&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">syncUnboundClaim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolumeClaim&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">VolumeName&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">delayBinding&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">shouldDelayBinding&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">volume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">volumes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">findBestMatchForClaim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">delayBinding&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">volume&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">switch&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">delayBinding&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">v1helper&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetPersistentVolumeClaimClass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">provisionClaim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">obj&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">found&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">volumes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">store&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetByKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">VolumeName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">found&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">volume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolume&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClaimRef&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nf">isVolumeBoundToClaim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>绑定的过程其实就是将 PV 和 PVC 之间建立起新的关系，更新 Spec 中的数据让两者能够通过引用 Ref 找到另一个对象并将更新后的 Kubernetes 对象存储到 apiserver 中。&lt;/p>
&lt;p>另一个用于绑定 PV 和 PVC 对象的方法就是  &lt;code>syncBoundClaim&lt;/code>  了，相比于  &lt;code>syncUnboundClaim&lt;/code>  方法，该方法的实现更为简单，直接从缓存中尝试获取对应的 PV 对象：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ctrl&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">PersistentVolumeController&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">syncBoundClaim&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolumeClaim&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">VolumeName&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">obj&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">found&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">volumes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">store&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetByKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">claim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">VolumeName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">found&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">volume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PersistentVolume&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClaimRef&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ClaimRef&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">UID&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">claim&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果找到了 PV 对象并且该对象没有绑定的 PVC 或者当前 PV 和 PVC 已经存在了引用就会调用  &lt;code>bind&lt;/code>  方法对两者进行绑定。&lt;/p>
&lt;h4 id="小结">小结&lt;/h4>
&lt;p>无论是  &lt;code>VolumeWorker&lt;/code>  还是  &lt;code>ClaimWorker&lt;/code>  最终都可能会通过 apiserver 更新集群中 etcd 的数据，当然它们也会调用一些底层的插件获取新的存储供应、删除或者重用一些持久卷，我们会在下面介绍插件的工作原理。&lt;/p>
&lt;h2 id="插件">插件&lt;/h2>
&lt;p>Kubernetes 中的所有对卷的操作最终基本都是通过  &lt;code>OperationExecutor&lt;/code>  来完成的，这个组件包含了用于附着、挂载、卸载和分离几个常见的操作以及对设备进行操作的一些方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">OperationExecutor&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">AttachVolume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volumeToAttach&lt;/span> &lt;span class="nx">VolumeToAttach&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">actualStateOfWorld&lt;/span> &lt;span class="nx">ActualStateOfWorldAttacherUpdater&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;span class="nf">DetachVolume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volumeToDetach&lt;/span> &lt;span class="nx">AttachedVolume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">verifySafeToDetach&lt;/span> &lt;span class="kt">bool&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">actualStateOfWorld&lt;/span> &lt;span class="nx">ActualStateOfWorldAttacherUpdater&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;span class="nf">MountVolume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">waitForAttachTimeout&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Duration&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">volumeToMount&lt;/span> &lt;span class="nx">VolumeToMount&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">actualStateOfWorld&lt;/span> &lt;span class="nx">ActualStateOfWorldMounterUpdater&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">isRemount&lt;/span> &lt;span class="kt">bool&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;span class="nf">UnmountVolume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">volumeToUnmount&lt;/span> &lt;span class="nx">MountedVolume&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">actualStateOfWorld&lt;/span> &lt;span class="nx">ActualStateOfWorldMounterUpdater&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">podsDir&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>实现  &lt;code>OperationExecutor&lt;/code>  接口的私有结构体会通过  &lt;code>OperatorGenerator&lt;/code>  来生成一个用于挂载和卸载卷的方法，并将这个方法包装在一个  &lt;code>GeneratedOperations&lt;/code>  结构中，在这之后操作执行器会启动一个新的 Goroutine 用于执行生成好的方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">graph LR
OE(OperationExexutor)-. 1. 获取相关方法 .-&amp;gt;OG(OperationGenerator)
OG-. 2. 根据 Spec 获取插件 .-&amp;gt;VM(VolumePluginManager)
VM-. 3. 返回 VolumePlugin .-&amp;gt;OG
OG-. 4. 构建方法 .-&amp;gt;OG
OG-. 5. 生成一个 Operation 结构 .-&amp;gt;OE
OE-. 6. 运行 Operation .-&amp;gt;NPO(NestedPendingOperations)
NPO-. 7. 启动 Goroutine 运行生成的方法 .-&amp;gt;Goroutine
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>VolumePluginManager&lt;/code>  和  &lt;code>VolumePlugin&lt;/code>  这两个组件在整个流程中帮我们屏蔽了底层不同类型卷的实现差异，我们能直接在上层调用完全相同的接口，剩下的逻辑都由底层的插件来负责。&lt;/p>
&lt;p>Kubernetes 提供了插件的概念，通过  &lt;code>Volume&lt;/code>  和  &lt;code>Mounter&lt;/code>  两个接口支持卷类型的扩展，作为存储提供商或者不同类型的文件系统，我们都可以通过实现以上的两个接口成为 Kubernetes 存储系统中一个新的存储类型：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">VolumePlugin&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">Init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">host&lt;/span> &lt;span class="nx">VolumeHost&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;span class="nf">GetPluginName&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;span class="nf">GetVolumeName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">spec&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">NewMounter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">spec&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Spec&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">podRef&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">v1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Pod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">opts&lt;/span> &lt;span class="nx">VolumeOptions&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">Mounter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">Mounter&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Volume&lt;/span>
&lt;span class="nf">CanMount&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;span class="nf">SetUp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fsGroup&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kt">int64&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;span class="nf">SetUpAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fsGroup&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kt">int64&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span>
&lt;span class="nf">GetAttributes&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nx">Attributes&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在这一节中我们将介绍几种不同卷插件的实现，包括最常见的 EmptyDir、ConfigMap、Secret 和 Google 云上的 GCEPersistentDisk，这一节会简单介绍不同卷插件的实现方式，想要了解详细实现的读者可以阅读相关的源代码。&lt;/p>
&lt;h3 id="emptydir">EmptyDir&lt;/h3>
&lt;p>EmptyDir 是 Kubernetes 中最简单的卷了，当我们为一个 Pod 设置一个 EmptyDir 类型的卷时，其实就是在当前 Pod 对应的目录创建了一个空的文件夹，这个文件夹会随着 Pod 的删除而删除。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ed&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">emptyDir&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">SetUpAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fsGroup&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kt">int64&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ed&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">setupDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">volume&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetVolumeOwnership&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fsGroup&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">volumeutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetReady&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ed&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">getMetaDir&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ed&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">emptyDir&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">setupDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">MkdirAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">perm&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">err&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>SetUpAt&lt;/code>  方法其实就实现了对这种类型卷的创建工作，每当 Pod 被分配到了某个节点上，对应的文件目录就会通过  &lt;code>MkdirAl&lt;/code>  方法创建，如果使用者配置了 medium 字段，也会选择使用相应的文件系统挂载到当前目录上，例如：tmpfs、nodev 等。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-pd&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">k8s.gcr.io/test-webserver&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-container&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/cache&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cache-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cache-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">emptyDir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{}&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们经常会使用 EmptyDir 类型的卷在多个容器之间共享文件、充当缓存或者保留一些临时的日志，总而言之，这是一种经常被使用的卷类型。&lt;/p>
&lt;h3 id="configmap-和-secret">ConfigMap 和 Secret&lt;/h3>
&lt;p>另一种比较常见的卷就是 ConfigMap 了，首先，ConfigMap 本身就是 Kubernetes 中常见的对象了，其中的  &lt;code>data&lt;/code>  就是一个存储了从文件名到文件内容的字段，这里的 ConfigMap 对象被挂载到文件目录时就会创建一个名为  &lt;code>redis-config&lt;/code>  的文件，然后将文件内容写入该文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ConfigMap&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">data&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">redis-config&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="sd"> &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">maxmemory 2mb maxmemory-policy allkeys-lru&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在对 ConfigMap 类型的卷进行挂载时，总共需要完成三部分工作，首先从 apiserver 中获取当前 ConfigMap 对象，然后根据当前的 ConfigMap 生成一个从文件名到文件内容的键值对，最后构造一个 Writer 并执行  &lt;code>Write&lt;/code>  方法写入内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">configMapVolumeMounter&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">SetUpAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fsGroup&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="kt">int64&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">configMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">getConfigMap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pod&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Namespace&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">totalBytes&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">totalBytes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">configMap&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">payload&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">MakePayload&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Items&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">configMap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">source&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">DefaultMode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">writerContext&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;pod %v/%v volume %v&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pod&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Namespace&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pod&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">volName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">writer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">volumeutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewAtomicWriter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">writerContext&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">payload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在涉及挂载的函数几个中，作者想要着重介绍的也就是在底层直接与文件系统打交道的  &lt;code>writePayloadToDir&lt;/code>  方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">w&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">AtomicWriter&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">writePayloadToDir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">payload&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nx">FileProjection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dir&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">error&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">userVisiblePath&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fileProjection&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">payload&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">content&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">fileProjection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Data&lt;/span>
&lt;span class="nx">mode&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FileMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fileProjection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">fullPath&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">userVisiblePath&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">baseDir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">filepath&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fullPath&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">MkdirAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">baseDir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ModePerm&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">ioutil&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WriteFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fullPath&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">content&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Chmod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fullPath&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">mode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个方法使用了  &lt;code>os&lt;/code>  包提供的接口完成了拼接文件名、创建相应文件目录、写入文件并且修改文件模式的工作，将 ConfigMap &lt;code>data&lt;/code>  中的数据映射到了一个文件夹中，达到了让 Pod 中的容器可以直接通过文件系统获取内容的目的。&lt;/p>
&lt;p>对于另一个非常常见的卷类型 Secret，Kubernetes 其实也做了几乎完全相同的工作，也是先获取 Secret 对象，然后构建最终写入到文件的键值对，最后初始化一个 Writer 并调用它的  &lt;code>Write&lt;/code>  方法，从这里我们也能看出在卷插件这一层对于 ConfigMap 和 Secret 的处理几乎完全相同，并没有出现需要对 Secret 对象中的内容进行解密的工作。&lt;/p>
&lt;h3 id="gcepersistentdisk">GCEPersistentDisk&lt;/h3>
&lt;p>最后一个要介绍的卷与上面的几种都非常的不同，它在底层使用的是云服务商提供的网络磁盘，想要在一个节点上使用云磁盘其实总共需要两个步骤，首先是要将云磁盘附着到当前的节点上，这部分的工作其实就是由  &lt;code>gcePersistentDiskAttacher&lt;/code>  完成的，每当调用  &lt;code>AttachDisk&lt;/code>  方法时，最终都会执行云服务商提供的接口，将磁盘附着到相应的节点实例上：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">sequenceDiagram
participant GPDA as gcePersistentDiskAttacher
participant C as Cloud
participant GCESM as gceServiceManager
participant I as GCEInstances
GPDA-&amp;gt;&amp;gt;+C: DiskIsAttached
alt NotAttached
C--&amp;gt;&amp;gt;-GPDA: return NotAttached
GPDA-&amp;gt;&amp;gt;+C: AttachDisk
C-&amp;gt;&amp;gt;+GCESM: AttachDiskOnCloudProvider
GCESM-&amp;gt;&amp;gt;+I: AttachDisk
I--&amp;gt;&amp;gt;-GCESM: return
GCESM--&amp;gt;&amp;gt;-C: return
C--&amp;gt;&amp;gt;-GPDA: return
else
end
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在方法的的最后会将该请求包装成一个 HTTP 的方法调用向  &lt;code>https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/instances/{resourceId}/attachDisk&lt;/code>  链接发出一个 POST 请求，这个请求会将某个 GCE 上的磁盘附着到目标实例上，详细的内容可以阅读  &lt;a href="https://cloud.google.com/compute/docs/reference/rest/v1/instances/attachDisk">相关文档&lt;/a>。&lt;/p>
&lt;p>一旦当前的磁盘被附着到了当前节点上，我们就能跟使用其他的插件一样，把磁盘挂载到某个目录上，完成从附着到挂载的全部操作。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>Volume 和存储系统是 Kubernetes 非常重要的一部分，它能够帮助我们在多个容器之间共享文件，同时也能够为集群提供持久存储的功能，假如 Kubernetes 没有用于持久存储的对象，我们也很难在集群中运行有状态的服务，例如：消息队列、分布式存储等。&lt;/p>
&lt;p>对于刚刚使用 Kubernetes 的开发者来说，Volume、PV 和 PVC 确实是比较难以理解的概念，但是这却是深入使用 Kubernetes 必须要了解和掌握的，希望这篇文章能够帮助各位读者更好地理解存储系统底层的实现原理。&lt;/p>
&lt;h2 id="相关文章">相关文章&lt;/h2>
&lt;p>{% include related/distributed-system.md %}&lt;/p>
&lt;h2 id="referenece">Referenece&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/storage/volumes/">Volumes · Kubernetes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/kubernetes/kubernetes/issues/20262">Detailed Design for Volume Attach/Detach Controller #20262&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/kubernetes/kubernetes/issues/21931">Detailed Design for Volume Mount/Unmount Redesign #21931&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/kubernetes/kubernetes/issues/18333">Kubernetes Volume System Redesign Proposal #18333&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/container-storage-interface/spec/blob/master/spec.md">Container Storage Interface (CSI)&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Golang测试</title><link>https://justice.bj.cn/post/14.language/golang/golang%E6%B5%8B%E8%AF%95/</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E6%B5%8B%E8%AF%95/</guid><description>&lt;h1 id="golang测试">Golang测试&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h3 id="单元测试">单元测试&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">## 执行所有的单元测试&lt;/span>
$ go &lt;span class="nb">test&lt;/span> -v *.go
&lt;span class="c1">## 执行指定的单元测试用例 &lt;/span>
$ go &lt;span class="nb">test&lt;/span> -v *.go -test.run TestFuncName
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2></description></item><item><title>Rust错误处理</title><link>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid><description>&lt;h1 id="rust错误处理">Rust错误处理&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>Rust 将错误两个主要类别：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>可恢复错误（recoverable）&lt;/strong> ： 由 &lt;code>Result&amp;lt;T, E&amp;gt;&lt;/code> 表示，代表向用户报告错误和重试操作是合理的情况，比如未找到文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>不可恢复错误（unrecoverable）&lt;/strong>： 由&lt;code>panic！&lt;/code>处理，通常是 bug 的同义词，比如尝试访问超过数组结尾的位置。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Rust 并没有异常。&lt;/p>
&lt;h2 id="optiont">Option&lt;T>&lt;/h2>
&lt;p>&lt;code>Option&amp;lt;T&amp;gt;&lt;/code>是 Rust 的系统类型，用来表示值不存在的可能&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// option
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">enum&lt;/span> &lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">None&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//选项为空
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//选项不为空，存在一个T
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// unwrap: 当遇到None值时会panic
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">unwrap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">T&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Option&lt;/span>::&lt;span class="nb">Some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Option&lt;/span>::&lt;span class="nb">None&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">panic&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;unwrap option None&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">unwrap_or&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">option&lt;/span>: &lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">default&lt;/span>: &lt;span class="nc">T&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nc">T&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">option&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">None&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">and_then&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">F&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">option&lt;/span>: &lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">f&lt;/span>: &lt;span class="nc">F&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">F&lt;/span>: &lt;span class="nb">FnOnce&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">option&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">None&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">None&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">ok_or&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">option&lt;/span>: &lt;span class="nb">Option&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>: &lt;span class="nc">E&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">match&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">option&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Some&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Ok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">None&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Err&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="resultt-e">Result&amp;lt;T, E&amp;gt;&lt;/h2>
&lt;p>&lt;code>Result&lt;/code>是&lt;code>Option&lt;/code>的更通用的版本，它解释了结果错误的原因.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="k">enum&lt;/span> &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Ok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Err&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">E&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>Result&lt;/code> 枚举和其成员也被导入到了 prelude 中，所以就不需要 &lt;code>Ok&lt;/code> 和 &lt;code>Err&lt;/code> 之前指定 &lt;code>Result::&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">//unwrap: 如果 Result 值是 Ok，返回 Ok 中的值，如果是 Err会自动调用 panic!。
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>::&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello.txt&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">unwrap&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">//expect: 可以在参数中自定义要显示的错误信息，并在自动调用 panic! 时，显示在错误信息中，有助于追踪 panic 的根源。
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>::&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello.txt&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to open hello.txt&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="panic">panic!&lt;/h2>
&lt;ul>
&lt;li>&lt;code>panic!&lt;/code> 宏可用于产生一个 panic （恐慌），并开始回退（unwind）它的栈;&lt;/li>
&lt;/ul>
&lt;h2 id="heading">?&lt;/h2>
&lt;p>&lt;code>?&lt;/code> 运算符用在返回值为 &lt;code>Result&lt;/code> 的表达式后面，它等同于这样一个匹配 表达式：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>Err(err)&lt;/code> 分支展开成提前返回的 &lt;code>return Err(err)&lt;/code>;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>Ok(ok)&lt;/code> 分支展开成 &lt;code>ok&lt;/code> 表达式;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>?&lt;/code> 之后直接使用链式方法调用来进一步缩短代码:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">io&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">io&lt;/span>::&lt;span class="n">Read&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="n">fs&lt;/span>::&lt;span class="n">File&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">read_username_from_file&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">Result&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nb">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">io&lt;/span>::&lt;span class="n">Error&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">String&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>::&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello.txt&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">read_to_string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//? 只能用于返回值类型为 Result 的函数。
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Ok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>ChubaoFS 读写分析</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E8%AF%BB%E5%86%99%E5%88%86%E6%9E%90/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E8%AF%BB%E5%86%99%E5%88%86%E6%9E%90/</guid><description>&lt;h1 id="chubaofs-读写分析">ChubaoFS 读写分析&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>ExtentClient&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ExtentHandler&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="sdk">sdk&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">ExtentClient&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">streamers&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">uint64&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">Streamer&lt;/span>
&lt;span class="nx">dataWrapper&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Wrapper&lt;/span>
&lt;span class="c1">//...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">Streamer&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">extents&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">ExtentCache&lt;/span>
&lt;span class="nx">handler&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">ExtentHandler&lt;/span>
&lt;span class="nx">dirtylist&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">DirtyExtentList&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">ExtentHandler&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="write">Write&lt;/h2>
&lt;p>chubaofs 客户端写操作由&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// sdk 写数据入口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ec&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">ExtentClient&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">inode&lt;/span> &lt;span class="kt">uint64&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">offset&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">direct&lt;/span> &lt;span class="kt">bool&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">s&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetStreamer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">inode&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">once&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">func&lt;/span>&lt;span class="p">(){&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetExtents&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">IssueWriteRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">offset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">direct&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//streamer处理写请求, 获取一个写请求，然后将请求放入s.request 通道
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Streamer&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">offset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">size&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">direct&lt;/span> &lt;span class="kt">bool&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 准备写请求
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">requests&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">extents&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">PrepareWriteRequests&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">offset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">size&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">//...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">req&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">requests&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">doWrite&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// streamer 通过extenthandler 将数据写入到datanode中
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Streamer&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">doWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">offset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">size&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">direct&lt;/span> &lt;span class="kt">bool&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// set storeMode
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">storeMode&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">tailOff&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">tinySizeLimit&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">tailOff&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">tinySizeLimit&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">NormalExtentType&lt;/span>
&lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">proto&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">TinyExtentType&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}(&lt;/span>&lt;span class="nx">offset&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">tinySizeLimit&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">//重试写入
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nx">MaxNewHandlerRetry&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">ek&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">offset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">size&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">direct&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 写成功
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nx">ek&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 写
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">eh&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">ExtentHandler&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">write&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="nx">total&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nx">size&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">eh&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">flushPacket&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// eh.request &amp;lt;- packet
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 发送协程,
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">eh&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">ExtentHandler&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">sender&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">select&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">packet&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nx">eh&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 接收协程
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">eh&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">ExtentHandler&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">receiver&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">select&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">reply&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nx">eh&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">re&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Golang BTree</title><link>https://justice.bj.cn/post/14.language/golang/golang-btree.go/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang-btree.go/</guid><description>&lt;h1 id="golang-btree">Golang BTree&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Golang基础</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%9F%BA%E7%A1%80/</guid><description>&lt;h1 id="golang基础">Golang基础&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="初始化">初始化&lt;/h2>
&lt;p>&lt;img src="https://gitee.com/justice/gitnote-img-bed/raw/master/2020/11/22-13-51-07-image-20190412160342216.png" alt="image-20190412160342216">&lt;/p>
&lt;p>规则：&lt;/p>
&lt;ul>
&lt;li>每个package 只会被初始化一次；&lt;/li>
&lt;li>同一个 package，不同文件是按照文件名的顺序来初始化；&lt;/li>
&lt;li>不能循环 import , 例如：A import B ,然后又 B import A；&lt;/li>
&lt;li>任何 package , 都可以存在一个以上的 init() , 执行顺序由上而下；&lt;/li>
&lt;li>main() 只能存在于 package main；&lt;/li>
&lt;li>属于 package main 的文件 , 都将会初始化；&lt;/li>
&lt;/ul>
&lt;h2 id="变量">变量&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>golang变量声明即初始化；&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">//声明
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="nx">VAR_TYPE&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="基础语法">基础语法&lt;/h2>
&lt;h3 id="类型别名">类型别名&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>类型别名是go 1.9中增加的语法，用于给已有类型设置一个另外的名称；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>语法：&lt;code>type TypeAllias = OldType&lt;/code>;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>类型别名除了名称和原类型不同外，其他完全一样，可以直接用在原类型用的所有属性，无须转换；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>类型别名不允许循环定义；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>大写字母开头的别名支持导出；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// 类型别名
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">identifier&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">Type&lt;/span>
&lt;span class="c1">// 类型定义
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">newType&lt;/span> &lt;span class="nx">Type&lt;/span>
&lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="kt">byte&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kt">uint8&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="kt">rune&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kt">int32&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="类型嵌入">类型嵌入&lt;/h3>
&lt;p>golang中的类型不支持继承，但提供了嵌合机制；&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Wheel&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Size&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">Engine&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Power&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="c1">// 功率
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">Type&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="c1">// 类型
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="kd">type&lt;/span> &lt;span class="nx">Car&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">Wheel&lt;/span>
&lt;span class="nx">Engine&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">c&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">Car&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Wheel&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">Wheel&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">18&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">Engine&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">Engine&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">Type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;1.4T&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">Power&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">143&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%+v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="基本数据结构">基本数据结构&lt;/h2>
&lt;h3 id="数组array">数组(array)&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">// 初始化
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">arr1&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;span class="nx">arr2&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">arr3&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">arr4&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">//指针数组
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">arr5&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;span class="o">*&lt;/span>&lt;span class="nx">arr5&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;span class="c1">//数组复制: 元素个数和类型相同时才能复制
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">//多维数组
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">arr10&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;span class="nx">arr10&lt;/span> &lt;span class="o">:=&lt;/span>
&lt;span class="nx">array&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{{&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">21&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">31&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">41&lt;/span>&lt;span class="p">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="切片slice">切片(slice)&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="c1">//初始化
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">slice1&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="c1">//nil slice
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">slice2&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="nx">slice3&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">{}&lt;/span> &lt;span class="c1">//空切片
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="nx">slice4&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">([]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="映射map">映射(map)&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="nx">dict1&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">dict2&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;Red&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Yellow&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Blue&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="gc">gc&lt;/h3>
&lt;h3 id="goroutine">goroutine&lt;/h3>
&lt;h3 id="channel">channel&lt;/h3>
&lt;h3 id="interface">Interface&lt;/h3>
&lt;h3 id="sync">sync&lt;/h3>
&lt;ul>
&lt;li>WaitGroup&lt;/li>
&lt;/ul>
&lt;h3 id="defer">defer&lt;/h3>
&lt;p>defer 是后进先出。&lt;/p>
&lt;p>panic 需要等defer 结束后才会向上传递。 出现panic恐慌时候，会先按照defer的后入先出的顺序执行，最后才会执行panic。&lt;/p>
&lt;h3 id="关键字">关键字&lt;/h3>
&lt;ul>
&lt;li>defer&lt;/li>
&lt;/ul>
&lt;h3 id="值语义和引用语义">值语义和引用语义&lt;/h3>
&lt;p>Go语言中的大多数类型都基于值语义，包括：&lt;/p>
&lt;ul>
&lt;li>基本类型，如byte、int、bool、float32、string等；&lt;/li>
&lt;li>复合类型，如arry、struct、pointer等；&lt;/li>
&lt;/ul>
&lt;h3 id="字符类型">字符类型&lt;/h3>
&lt;p>golang中有两种字符类型：&lt;/p>
&lt;ul>
&lt;li>byte：uint8 类型， 代表一个&lt;a href="http://c.biancheng.net/c/ascii/">ASCII&lt;/a> 字符;&lt;/li>
&lt;li>rune： int32 类型，代表一个unicode字符；&lt;/li>
&lt;/ul>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;ol>
&lt;li>for-range 的k,v变量在整个遍历过程中共用，不能直接进行引用传递。&lt;/li>
&lt;li>&lt;/li>
&lt;/ol>
&lt;h2 id="包管理">包管理&lt;/h2>
&lt;h3 id="gopath">GOPATH&lt;/h3>
&lt;h3 id="go-mod">go-mod&lt;/h3>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://www.jianshu.com/p/2904efc7f1a8">图解golang内存分配&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://colobu.com/2017/06/26/learn-go-type-aliases/">了解 Go 1.9 的类型别名&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>ChubaoFS 基础</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E5%9F%BA%E7%A1%80/</guid><description>&lt;h1 id="chubaofs-基础">ChubaoFS 基础&lt;/h1>
&lt;hr>
&lt;h2 id="简介">简介&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>ChubaoFS是一个开源的分布式文件存储系统，同时提供&lt;code>POSIX FS&lt;/code>和&lt;code>S3&lt;/code>两种访问接口。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2018年由JD TigLab开发，2020年加入CNCF基金会，现为CNCF沙箱项目；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ChubaoFS的设计之初是为大规模容器环境提供分布式的文件存储服务；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="特点">特点&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>高可扩展&lt;/strong>：ChubaoFS的所有组件都是支持分布式部署，数据资源通过分片实现横向扩展；&lt;/li>
&lt;li>&lt;strong>高可靠&lt;/strong>：各个资源节点通过multi-raft协议提供的多副本强一致性来保证数据的高可靠；&lt;/li>
&lt;li>&lt;strong>多协议支持&lt;/strong>：同时支持POSIX FS 和S3 协议；&lt;/li>
&lt;li>&lt;strong>大小文件优化&lt;/strong>：ChubaoFS对于大小文件在底层，使用不同的方式进行优化，同时兼顾了大小文件的性能和存储开销；&lt;/li>
&lt;li>&lt;strong>多写入模式支持&lt;/strong>：同时支持顺序写、随机写2种写入模式；&lt;/li>
&lt;li>&lt;strong>动态资源调度&lt;/strong>：ChubaoFS的资源管理基于负载的动态调度算法，能合理分配资源，调度资源，避免热点；&lt;/li>
&lt;li>&lt;strong>部署简便&lt;/strong>：各组件部署不依赖其他组件，部署方便；同时提供docker，k8s容器部署组件；&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="架构">架构&lt;/h2>
&lt;p>&lt;img src="https://gitee.com/justice/gitnote-img-bed/raw/master/2021/09/18-11-38-03-2021-09-18-11-37-54-image.png" alt="">&lt;/p>
&lt;hr>
&lt;h2 id="组件">组件&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>资源管理节点&lt;/strong>(&lt;code>Master&lt;/code>)：执行集群资源管理、分配、调度的节点，资源管理节点只参与资源管理和调度，不进行具体的数据读写；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>元数据节点&lt;/strong>(&lt;code>MetaNode&lt;/code>)：提供文件元数据(&lt;code>Meta&lt;/code>)管理、存储服务的节点，文件元数据包括inode、dentry、extend等，通过分片(&lt;code>MetaParitition&lt;/code>)分布到不同的元数据节点，通过multi-raft保证多副本一致性；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>数据节点&lt;/strong>(&lt;code>DataNode&lt;/code>)：提供文件数据(&lt;code>Data&lt;/code>)管理、存储服务的节点，文件数据通过数据分片(&lt;code>DataPartition&lt;/code>)分布到不同的数据节点，通过多副本保证数据高可用；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>对象存储节点&lt;/strong>(&lt;code>ObjectNode&lt;/code>): 提供S3访问服务的节点，&lt;code>ObjectNode&lt;/code>节点主要提供S3协议解析及uri映射功能，为无状态节点，可以动态部署；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Fuse客户端&lt;/strong>(&lt;code>Client&lt;/code>): Fuse客户端为用户提供POSIX FS文件访问接口；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="基础概念">基础概念&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>集群&lt;/strong>(&lt;code>Cluster&lt;/code>)：一组建立副本关系的&lt;code>Master&lt;/code>和由其管理的&lt;code>MetaNode&lt;/code>, &lt;code>DataNode&lt;/code>, &lt;code>ObjectNode&lt;/code>节点构成一个集群；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>卷&lt;/strong>（&lt;code>Volume&lt;/code>）：卷是一个逻辑视图，每个卷由一组相关的&lt;code>MetaPartition&lt;/code>, 数据分组&lt;code>DataPartition&lt;/code>组合；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>数据分片&lt;/strong>（&lt;code>DataPartition&lt;/code>）: 数据分片是文件数据管理的单元，chubaofs在数据分片为单位来实现数据的分布，复制等管理，从而实现数据的扩展和高可用；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>元数据分片&lt;/strong>（&lt;code>MetaPartition&lt;/code>）: 元数据分片是文件元数据管理单元；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>副本组&lt;/strong>（&lt;code>Replicas&lt;/code>）：&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>数据集&lt;/strong>（&lt;code>Extent&lt;/code>）:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="资源管理">资源管理&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Master是chubaofs系统中进行资源管理、分配的组件;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Master主要管理chubaofs集群中的所有元数据节点(metanode)，数据节点(datanode)及这些节点上的mp,dp等资源；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Master通过raft来实现多节点部署时的数据同步，以提供master的高可用；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Master只有一个Leader节点提供服务，非Leader节点只作为备份节点，只是作为Leader节点的数据副本；当发生Leader切换时，新当选的Leader提供继续提供服务；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Master只参与资源管理和分配，不参与具体的读写流程，轻量化；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Master主要管理的资源包括：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>MetaNode节点管理；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DataNode节点管理；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Volume资源管理；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用户管理；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>状态监测；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="元数据管理">元数据管理&lt;/h2>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="数据管理">数据管理&lt;/h2>
&lt;ul>
&lt;li>
&lt;hr>
&lt;/li>
&lt;/ul>
&lt;h3 id="fuseclient">FuseClient&lt;/h3>
&lt;hr>
&lt;h3 id="s3">S3&lt;/h3>
&lt;hr>
&lt;h3 id="加载volume">加载Volume&lt;/h3>
&lt;hr>
&lt;h3 id="数据修复">数据修复&lt;/h3>
&lt;hr>
&lt;h2 id="未来">未来&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>metanode内存优化；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>datanode nvme+spdk优化；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>网络库优化；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>raft 优化；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>web console；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>EC node；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="http://chubao.io/">http://chubao.io/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chubaofs.readthedocs.io/">https://chubaofs.readthedocs.io/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cncf.io/projects/chubaofs/">ChubaoFS | Cloud Native Computing Foundation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/chubaofs/chubaofs">GitHub - chubaofs/chubaofs: ChubaoFS (abbrev. CBFS) is a cloud native distributed file system and object store.&lt;/a>&lt;/li>
&lt;/ol></description></item></channel></rss>