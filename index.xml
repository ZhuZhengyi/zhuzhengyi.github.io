<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Justice's Site</title><link>https://justice.bj.cn/</link><description>Recent content on Justice's Site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>justice_103@126.com (Justice)</managingEditor><webMaster>justice_103@126.com (Justice)</webMaster><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright><lastBuildDate>Sun, 26 Jan 2025 16:26:07 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Justice's Blog</title><link>https://justice.bj.cn/homepage/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/homepage/about/</guid><description>Self Introduction Cras ex dui, tristique a libero eget, consectetur semper ligula. Nunc augue arcu, malesuada a nisi et, molestie finibus metus. Sed lacus odio, ultricies a nisl vitae, sollicitudin tempor ipsum. Vivamus quis feugiat arcu. Sed mi nunc, efficitur quis tellus vitae, posuere mattis metus.</description></item><item><title>Pages</title><link>https://justice.bj.cn/homepage/pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/homepage/pages/</guid><description/></item><item><title>Experiences</title><link>https://justice.bj.cn/homepage/experiences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/homepage/experiences/</guid><description/></item><item><title>Vintage</title><link>https://justice.bj.cn/homepage/vintage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/homepage/vintage/</guid><description/></item><item><title>Blank</title><link>https://justice.bj.cn/homepage/blank/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/homepage/blank/</guid><description>Write anything you like here!</description></item><item><title>Turing Complete</title><link>https://justice.bj.cn/post/90.play/turing_complete/</link><pubDate>Sun, 26 Jan 2025 16:26:07 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/90.play/turing_complete/</guid><description>Turing Complete 简介 逻辑运算 与(AND): AB 或(OR): A+B 非(N): A' 与非门(NAND): (AB)' 或非</description></item><item><title>ESP32</title><link>https://justice.bj.cn/post/55.mc/esp32/</link><pubDate>Sun, 15 Dec 2024 20:43:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/55.mc/esp32/</guid><description>ESP32 简介 esp32是由乐鑫(Espressif)于2017年推出的一系列低成本、低功耗</description></item><item><title>gamego</title><link>https://justice.bj.cn/post/55.mc/gamego/</link><pubDate>Sun, 15 Dec 2024 20:43:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/55.mc/gamego/</guid><description>gamego 简介 gamego一款基于STM32的小型掌上可编程游戏机. 特性 GameGo fully supports Microsoft MakeCode Arcade - somewhat similar to</description></item><item><title>Linux内核文件</title><link>https://justice.bj.cn/post/21.linux/linux/</link><pubDate>Sun, 25 Aug 2024 21:03:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux/</guid><description>Linux内核文件 对于Linux内核，编译可以生成不同格式的映像文件，例如： 1 2 $ make</description></item><item><title>制作Linux启动iso</title><link>https://justice.bj.cn/post/21.linux/%E5%88%B6%E4%BD%9Clinux%E5%90%AF%E5%8A%A8iso/</link><pubDate>Sun, 25 Aug 2024 21:03:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/%E5%88%B6%E4%BD%9Clinux%E5%90%AF%E5%8A%A8iso/</guid><description>制作Linux启动iso 简介 从Linux kernel源码开始制作可启动的linux发</description></item><item><title>CodeCombat</title><link>https://justice.bj.cn/post/90.play/codecombat/</link><pubDate>Mon, 15 Jul 2024 20:54:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/90.play/codecombat/</guid><description>CodeCombat 简介 本地部署 Docker部署 1. 拉取codecombat Docker映像 打开终端, 在</description></item><item><title>LLM-大语言模型相关</title><link>https://justice.bj.cn/post/50.ml/llm/</link><pubDate>Mon, 15 Jul 2024 20:54:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/llm/</guid><description>LLM:大语言模型相关 环境准备 1 2 ## 安装anaconda $ winget install Anaconda.Anaconda3 hf-mirror: hugging-f</description></item><item><title>LLM从0到1</title><link>https://justice.bj.cn/post/50.ml/llm_from_scratch/</link><pubDate>Mon, 15 Jul 2024 20:54:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/llm_from_scratch/</guid><description>LLM从0到1 参考 https://lightning.ai/fareedhassankhan12/studios/building-llama-3-from-scratch https://www.understandingai.org/p/large-language-models-explained-with https://www.mikecaptain.com/2023/01/22/captain-aigc-1-transformer/ http://arthurchiao.art/blog/gpt-as-a-finite-state-markov-chain-zh/ http://arthurchiao.art/blog/transformers-from-scratch-zh/ https://arthurchiao.art/blog/visual-intro-to-transformers-zh/</description></item><item><title>PyTorch</title><link>https://justice.bj.cn/post/50.ml/pytorch/</link><pubDate>Mon, 15 Jul 2024 20:54:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/pytorch/</guid><description>PyTorch 简介 PyTorch是由FaceBook 2018年推出的一种开源深度学习库; PyTo</description></item><item><title>Rust多维数组ndarray</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/</link><pubDate>Mon, 15 Jul 2024 20:54:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/</guid><description>Rust多维数组ndarray ndarray Rust Array ndarray生态系统中板条箱的文档： ndarray 基础库 ndarray-rand</description></item><item><title>梯度下降算法转载</title><link>https://justice.bj.cn/post/50.ml/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95/</link><pubDate>Mon, 15 Jul 2024 20:54:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95/</guid><description>梯度下降算法转载 设一个简单的函数 $ 𝑦 = f(x) = 3𝑥^2+2𝑥+1 $。假设此时𝑥=10，那</description></item><item><title>BitCask存储引擎</title><link>https://justice.bj.cn/post/40.storage/bitcask/</link><pubDate>Wed, 05 Jun 2024 23:38:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/bitcask/</guid><description>BitCask存储引擎 简介 bitcask是一个日志结构的kv存储引擎, 是分布式键值数</description></item><item><title>RAG</title><link>https://justice.bj.cn/post/50.ml/rag/</link><pubDate>Wed, 05 Jun 2024 23:38:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/rag/</guid><description>RAG 简介 RAG(Retrieval Augmented Generation, 检索增强生成）是指对大型语言模型输出进行优化，使其能够在生成响应之前引用</description></item><item><title>MySQL InnoDB 存储原理</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql_innodb_%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/</link><pubDate>Wed, 15 May 2024 08:26:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/mysql/mysql_innodb_%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/</guid><description>MySQL InnoDB 存储原理 简介 mysql InnoDB 存储引擎 目录结构 mysql InnoDB存储引擎的数据以目录文件形式存储在</description></item><item><title>MySQL 索引</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql%E7%B4%A2%E5%BC%95/</link><pubDate>Wed, 15 May 2024 08:26:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/mysql/mysql%E7%B4%A2%E5%BC%95/</guid><description>MySQL 索引 简介 mysql中的索引是用于提升查询效率的数据结构，其通过额外的存储空间换取查</description></item><item><title>MySQL事务</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql%E4%BA%8B%E5%8A%A1/</link><pubDate>Wed, 15 May 2024 08:26:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/mysql/mysql%E4%BA%8B%E5%8A%A1/</guid><description>MySQL事务 什么是事务 事务是一组操作, 这组操作要么就是全部成功，要么就是全部失败，</description></item><item><title>SQL 查询引擎</title><link>https://justice.bj.cn/post/30.architech/sql-%E6%9F%A5%E8%AF%A2%E6%A8%A1%E5%9E%8B/</link><pubDate>Wed, 15 May 2024 08:26:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/sql-%E6%9F%A5%E8%AF%A2%E6%A8%A1%E5%9E%8B/</guid><description>SQL 查询引擎 简介 select 这才是完整的SELECT查询 1 2 3 4 5 6 7 8 9 SELECTDISTI</description></item><item><title>Lance列存格式介绍</title><link>https://justice.bj.cn/post/30.architech/lance/</link><pubDate>Fri, 10 May 2024 13:34:43 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/lance/</guid><description>Lance列存格式介绍 简介 lance是一种针对ML工作流和数据集优化的列存数据格式;</description></item><item><title>列式存储格式Parquet</title><link>https://justice.bj.cn/post/30.architech/parquet/</link><pubDate>Fri, 10 May 2024 13:34:43 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/parquet/</guid><description>列式存储格式Parquet 简介 Apache Parquet是Hadoop生态圈中一种新型列式存储</description></item><item><title>向量数据库</title><link>https://justice.bj.cn/post/30.architech/vectordb/%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Fri, 10 May 2024 13:34:43 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/vectordb/%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>向量数据库 简介 向量数据库产品对比 向量数据库 编程语音 是否开源 时间 托管方式 特性 1 vespa java/c++ 2017 2</description></item><item><title>大数据技术总览</title><link>https://justice.bj.cn/post/30.architech/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%80%BB%E8%A7%88/</link><pubDate>Fri, 10 May 2024 13:34:43 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8A%80%E6%9C%AF%E6%80%BB%E8%A7%88/</guid><description>大数据技术总览 全貌 机器学习：Tensorflow，PyTorch，caffeine,</description></item><item><title>hugo</title><link>https://justice.bj.cn/post/70.tool/hugo/</link><pubDate>Sun, 05 May 2024 19:43:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/hugo/</guid><description>hugo 简介 hugo是使用golang开发的一个静态开源blog生成工具，可结合githu</description></item><item><title>CSS</title><link>https://justice.bj.cn/post/14.language/web/css/</link><pubDate>Tue, 30 Apr 2024 21:55:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/web/css/</guid><description>CSS 简介 CSS (Cascading Style Sheets，层叠样式表）； 文件扩展名为.css； 定义如何显示 HTML 元素； 实</description></item><item><title>李白咏霍去病</title><link>https://justice.bj.cn/post/09.pub/poem/%E6%9D%8E%E7%99%BD%E5%92%8F%E9%9C%8D%E5%8E%BB%E7%97%85/</link><pubDate>Sun, 28 Apr 2024 15:28:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/poem/%E6%9D%8E%E7%99%BD%E5%92%8F%E9%9C%8D%E5%8E%BB%E7%97%85/</guid><description>李白咏霍去病 骏马似风飙 鸣鞭出渭桥 弯弓辞汉月 插羽破天骄 阵解星芒尽 营空海雾消 功成画麟阁 独</description></item><item><title>飞鸟</title><link>https://justice.bj.cn/post/09.pub/poem/%E9%A3%9E%E9%B8%9F/</link><pubDate>Sun, 28 Apr 2024 15:28:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/poem/%E9%A3%9E%E9%B8%9F/</guid><description>飞鸟 我落日般的忧伤就像惆怅的飞鸟, 惆怅的飞鸟飞成我落日般的忧伤</description></item><item><title>苍穹浩瀚片头曲</title><link>https://justice.bj.cn/post/09.pub/poem/%E8%8B%8D%E7%A9%B9%E6%B5%A9%E7%80%9A-%E7%89%87%E5%A4%B4%E6%9B%B2/</link><pubDate>Sun, 28 Apr 2024 14:00:01 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/poem/%E8%8B%8D%E7%A9%B9%E6%B5%A9%E7%80%9A-%E7%89%87%E5%A4%B4%E6%9B%B2/</guid><description>苍穹浩瀚片头曲 原曲歌词(挪威语) The Expanse I de sa morgenen jeg (In the so tender morning I) 在温柔的晨光中, Stige asoke (rise in search)</description></item><item><title>Stable Diffusion</title><link>https://justice.bj.cn/post/50.ml/stable_diffusion/</link><pubDate>Wed, 24 Apr 2024 12:53:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/stable_diffusion/</guid><description>Stable Diffusion 简介 Stable diffusion是一个基于Latent Diffusion Models（LDMs）实现的的</description></item><item><title>Linux IO 之 文件系统的架构(转)</title><link>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9E%B6%E6%9E%84/</link><pubDate>Wed, 24 Apr 2024 12:31:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9E%B6%E6%9E%84/</guid><description>Linux IO 之 文件系统的架构(转) VFS和文件系统总结 一切都是文件： VFS 文件系统的设计，类似抽</description></item><item><title>Linux文件系统基础知识(转)</title><link>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 24 Apr 2024 12:31:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/</guid><description>Linux文件系统基础知识(转) 文件系统的基本组成 文件系统是操作系统中负责管理持久数</description></item><item><title>Linux系统调用之Futex</title><link>https://justice.bj.cn/post/21.linux/linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B9%8Bfutex/</link><pubDate>Wed, 24 Apr 2024 12:31:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B9%8Bfutex/</guid><description>Linux系统调用之Futex 简介 Futex（Fast Userspace muTexes）的缩写，由H</description></item><item><title>NVMe</title><link>https://justice.bj.cn/post/40.storage/nvme%E7%AE%80%E4%BB%8B/</link><pubDate>Wed, 24 Apr 2024 12:31:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/nvme%E7%AE%80%E4%BB%8B/</guid><description>NVMe 简介 NVMe（Non-Volatile Memory Express）非易失性内存主机控制器接口</description></item><item><title>CUDA编程</title><link>https://justice.bj.cn/post/50.ml/cuda/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/cuda/</guid><description>CUDA编程 简介 CUDA是NVIDIA于2006年发布的一个基于NVIDIA的GPU</description></item><item><title>Tauri</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%BA%93%E4%B9%8Btauri/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%BA%93%E4%B9%8Btauri/</guid><description>Tauri 简介 Tauri是一个类似electron的跨平台基于web的客户端框架。奥法队是非</description></item><item><title>whisper.cpp</title><link>https://justice.bj.cn/post/50.ml/whisper.cpp/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/whisper.cpp/</guid><description>whisper.cpp 简介 参考</description></item><item><title>Zeus- Uber的分布式Spark Shuffle Service</title><link>https://justice.bj.cn/post/30.architech/spark/zeus-uber-remote-spark-shuffle-service/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/zeus-uber-remote-spark-shuffle-service/</guid><description>Zeus: Uber的分布式Spark Shuffle Service 特性 垂直扩展 独立节点运行； 去中心化存储，节点无状态；</description></item><item><title>智能语音助手</title><link>https://justice.bj.cn/post/50.ml/%E6%99%BA%E8%83%BD%E8%AF%AD%E9%9F%B3%E5%8A%A9%E6%89%8B/</link><pubDate>Tue, 16 Apr 2024 17:06:35 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/%E6%99%BA%E8%83%BD%E8%AF%AD%E9%9F%B3%E5%8A%A9%E6%89%8B/</guid><description>智能语音助手 功能 实现中英文语音对话; 架构 组件 语音转文本 whisper.cpp 对话大模型 llama 下载大模型数据:</description></item><item><title>Zerotier</title><link>https://justice.bj.cn/post/70.tool/zerotier/</link><pubDate>Thu, 28 Mar 2024 20:55:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/zerotier/</guid><description>Zerotier 简介 zerotier是一款智能可编程以太网交换软件，只需要经过简单的注册，安装和配</description></item><item><title>专题：动态规划</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link><pubDate>Thu, 28 Mar 2024 20:55:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid><description>专题：动态规划 简介 动态规划问题的难点在于对问题进行合理划分，将大问题转变为小问题的组</description></item><item><title>鸡蛋掉落</title><link>https://justice.bj.cn/post/leetcode/887.%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/</link><pubDate>Thu, 07 Mar 2024 14:02:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/887.%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/</guid><description>鸡蛋掉落 Category Difficulty Likes Dislikes algorithms Hard (30.83%) 985 - Tags heap Companies Unknown 给你 k 枚相同的鸡蛋，并可以使用一栋从第 1 层到第 n 层</description></item><item><title>CPU异常</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/05-cpu-exceptions/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/05-cpu-exceptions/</guid><description>CPU异常 原文：https://os.phil-opp.com/cpu-except</description></item><item><title>Go Channel</title><link>https://justice.bj.cn/post/14.language/golang/golang-channel/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang-channel/</guid><description>Go Channel 简介 channel是first-class的，可以被存储到变量中，可以作为参数传</description></item><item><title>Golang之syscall</title><link>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bsyscall/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bsyscall/</guid><description>Golang之syscall 简介 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26</description></item><item><title>Golang内存对齐</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/</guid><description>Golang内存对齐 简介 CPU 始终以字长访问内存， 对齐保证(align guarantee) 结构体的成员变量</description></item><item><title>Golang内存管理</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid><description>Golang内存管理 简介 Golang内存管理采用类似tcmalloc的分级分配算法，</description></item><item><title>Golang汇编</title><link>https://justice.bj.cn/post/14.language/golang/golang%E6%B1%87%E7%BC%96/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E6%B1%87%E7%BC%96/</guid><description>Golang汇编 简介 Go语言汇编基于plan9汇编,是一个中间汇编方式，以忽略底层不</description></item><item><title>Go语言基础</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%9F%BA%E7%A1%80/</guid><description>Go语言基础 简介 初始化 规则： 每个package 只会被初始化一次； 同一个 package</description></item><item><title>Go语言运行时</title><link>https://justice.bj.cn/post/14.language/golang/golang-runtime/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang-runtime/</guid><description>Go语言运行时 简介 Go调度器的演化 源码分析 Go 语言程序启动后，需要对自身运行时进行初始</description></item><item><title>HBase</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E5%9F%BA%E7%A1%80/</guid><description>HBase 简介 Apache HBase是基于Hadoop构建的一个分布式、可伸缩的海量数据存储系统。 HD</description></item><item><title>HBase协处理器</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-%E5%8D%8F%E5%A4%84%E7%90%86%E5%99%A8/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-%E5%8D%8F%E5%A4%84%E7%90%86%E5%99%A8/</guid><description>HBase协处理器 简介 HBase 的协处理器是从 0.92.0 开始引入的，参见 HBASE-2000。它的实</description></item><item><title>Helyim</title><link>https://justice.bj.cn/post/40.storage/helyim/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/helyim/</guid><description>Helyim 简介 Helyim是seaweedfs的一个rust语言实现。 参考 https://github.com/helyim/helyim</description></item><item><title>Linux IO 之 IO与网络模型</title><link>https://justice.bj.cn/post/21.linux/linux-io-%E4%B9%8B-io%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-io-%E4%B9%8B-io%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</guid><description>Linux IO 之 IO与网络模型 atomic 原子变量: x86在多核环境下，多核竞争数据总线时，提供Lock</description></item><item><title>Linux IO 多路复用</title><link>https://justice.bj.cn/post/21.linux/linux-io-%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-io-%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</guid><description>Linux IO 多路复用 简介 linux io 多路复用是用来实现单进程同时处理多个io请求的有效方法。 linu</description></item><item><title>Lua 基础</title><link>https://justice.bj.cn/post/14.language/lua/lua%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/lua/lua%E5%9F%BA%E7%A1%80/</guid><description>Lua 基础 简介 Lua 是一种轻量小巧的脚本语言，由巴西里约热内卢天主教大学（Pontifica</description></item><item><title>MySQL 日志</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql%E6%97%A5%E5%BF%97/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/mysql/mysql%E6%97%A5%E5%BF%97/</guid><description>MySQL 日志 简介 MySQL innodb引擎中有6种日志： 重做日志（redo log）: 回滚日志（un</description></item><item><title>MySQL基础</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/mysql/mysql%E5%9F%BA%E7%A1%80/</guid><description>MySQL基础 简介 mysql是 架构 特点 设计范式 1NF: 原子性，保证每列不可再分, 保证表中无</description></item><item><title>OpenRaft</title><link>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/openraft/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/openraft/</guid><description>OpenRaft 简介 参考 https://docs.rs/openraft/latest/openraft/docs/getting_started/index.html</description></item><item><title>Python 基础</title><link>https://justice.bj.cn/post/14.language/python/python%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/python/python%E5%9F%BA%E7%A1%80/</guid><description>Python 基础 简介 包依赖 用法 1 2 import module_name # from module_name import module1, module2 import 搜索顺序: 当前目录 如果不在当前目录，Pyt</description></item><item><title>Python量化库之efinance</title><link>https://justice.bj.cn/post/14.language/python/python%E5%BA%93%E4%B9%8Befinace/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/python/python%E5%BA%93%E4%B9%8Befinace/</guid><description>Python量化库之efinance 简介 efinance是 安装 1 $ pip install efinance 使用 1 2 3 4</description></item><item><title>Raft算法</title><link>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/raft%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/raft%E7%AE%97%E6%B3%95/</guid><description>Raft算法 简介 Raft算法是2013年由斯坦福大学的Diego Ongaro、Joh</description></item><item><title>Rust 数据类型</title><link>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/02.rust%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>Rust 数据类型 简介 Rust 的数据分为 标量(scalar)、复合(compound)和 集合3 种类</description></item><item><title>Rust并发</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%B9%B6%E5%8F%91/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%B9%B6%E5%8F%91/</guid><description>Rust并发 简介 线程 线程同步 互斥量 锁 原子量 Send和Sync std::marker 中的 Sync 和 Send Send Send允</description></item><item><title>Rust指针</title><link>https://justice.bj.cn/post/14.language/rust/10.rust%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/10.rust%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</guid><description>Rust指针 简介 Rust中的指针是一个包含了内存地址的变量，该内存地址引用或者指向了</description></item><item><title>Rust特性(Trait)</title><link>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/20.rust%E7%89%B9%E6%80%A7trait/</guid><description>Rust特性(Trait) 简介 Trait(特性) 是一组方法的集合，实现trait的类</description></item><item><title>Rust迭代器</title><link>https://justice.bj.cn/post/14.language/rust/rust%E8%BF%AD%E4%BB%A3%E5%99%A8/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid><description>Rust迭代器 简介 迭代器是一个trait； 迭代器（iterator）负责遍历序列中的</description></item><item><title>STL容器</title><link>https://justice.bj.cn/post/14.language/c++/stl/stl%E5%AE%B9%E5%99%A8/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/stl/stl%E5%AE%B9%E5%99%A8/</guid><description>STL容器 简介 容器库是类模板与算法的汇集，允许程序员简单地访问常见数据结构，例如队列</description></item><item><title>Vearch</title><link>https://justice.bj.cn/post/30.architech/vearch/vearch/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/vearch/vearch/</guid><description>Vearch 简介 京东(jd.com)开源的一款向量数据库，底层基于faiss，开发语言：c++</description></item><item><title>专题：回溯法</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%9B%9E%E6%BA%AF%E6%B3%95/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%9B%9E%E6%BA%AF%E6%B3%95/</guid><description>专题：回溯法 简介 回溯法是归纳法的一种。其基本思想是： 基本要点 先找出一种遍历问题的合理</description></item><item><title>专题：堆</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%A0%86/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%A0%86/</guid><description>专题：堆 简介 堆(heap)是一个基本数据结构, 其主要特征为堆顶元素为所有元素中的最大</description></item><item><title>专题：字符串</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>专题：字符串 简介 字符串是最常用的数据结构。 相关题目 题目 难度 思路 3.无重复字符的最长子</description></item><item><title>专题：栈</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%A0%88/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%A0%88/</guid><description>专题：栈 简介 栈是一个基本数据结构, 其主要特征为先进先出; 栈常用操作: 入栈: 将元素压入</description></item><item><title>专题：经典数据结构设计</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid><description>专题：经典数据结构设计 简介 本专题包含一些经典的数据结构设计。 相关题目 题目 难度 关键思路</description></item><item><title>从中序与后序遍历序列构造二叉树</title><link>https://justice.bj.cn/post/leetcode/106.%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/106.%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>从中序与后序遍历序列构造二叉树 Category Difficulty Likes Dislikes algorithms Medium (72.04%) 1064 - Tags array | tree | depth-first-search Companies microsoft 给定两个整数数组 inorder 和</description></item><item><title>使用Rust编写操作系统（一）：独立式可执行程序</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/01-freestanding-rust-binary/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/01-freestanding-rust-binary/</guid><description>使用Rust编写操作系统（一）：独立式可执行程序 我们的第一步，是在不连接标准库的前提</description></item><item><title>使用Rust编写操作系统（七）：硬件中断</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/07-hardware-interrupts/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/07-hardware-interrupts/</guid><description>使用Rust编写操作系统（七）：硬件中断 在这一章中，我们将会学习如何设置可编程中断控</description></item><item><title>使用Rust编写操作系统（三）：VGA字符模式</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/03-vga-text-mode/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/03-vga-text-mode/</guid><description>使用Rust编写操作系统（三）：VGA字符模式 VGA字符模式（VGA text mode）是打</description></item><item><title>使用Rust编写操作系统（二）：最小化内核</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/02-minimal-rust-kernel/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/02-minimal-rust-kernel/</guid><description>使用Rust编写操作系统（二）：最小化内核 这篇文章将基于x86架构（the x86 arch</description></item><item><title>使用Rust编写操作系统（四）：内核测试</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/04-testing/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/04-testing/</guid><description>使用Rust编写操作系统（四）：内核测试 本文主要讲述了在no_std环境下进行单元测</description></item><item><title>使用Rust编写操作系统（附录一）：链接器参数</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-a-linker-arguments/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-a-linker-arguments/</guid><description>使用Rust编写操作系统（附录一）：链接器参数 用Rust编写操作系统时，我们可能遇到</description></item><item><title>使用Rust编写操作系统（附录三）：禁用SIMD</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-c-disable-simd/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-c-disable-simd/</guid><description>使用Rust编写操作系统（附录三）：禁用SIMD 单指令多数据流（Single Instruction Multiple Da</description></item><item><title>使用Rust编写操作系统（附录二）：禁用红区</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-b-red-zone/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-b-red-zone/</guid><description>使用Rust编写操作系统（附录二）：禁用红区 红区（redzone）是System V A</description></item><item><title>双重异常</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/06-double-fault-exceptions/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/06-double-fault-exceptions/</guid><description>双重异常 原文：https://os.phil-opp.com/double-faul</description></item><item><title>基础数据结构</title><link>https://justice.bj.cn/post/12.data_struct/00.%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/00.%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid><description>基础数据结构 简介 数据结构是用来描述数据在计算机内存中组织方式的形式。 Bit/Byte bit 是内存中最小</description></item><item><title>并发</title><link>https://justice.bj.cn/post/13.algorithm/concurrent/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/concurrent/</guid><description>并发 进程 进程间通信 管道(Pipe) 共享内存(SharedMemory) 消息队列(MQ</description></item><item><title>并查集</title><link>https://justice.bj.cn/post/12.data_struct/%E5%B9%B6%E6%9F%A5%E9%9B%86/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid><description>并查集 简介 实现 1 参考</description></item><item><title>排序算法</title><link>https://justice.bj.cn/post/13.algorithm/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid><description>排序算法 概述 排序是将无序的序列变成有序的序列的计算过程，是计算机程序设计中最基础算法</description></item><item><title>数组</title><link>https://justice.bj.cn/post/12.data_struct/02.%E6%95%B0%E7%BB%84/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/02.%E6%95%B0%E7%BB%84/</guid><description>数组 简介 数组是同类元素的在内存中的连续存储结构。 数组中的每一个元素类型相同，所占存储</description></item><item><title>构造有效字符串的最少插入数</title><link>https://justice.bj.cn/post/leetcode/2645.%E6%9E%84%E9%80%A0%E6%9C%89%E6%95%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%8F%92%E5%85%A5%E6%95%B0/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2645.%E6%9E%84%E9%80%A0%E6%9C%89%E6%95%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%8F%92%E5%85%A5%E6%95%B0/</guid><description>构造有效字符串的最少插入数 Category Difficulty Likes Dislikes algorithms Medium (56.43%) 41 - Tags Unknown Companies Unknown 给你一个字符串 word ，你可以向其中任</description></item><item><title>查找算法</title><link>https://justice.bj.cn/post/13.algorithm/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</guid><description>查找算法 简介 查找算法是计算机科学中最基本的算法之一，其用途在查找给定序列中的特定值。</description></item><item><title>每个小孩最多能分到多少糖果</title><link>https://justice.bj.cn/post/leetcode/2226.%E6%AF%8F%E4%B8%AA%E5%B0%8F%E5%AD%A9%E6%9C%80%E5%A4%9A%E8%83%BD%E5%88%86%E5%88%B0%E5%A4%9A%E5%B0%91%E7%B3%96%E6%9E%9C/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2226.%E6%AF%8F%E4%B8%AA%E5%B0%8F%E5%AD%A9%E6%9C%80%E5%A4%9A%E8%83%BD%E5%88%86%E5%88%B0%E5%A4%9A%E5%B0%91%E7%B3%96%E6%9E%9C/</guid><description>每个小孩最多能分到多少糖果 Category Difficulty Likes Dislikes algorithms Medium (35.03%) 62 - Tags Unknown Companies Unknown 给你一个 下标从 0 开始 的整数数组 candies</description></item><item><title>相同的树</title><link>https://justice.bj.cn/post/leetcode/100.%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/100.%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91/</guid><description>相同的树 Category Difficulty Likes Dislikes algorithms Easy (59.91%) 753 - Tags tree | depth-first-search Companies bloomberg 给你两棵二叉树的根节点 p 和 q ，编写一个函数来检</description></item><item><title>算法基础</title><link>https://justice.bj.cn/post/13.algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</guid><description>算法基础 算法定义 算法评估 空间复杂度 时间复杂度 常用算法 排序 比较类 冒泡排序 选择排序 插入排</description></item><item><title>纠删码(ErasureCode)</title><link>https://justice.bj.cn/post/13.algorithm/erasurecode/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/erasurecode/</guid><description>纠删码(ErasureCode) 简介 纠删码是通过利用纠删码算法将原始的数据进行编码得</description></item><item><title>译名表</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/translation-table/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/translation-table/</guid><description>译名表 收录书中涉及专有名词的英文单词、短语，给出本书的中文译名。 采纳惯用译名为主。没</description></item><item><title>跳表(skiplist)</title><link>https://justice.bj.cn/post/12.data_struct/20.%E8%B7%B3%E8%A1%A8/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/20.%E8%B7%B3%E8%A1%A8/</guid><description>跳表(skiplist) 简介 跳表(SkipList)由 William Pugh 于 1990 年发明； 是平衡树的一种</description></item><item><title>队列</title><link>https://justice.bj.cn/post/12.data_struct/04.%E9%98%9F%E5%88%97/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/04.%E9%98%9F%E5%88%97/</guid><description>队列 简介 队列是一种 参考</description></item><item><title>09.Intel 内存管理两板斧：分段与分页</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/09.intel%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%A4%E6%9D%BF%E6%96%A7_%E5%88%86%E6%AE%B5%E4%B8%8E%E5%88%86%E9%A1%B5/</link><pubDate>Thu, 11 Jan 2024 15:25:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/09.intel%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%B8%A4%E6%9D%BF%E6%96%A7_%E5%88%86%E6%AE%B5%E4%B8%8E%E5%88%86%E9%A1%B5/</guid><description>09.Intel 内存管理两板斧：分段与分页 head.s 代码在重新设置了 gdt 与 idt 后。 来到了这样一段代码。 1 2 3 4</description></item><item><title>10.进入 main 函数前的最后一跃</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/10.%E8%BF%9B%E5%85%A5main%E5%87%BD%E6%95%B0%E5%89%8D%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E8%B7%83/</link><pubDate>Thu, 11 Jan 2024 15:25:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/10.%E8%BF%9B%E5%85%A5main%E5%87%BD%E6%95%B0%E5%89%8D%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E8%B7%83/</guid><description>10.进入 main 函数前的最后一跃 上回书咱们说到，我们终于把这些杂七杂八的，idt、gdt</description></item><item><title>macos日常</title><link>https://justice.bj.cn/post/70.tool/macos/</link><pubDate>Thu, 11 Jan 2024 15:25:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/macos/</guid><description>macos日常 samba连接慢 请进入应用程序 &amp;gt; 实用工具打开终端机。 创建空文件 /etc</description></item><item><title>买卖股票的最佳时机 IV</title><link>https://justice.bj.cn/post/leetcode/188.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiv/</link><pubDate>Thu, 11 Jan 2024 15:25:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/188.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiv/</guid><description>买卖股票的最佳时机 IV Category Difficulty Likes Dislikes algorithms Hard (45.56%) 972 - Tags dynamic-programming Companies Unknown 给定一个整数数组 prices ，它的第 i 个元素 prices[i] 是</description></item><item><title>01.最开始的两行代码</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/01.%E6%9C%80%E5%BC%80%E5%A7%8B%E7%9A%84%E4%B8%A4%E8%A1%8C%E4%BB%A3%E7%A0%81/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/01.%E6%9C%80%E5%BC%80%E5%A7%8B%E7%9A%84%E4%B8%A4%E8%A1%8C%E4%BB%A3%E7%A0%81/</guid><description>01.最开始的两行代码 当你按下开机键的那一刻，在主板上提前写死的固件程序 BIOS 会将硬盘中</description></item><item><title>02.自己给自己挪个地儿</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/02.%E8%87%AA%E5%B7%B1%E7%BB%99%E8%87%AA%E5%B7%B1%E6%8C%AA%E4%B8%AA%E5%9C%B0%E5%84%BF/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/02.%E8%87%AA%E5%B7%B1%E7%BB%99%E8%87%AA%E5%B7%B1%E6%8C%AA%E4%B8%AA%E5%9C%B0%E5%84%BF/</guid><description>02.自己给自己挪个地儿 书接上回，上回书咱们说到，CPU 执行操作系统的最开始的两行代</description></item><item><title>03.做好最最基础的准备工作</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/03.%E5%81%9A%E5%A5%BD%E6%9C%80%E6%9C%80%E5%9F%BA%E7%A1%80%E7%9A%84%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/03.%E5%81%9A%E5%A5%BD%E6%9C%80%E6%9C%80%E5%9F%BA%E7%A1%80%E7%9A%84%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/</guid><description>03.做好最最基础的准备工作 上回说到，操作系统的代码最开头的 512 字节的数据，从硬盘的启</description></item><item><title>04.把自己在硬盘里的其他部分也放到内存来</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/04.%E6%8A%8A%E8%87%AA%E5%B7%B1%E5%9C%A8%E7%A1%AC%E7%9B%98%E9%87%8C%E7%9A%84%E5%85%B6%E4%BB%96%E9%83%A8%E5%88%86%E4%B9%9F%E6%94%BE%E5%88%B0%E5%86%85%E5%AD%98%E6%9D%A5/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/04.%E6%8A%8A%E8%87%AA%E5%B7%B1%E5%9C%A8%E7%A1%AC%E7%9B%98%E9%87%8C%E7%9A%84%E5%85%B6%E4%BB%96%E9%83%A8%E5%88%86%E4%B9%9F%E6%94%BE%E5%88%B0%E5%86%85%E5%AD%98%E6%9D%A5/</guid><description>04.把自己在硬盘里的其他部分也放到内存来 上回说到，操作系统的一些最最最最基础的准备</description></item><item><title>05.进入保护模式前的最后一次折腾内存</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/05.%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E5%89%8D%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1%E6%8A%98%E8%85%BE%E5%86%85%E5%AD%98/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/05.%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E5%89%8D%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1%E6%8A%98%E8%85%BE%E5%86%85%E5%AD%98/</guid><description>05.进入保护模式前的最后一次折腾内存 上回书咱们说到，操作系统已经完成了各种从硬盘到</description></item><item><title>06.先解决段寄存器的历史包袱问题</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/06.%E5%85%88%E8%A7%A3%E5%86%B3%E6%AE%B5%E5%AF%84%E5%AD%98%E5%99%A8%E7%9A%84%E5%8E%86%E5%8F%B2%E5%8C%85%E8%A2%B1%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/06.%E5%85%88%E8%A7%A3%E5%86%B3%E6%AE%B5%E5%AF%84%E5%AD%98%E5%99%A8%E7%9A%84%E5%8E%86%E5%8F%B2%E5%8C%85%E8%A2%B1%E9%97%AE%E9%A2%98/</guid><description>06.先解决段寄存器的历史包袱问题 上回书咱们说到，操作系统又折腾了一下内存，之后的很</description></item><item><title>07.进入保护模式</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/07.%E5%85%AD%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%B0%B1%E8%BF%9B%E5%85%A5%E4%BA%86%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/07.%E5%85%AD%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%B0%B1%E8%BF%9B%E5%85%A5%E4%BA%86%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F/</guid><description>07.进入保护模式 上回书咱们说到，操作系统设置了个全局描述符表 gdt。 为后面切换到保</description></item><item><title>07.进入保护模式</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/07.%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/07.%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F/</guid><description>07.进入保护模式 上回书咱们说到，操作系统设置了个全局描述符表 gdt。 为后面切换到保</description></item><item><title>08.重新设置 idt 和 gdt</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/08.%E7%83%A6%E6%AD%BB%E4%BA%86%E5%8F%88%E8%A6%81%E9%87%8D%E6%96%B0%E8%AE%BE%E7%BD%AE%E4%B8%80%E9%81%8Didt%E5%92%8Cgdt/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/08.%E7%83%A6%E6%AD%BB%E4%BA%86%E5%8F%88%E8%A6%81%E9%87%8D%E6%96%B0%E8%AE%BE%E7%BD%AE%E4%B8%80%E9%81%8Didt%E5%92%8Cgdt/</guid><description>08.重新设置 idt 和 gdt 上回书咱们说到，CPU 进入了 32 位保护模式，我们快速回顾一下关键的</description></item><item><title>08.重新设置 idt 和 gdt</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/08.%E9%87%8D%E6%96%B0%E8%AE%BE%E7%BD%AEidt%E5%92%8Cgdt/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/08.%E9%87%8D%E6%96%B0%E8%AE%BE%E7%BD%AEidt%E5%92%8Cgdt/</guid><description>08.重新设置 idt 和 gdt 上回书咱们说到，CPU 进入了 32 位保护模式，我们快速回顾一下关键的</description></item><item><title>10.1.小结</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/10.1.%E5%B0%8F%E7%BB%93/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC1%E9%83%A8%E5%88%86/10.1.%E5%B0%8F%E7%BB%93/</guid><description>10.1.小结 当你按下开机键的那一刻，在主板上提前写死的固件程序 BIOS 会将硬盘中启动区的</description></item><item><title>11.整个操作系统就 20 几行代码</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/11.%E6%95%B4%E4%B8%AA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B0%B120%E5%87%A0%E8%A1%8C%E4%BB%A3%E7%A0%81/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/11.%E6%95%B4%E4%B8%AA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B0%B120%E5%87%A0%E8%A1%8C%E4%BB%A3%E7%A0%81/</guid><description>11.整个操作系统就 20 几行代码 在第一部分，用了总共十回的篇章，把进入 main 方法前的苦力工</description></item><item><title>12.管理内存前先划分出三个边界值</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/12.%E7%AE%A1%E7%90%86%E5%86%85%E5%AD%98%E5%89%8D%E5%85%88%E5%88%92%E5%88%86%E5%87%BA%E4%B8%89%E4%B8%AA%E8%BE%B9%E7%95%8C%E5%80%BC/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/12.%E7%AE%A1%E7%90%86%E5%86%85%E5%AD%98%E5%89%8D%E5%85%88%E5%88%92%E5%88%86%E5%87%BA%E4%B8%89%E4%B8%AA%E8%BE%B9%E7%95%8C%E5%80%BC/</guid><description>12.管理内存前先划分出三个边界值 上回书咱们回顾了一下 main.c 函数之前我们做的全部工作，给</description></item><item><title>13.主内存初始化mem_init</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/13.%E4%B8%BB%E5%86%85%E5%AD%98%E5%88%9D%E5%A7%8B%E5%8C%96mem_init/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/13.%E4%B8%BB%E5%86%85%E5%AD%98%E5%88%9D%E5%A7%8B%E5%8C%96mem_init/</guid><description>13.主内存初始化mem_init 今天我们不聊具体内存管理的算法，我们就来看看，操作</description></item><item><title>14.中断初始化trap_init</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/14.%E4%B8%AD%E6%96%AD%E5%88%9D%E5%A7%8B%E5%8C%96trap_init/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/14.%E4%B8%AD%E6%96%AD%E5%88%9D%E5%A7%8B%E5%8C%96trap_init/</guid><description>14.中断初始化trap_init 当你的计算机刚刚启动时，你按下键盘是不生效的，但是</description></item><item><title>15.块设备初始化blk_dev_init</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/15.%E5%9D%97%E8%AE%BE%E5%A4%87%E8%AF%B7%E6%B1%82%E9%A1%B9%E5%88%9D%E5%A7%8B%E5%8C%96blk_dev_init/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/15.%E5%9D%97%E8%AE%BE%E5%A4%87%E8%AF%B7%E6%B1%82%E9%A1%B9%E5%88%9D%E5%A7%8B%E5%8C%96blk_dev_init/</guid><description>15.块设备初始化blk_dev_init 读取硬盘数据到内存中，是操作系统的一个基础</description></item><item><title>16.控制台初始化tty_init</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/16.%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%88%9D%E5%A7%8B%E5%8C%96tty_init/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/16.%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%88%9D%E5%A7%8B%E5%8C%96tty_init/</guid><description>16.控制台初始化tty_init 继内存管理结构 mem_map 和中断描述符表 idt 建立好之后，我们又</description></item><item><title>17.时间初始化time_init</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/17.%E6%97%B6%E9%97%B4%E5%88%9D%E5%A7%8B%E5%8C%96time_init/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/17.%E6%97%B6%E9%97%B4%E5%88%9D%E5%A7%8B%E5%8C%96time_init/</guid><description>17.时间初始化time_init 书接上回，上回书咱们说到，通过初始化控制台的 tty_init 操作</description></item><item><title>18.进程调度初始化sched_init</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/18.%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E5%88%9D%E5%A7%8B%E5%8C%96sched_init/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/18.%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E5%88%9D%E5%A7%8B%E5%8C%96sched_init/</guid><description>18.进程调度初始化sched_init 书接上回，上回书咱们说到，time_init</description></item><item><title>19.缓冲区初始化buffer_init</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/19.%E7%BC%93%E5%86%B2%E5%8C%BA%E5%88%9D%E5%A7%8B%E5%8C%96buffer_init/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/19.%E7%BC%93%E5%86%B2%E5%8C%BA%E5%88%9D%E5%A7%8B%E5%8C%96buffer_init/</guid><description>19.缓冲区初始化buffer_init 书接上回，上回书我们说到了进程调度的初始化，</description></item><item><title>20.1.第2部分小结</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%E6%80%BB%E7%BB%93%E4%B8%8E%E5%9B%9E%E9%A1%BE/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%E6%80%BB%E7%BB%93%E4%B8%8E%E5%9B%9E%E9%A1%BE/</guid><description>20.1.第2部分小结 第二部分所讲的代码，就和第二部分的目录一样规整，一个 init 方法对应</description></item><item><title>20.硬盘初始化hd_init</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/20.%E7%A1%AC%E7%9B%98%E5%88%9D%E5%A7%8B%E5%8C%96hd_init/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC2%E9%83%A8%E5%88%86/20.%E7%A1%AC%E7%9B%98%E5%88%9D%E5%A7%8B%E5%8C%96hd_init/</guid><description>20.硬盘初始化hd_init 上回书咱们说到，buffer_init 完成了缓冲区初始</description></item><item><title>21.一个新进程的诞生</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/21.%E6%96%B0%E8%BF%9B%E7%A8%8B%E8%AF%9E%E7%94%9F%E5%85%A8%E5%B1%80%E6%A6%82%E8%BF%B0/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/21.%E6%96%B0%E8%BF%9B%E7%A8%8B%E8%AF%9E%E7%94%9F%E5%85%A8%E5%B1%80%E6%A6%82%E8%BF%B0/</guid><description>21.一个新进程的诞生 一个新进程的诞生，从操作系统的源码角度来说，其实就两行代码。而</description></item><item><title>22.从内核态到用户态</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/22.%E4%BB%8E%E5%86%85%E6%A0%B8%E6%80%81%E5%88%87%E6%8D%A2%E5%88%B0%E7%94%A8%E6%88%B7%E6%80%81/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/22.%E4%BB%8E%E5%86%85%E6%A0%B8%E6%80%81%E5%88%87%E6%8D%A2%E5%88%B0%E7%94%A8%E6%88%B7%E6%80%81/</guid><description>22.从内核态到用户态 书接上回，上回书咱们从整体上鸟瞰了一下第三部分要讲的内容，代码</description></item><item><title>23.进程调度</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/23.%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/23.%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6/</guid><description>23.进程调度 书接上回，上回书咱们说到，操作系统通过 move_to_user_mode 方法，通过伪造一个中断和中断返</description></item><item><title>24.定时器</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/24.%E4%BB%8E%E4%B8%80%E6%AC%A1%E5%AE%9A%E6%97%B6%E5%99%A8%E6%BB%B4%E7%AD%94%E6%9D%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/24.%E4%BB%8E%E4%B8%80%E6%AC%A1%E5%AE%9A%E6%97%B6%E5%99%A8%E6%BB%B4%E7%AD%94%E6%9D%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6/</guid><description>24.定时器 书接上回，上回书咱们说到，我们完全由自己从零到有设计出了进程调度的大体流</description></item><item><title>25.fork调用</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/25.%E9%80%9A%E8%BF%87fork%E7%9C%8B%E4%B8%80%E6%AC%A1%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E6%B5%81%E7%A8%8B/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/25.%E9%80%9A%E8%BF%87fork%E7%9C%8B%E4%B8%80%E6%AC%A1%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E6%B5%81%E7%A8%8B/</guid><description>25.fork调用 书接上回，上回书咱们说到，我们通过自己设计了一遍进程调度，又看了一</description></item><item><title>26.fork中进程基本信息的复制</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/26.fork%E4%B8%AD%E8%BF%9B%E7%A8%8B%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E7%9A%84%E5%A4%8D%E5%88%B6/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/26.fork%E4%B8%AD%E8%BF%9B%E7%A8%8B%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF%E7%9A%84%E5%A4%8D%E5%88%B6/</guid><description>26.fork中进程基本信息的复制 书接上回，上回书咱们说到，fork 触发系统调用中断</description></item><item><title>27.进程的内存规划</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/27.fork%E4%B8%AD%E8%BF%9B%E7%A8%8B%E5%86%85%E5%AD%98%E8%A7%84%E5%88%92%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/27.fork%E4%B8%AD%E8%BF%9B%E7%A8%8B%E5%86%85%E5%AD%98%E8%A7%84%E5%88%92%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>27.进程的内存规划 书接上回，上回书咱们说到，fork 函数为新的进程（进程 1）申请了</description></item><item><title>28.我居然会认为权威书籍写错了...</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/28.%E6%88%91%E5%B1%85%E7%84%B6%E4%BC%9A%E8%AE%A4%E4%B8%BA%E6%9D%83%E5%A8%81%E4%B9%A6%E7%B1%8D%E5%86%99%E9%94%99%E4%BA%86/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/28.%E6%88%91%E5%B1%85%E7%84%B6%E4%BC%9A%E8%AE%A4%E4%B8%BA%E6%9D%83%E5%A8%81%E4%B9%A6%E7%B1%8D%E5%86%99%E9%94%99%E4%BA%86/</guid><description>28.我居然会认为权威书籍写错了... 在 Linux 0.11 的设计中，进程 0 创建进程 1 时，复制了 160 个</description></item><item><title>30.写时复制</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/30.%E5%86%99%E6%97%B6%E5%A4%8D%E5%88%B6%E5%B0%B1%E8%BF%99%E4%B9%88%E5%87%A0%E8%A1%8C%E4%BB%A3%E7%A0%81/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/30.%E5%86%99%E6%97%B6%E5%A4%8D%E5%88%B6%E5%B0%B1%E8%BF%99%E4%B9%88%E5%87%A0%E8%A1%8C%E4%BB%A3%E7%A0%81/</guid><description>30.写时复制 储备知识 32 位模式下，Intel 设计了页目录表和页表两种结构，用来给程序</description></item><item><title>31.拿到硬盘信息</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/31.%E6%8B%BF%E5%88%B0%E7%A1%AC%E7%9B%98%E4%BF%A1%E6%81%AF/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/31.%E6%8B%BF%E5%88%B0%E7%A1%AC%E7%9B%98%E4%BF%A1%E6%81%AF/</guid><description>31.拿到硬盘信息 上一个大部分的名字叫一个新进程的诞生，讲述了进程 0 调用了 fork 函数创建</description></item><item><title>32.加载根文件系统</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/32.%E5%8A%A0%E8%BD%BD%E6%A0%B9%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/32.%E5%8A%A0%E8%BD%BD%E6%A0%B9%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid><description>32.加载根文件系统 书接上回，上回书咱们说到，我们已经把硬盘的基本信息存入了 hd_i</description></item><item><title>33.打开终端设备文件</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/33.%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF%E8%AE%BE%E5%A4%87%E6%96%87%E4%BB%B6/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/33.%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF%E8%AE%BE%E5%A4%87%E6%96%87%E4%BB%B6/</guid><description>33.打开终端设备文件 书接上回，上回书咱们说到， setup 函数的一番折腾，加载了根文件系统，</description></item><item><title>34.进程2的创建</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/34.%E8%BF%9B%E7%A8%8B2%E7%9A%84%E5%88%9B%E5%BB%BA/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/34.%E8%BF%9B%E7%A8%8B2%E7%9A%84%E5%88%9B%E5%BB%BA/</guid><description>34.进程2的创建 书接上回，上回书咱们说到，进程 1 通过 open 函数建立了与外设交互的能力，</description></item><item><title>35.扒开execve的皮</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/35.execve%E5%8A%A0%E8%BD%BD%E5%B9%B6%E6%89%A7%E8%A1%8Cshell%E7%A8%8B%E5%BA%8F/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/35.execve%E5%8A%A0%E8%BD%BD%E5%B9%B6%E6%89%A7%E8%A1%8Cshell%E7%A8%8B%E5%BA%8F/</guid><description>35.扒开execve的皮 书接上回，上回书咱们说到，进程 1 再次通过 fork 函数创建了进程 2</description></item><item><title>36.缺页中断</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/36.%E7%BC%BA%E9%A1%B5%E4%B8%AD%E6%96%AD/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/36.%E7%BC%BA%E9%A1%B5%E4%B8%AD%E6%96%AD/</guid><description>36.缺页中断 书接上回，上回书咱们说到，进程 2 通过 execve 函数，将自己摇身一变成为 /bin/sh 程序，</description></item><item><title>37.shell程序跑起来了</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/37.shell%E7%A8%8B%E5%BA%8F%E8%B7%91%E8%B5%B7%E6%9D%A5%E4%BA%86/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/37.shell%E7%A8%8B%E5%BA%8F%E8%B7%91%E8%B5%B7%E6%9D%A5%E4%BA%86/</guid><description>37.shell程序跑起来了 书接上回，上回书咱们说到，Linux 通过缺页中断处理过程</description></item><item><title>38.操作系统启动完毕</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/38.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%AE%8C%E6%AF%95/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/38.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%AE%8C%E6%AF%95/</guid><description>38.操作系统启动完毕 书接上回，上回书咱们说到一个 shell 程序的执行原理，至此我们的操作系</description></item><item><title>39.调试Linux最早期的代码</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/39.%E7%95%AA%E5%A4%96%E7%AF%87-linux_0.11%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/39.%E7%95%AA%E5%A4%96%E7%AF%87-linux_0.11%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95/</guid><description>39.调试Linux最早期的代码 Linux 0.11 是 Linux 最早期的代码，非常适合作为第一款深入探索操作</description></item><item><title>42.用键盘输入一条命令</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/42.%E7%94%A8%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5%E4%B8%80%E6%9D%A1%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/42.%E7%94%A8%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5%E4%B8%80%E6%9D%A1%E5%91%BD%E4%BB%A4/</guid><description>42.用键盘输入一条命令 新建一个非常简单的 info.txt 文件。 1 2 3 4 5 $ cat &amp;gt; info.txt &amp;lt;&amp;lt;EOF name:flash age:28 language:java EOF 在命令</description></item><item><title>43.shell 程序读取你的命令</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/43.shell%E7%A8%8B%E5%BA%8F%E8%AF%BB%E5%8F%96%E4%BD%A0%E7%9A%84%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/43.shell%E7%A8%8B%E5%BA%8F%E8%AF%BB%E5%8F%96%E4%BD%A0%E7%9A%84%E5%91%BD%E4%BB%A4/</guid><description>43.shell 程序读取你的命令 新建一个非常简单的 info.txt 文件。 1 2 3 4 5 $ cat &amp;gt; info.txt &amp;lt;&amp;lt;EOF name:flash age:28 language:java EOF 在命令行输入</description></item><item><title>44.进程的阻塞与唤醒</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/44.%E8%BF%9B%E7%A8%8B%E7%9A%84%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%94%A4%E9%86%92/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/44.%E8%BF%9B%E7%A8%8B%E7%9A%84%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%94%A4%E9%86%92/</guid><description>44.进程的阻塞与唤醒 新建一个非常简单的 info.txt 文件。 1 2 3 4 5 $ cat &amp;gt; info.txt &amp;lt;&amp;lt;EOF name:flash age:28 language:java EOF 在命令行</description></item><item><title>45.解析并执行 shell 命令</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/45.%E8%A7%A3%E6%9E%90%E5%B9%B6%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/45.%E8%A7%A3%E6%9E%90%E5%B9%B6%E6%89%A7%E8%A1%8Cshell%E5%91%BD%E4%BB%A4/</guid><description>45.解析并执行 shell 命令 新建一个非常简单的 info.txt 文件。 1 2 3 4 5 $ cat &amp;gt; info.txt &amp;lt;&amp;lt;EOF name:flash age:28 language:java EOF 在命令行</description></item><item><title>46.读硬盘数据全流程</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/46.%E8%AF%BB%E7%A1%AC%E7%9B%98%E6%95%B0%E6%8D%AE%E5%85%A8%E6%B5%81%E7%A8%8B/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/46.%E8%AF%BB%E7%A1%AC%E7%9B%98%E6%95%B0%E6%8D%AE%E5%85%A8%E6%B5%81%E7%A8%8B/</guid><description>46.读硬盘数据全流程 新建一个非常简单的 info.txt 文件。 1 2 3 4 5 $ cat &amp;gt; info.txt &amp;lt;&amp;lt;EOF name:flash age:28 language:java EOF 在命令行</description></item><item><title>47.读取硬盘数据的细节</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/47.%E8%AF%BB%E5%8F%96%E7%A1%AC%E7%9B%98%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%86%E8%8A%82/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/47.%E8%AF%BB%E5%8F%96%E7%A1%AC%E7%9B%98%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%86%E8%8A%82/</guid><description>47.读取硬盘数据的细节 新建一个非常简单的 info.txt 文件。 1 2 3 4 5 [root@linux0.11]$ cat &amp;gt; info.txt &amp;lt;&amp;lt;EOF name:flash age:28 language:java EOF 在命令</description></item><item><title>48.信号</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/48.%E4%BF%A1%E5%8F%B7/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/48.%E4%BF%A1%E5%8F%B7/</guid><description>48.信号 新建一个非常简单的 info.txt 文件。 1 2 3 4 5 [root@linux0.11]$ cat &amp;gt; info.txt &amp;lt;&amp;lt;EOF name:flash age:28 language:java EOF 在命令行输入一条十分</description></item><item><title>命令执行过程</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/41.%E7%95%AA%E5%A4%96%E7%AF%87-%E8%B7%B3%E7%A5%A8%E6%98%AF%E4%B8%8D%E5%8F%AF%E8%83%BD%E7%9A%84/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC5%E9%83%A8%E5%88%86/41.%E7%95%AA%E5%A4%96%E7%AF%87-%E8%B7%B3%E7%A5%A8%E6%98%AF%E4%B8%8D%E5%8F%AF%E8%83%BD%E7%9A%84/</guid><description>命令执行过程 这部分要讲啥呢？很简单。 新建一个非常简单的 info.txt 文件。 1 2 3 4 5 cat &amp;gt; info.txt &amp;lt;&amp;lt;EOF name:flash age:28</description></item><item><title>整体布局</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/00.%E6%95%B4%E4%BD%93%E5%B8%83%E5%B1%80/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/00.%E6%95%B4%E4%BD%93%E5%B8%83%E5%B1%80/</guid><description>整体布局 六大部分对应到 Linux 0.11 源码从开机到 shell 的流程图 第一部分：进入内核前的苦力活 第二部分</description></item><item><title>第3部分小结</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86%E6%80%BB%E7%BB%93%E4%B8%8E%E5%9B%9E%E9%A1%BE/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC3%E9%83%A8%E5%88%86/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86%E6%80%BB%E7%BB%93%E4%B8%8E%E5%9B%9E%E9%A1%BE/</guid><description>第3部分小结 整个第三部分，我们用前四回的内容讲述了进程调度机制，又用后三回内容讲述了</description></item><item><title>第4部分小结</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%86%E6%80%BB%E7%BB%93%E4%B8%8E%E5%9B%9E%E9%A1%BE/</link><pubDate>Mon, 08 Jan 2024 06:47:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/%E7%AC%AC4%E9%83%A8%E5%88%86/%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%86%E6%80%BB%E7%BB%93%E4%B8%8E%E5%9B%9E%E9%A1%BE/</guid><description>第4部分小结 整个操作系统终于通过四个部分的讲解，完成了它的启动，达到了一个怠速状态，</description></item><item><title>ASM汇编语言基础</title><link>https://justice.bj.cn/post/14.language/asm/asm/</link><pubDate>Fri, 05 Jan 2024 22:16:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/asm/asm/</guid><description>ASM汇编语言基础 简介 计算机最底层的语言是机器语言； 机器语言由一系列机器指令组成，现</description></item><item><title>ELF文件格式</title><link>https://justice.bj.cn/post/21.linux/elf%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/</link><pubDate>Fri, 05 Jan 2024 22:16:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/elf%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F/</guid><description>ELF文件格式 简介 ELF (Executable and Linkable Format)是Linux的可执行文件格式(Windows</description></item><item><title>x86指令编码</title><link>https://justice.bj.cn/post/14.language/asm/x86%E6%8C%87%E4%BB%A4%E7%BC%96%E7%A0%81/</link><pubDate>Fri, 05 Jan 2024 22:16:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/asm/x86%E6%8C%87%E4%BB%A4%E7%BC%96%E7%A0%81/</guid><description>x86指令编码 简介 参考 X86汇编入门-机器码 - 弦外之音 https://zhuanlan.zhihu.com/p/464774687</description></item><item><title>汇编基础</title><link>https://justice.bj.cn/post/14.language/asm/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 05 Jan 2024 22:16:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/asm/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80/</guid><description>汇编基础 基础知识 1.1 机器语言 机器语言是机器指令的集合。 机器指令是一系列二进制数字，计算</description></item><item><title>EmuElec</title><link>https://justice.bj.cn/post/90.play/emuelec/</link><pubDate>Tue, 02 Jan 2024 15:23:55 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/90.play/emuelec/</guid><description>EmuElec 简介 EmuELEC 是专为 Amlogic（晶晨）S905/S912 方案的盒子开发的游戏系统，它基</description></item><item><title>Grub</title><link>https://justice.bj.cn/post/70.tool/boot/grub/</link><pubDate>Tue, 02 Jan 2024 15:23:55 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/boot/grub/</guid><description>Grub 简介 GRUB（Grand Unified Bootloader）是一个GNU下的启动引导程序，其通</description></item><item><title>neovim</title><link>https://justice.bj.cn/post/70.tool/neovim/</link><pubDate>Tue, 02 Jan 2024 15:23:55 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/neovim/</guid><description>neovim 简介 mac 1 2 3 4 5 6 7 8 9 10 11 12 ## brew 安装neovim brew install neovim/neovim/neovim ## neovim 开发版本的安装 brew tap neovim/neovim brew</description></item><item><title>Rust安装配置</title><link>https://justice.bj.cn/post/14.language/rust/85.rust%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link><pubDate>Tue, 02 Jan 2024 15:23:55 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/85.rust%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid><description>Rust安装配置 简介 rust官方提供了一系列工具，用于rust的开发及管理, 包括： rustup</description></item><item><title>Rust异步框架之Tokio</title><link>https://justice.bj.cn/post/14.language/rust/rust-tokio/</link><pubDate>Tue, 02 Jan 2024 15:23:55 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust-tokio/</guid><description>Rust异步框架之Tokio 简介 tokio中的管道 tokio 提供了几种不同功能的channe</description></item><item><title>Rust常用库</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%B8%B8%E7%94%A8%E5%BA%93/</link><pubDate>Sun, 10 Dec 2023 16:58:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%B8%B8%E7%94%A8%E5%BA%93/</guid><description>Rust常用库 日志/监控 网络 web框架 参考</description></item><item><title>AList</title><link>https://justice.bj.cn/post/70.tool/alist/</link><pubDate>Sun, 26 Nov 2023 14:52:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/alist/</guid><description>AList 简介 小米路由安装 从github下载小米路由可用的alist程序; 1 2 3 4 5 6 7 8 ##</description></item><item><title>Chubao-Raft</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubao-raft/</link><pubDate>Fri, 24 Nov 2023 22:01:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubao-raft/</guid><description>Chubao-Raft 简介 Chubao Raft 是 chubaofs 项目使用的multigroup-raft 库，是在 etcd raft 库上进行了重构和优</description></item><item><title>ToyDB</title><link>https://justice.bj.cn/post/30.architech/toydb/</link><pubDate>Fri, 24 Nov 2023 22:01:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/toydb/</guid><description>ToyDB 简介 toydb是Erik Grinaker为学习rust语言而开发的分布式sql数据</description></item><item><title>Rust枚举(enum)</title><link>https://justice.bj.cn/post/14.language/rust/22.rust%E6%9E%9A%E4%B8%BEenum/</link><pubDate>Fri, 17 Nov 2023 20:12:27 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/22.rust%E6%9E%9A%E4%B8%BEenum/</guid><description>Rust枚举(enum) 简介 enum用于表示同一个可能拥有可数不同状态对象的结构； e</description></item><item><title>sass</title><link>https://justice.bj.cn/post/14.language/web/sass/</link><pubDate>Fri, 17 Nov 2023 20:12:27 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/web/sass/</guid><description>sass 简介 Sass (全称：Syntactically Awesome Stylesheets) 是一个 CSS 预处理器，用于扩展CSS，减少</description></item><item><title>Vuex</title><link>https://justice.bj.cn/post/14.language/web/vuex/</link><pubDate>Fri, 17 Nov 2023 20:12:27 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/web/vuex/</guid><description>Vuex 简介 Vuex是专门为 Vue.js 设计的状态管理库， 参考</description></item><item><title>Vue基础</title><link>https://justice.bj.cn/post/14.language/web/vue%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 17 Nov 2023 20:12:27 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/web/vue%E5%9F%BA%E7%A1%80/</guid><description>Vue基础 简介 Vue是一套用于构建用户界面的渐进式框架，采用自底向上逐层设计，核心库</description></item><item><title>B-Tree, B+Tree, B*Tree</title><link>https://justice.bj.cn/post/12.data_struct/tree/b-tree/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tree/b-tree/</guid><description>B-Tree, B+Tree, B*Tree B树(B-Tree) B-Tree是1972年由Rudolf Bayer和Ed M. M</description></item><item><title>Bazel</title><link>https://justice.bj.cn/post/70.tool/bazel/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/bazel/</guid><description>Bazel 简介 Bazel是Google开源的自动化构建工具， 特点 构建快。支持增量编译。对依赖</description></item><item><title>brew</title><link>https://justice.bj.cn/post/70.tool/brew/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/brew/</guid><description>brew 简介 操作 安装指定版本 1 2 3 $ git clone http://github.com/homebrew/homebrew-core $ vi homebrew-core/Formula/xxxx.rb $ brew install homebrew-core/Formula/xxxx.rb 更换Homebrew源 1 2 3 4 5 6</description></item><item><title>clonezilla</title><link>https://justice.bj.cn/post/70.tool/clonezilla/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/clonezilla/</guid><description>clonezilla 简介 1. initrd.img修改 1 2 3 4 5 6 7 8 9 ### 解压initrd.img $ xz -d initrd.img.xz</description></item><item><title>curl</title><link>https://justice.bj.cn/post/70.tool/curl/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/curl/</guid><description>curl 简介 常用操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ## GET ## PUT json data $ curl -X PUT $consul_url -d @- &amp;lt;&amp;lt;EOF { &amp;#34;id&amp;#34;: &amp;#34;${id}&amp;#34;, &amp;#34;name&amp;#34;: &amp;#34;${name}&amp;#34;,</description></item><item><title>Rust交叉编译</title><link>https://justice.bj.cn/post/14.language/rust/rust%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</guid><description>Rust交叉编译 简介 Macos平台编译linux 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 ##</description></item><item><title>关于数学和人文社科关系的讨论</title><link>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/04.%E5%85%B3%E4%BA%8E%E6%95%B0%E5%AD%A6%E5%92%8C%E4%BA%BA%E6%96%87%E7%A4%BE%E7%A7%91%E5%85%B3%E7%B3%BB%E7%9A%84%E8%AE%A8%E8%AE%BA/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/04.%E5%85%B3%E4%BA%8E%E6%95%B0%E5%AD%A6%E5%92%8C%E4%BA%BA%E6%96%87%E7%A4%BE%E7%A7%91%E5%85%B3%E7%B3%BB%E7%9A%84%E8%AE%A8%E8%AE%BA/</guid><description>关于数学和人文社科关系的讨论 在第2、3章中，我们在用数学工具定义“权力”、“民智”等</description></item><item><title>导论</title><link>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/01.%E5%AF%BC%E8%AE%BA/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/01.%E5%AF%BC%E8%AE%BA/</guid><description>导论 一、从新冠疫情说起 2019年年底，新冠疫情最早在中国被发现，随后中国通过封城等一</description></item><item><title>模型介绍</title><link>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/02.%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/02.%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D/</guid><description>模型介绍 0、模型的基本元素 在初级经济学中，用 $U_{A}=(p-c)x$ 来表示行动者A的收益，其中: x为A的投</description></item><item><title>模型拓展</title><link>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/03.%E6%A8%A1%E5%9E%8B%E6%8B%93%E5%B1%95/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/03.%E6%A8%A1%E5%9E%8B%E6%8B%93%E5%B1%95/</guid><description>模型拓展 在上一章的结尾，我们已经通过数学的方式，证明了“只要博弈双方都是理性的，那么</description></item><item><title>终端</title><link>https://justice.bj.cn/post/70.tool/console/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/console/</guid><description>终端 终端常用快捷键 移到行首: ctrl + a 移到行尾: ctrl + e 向右移动一个字符: ctrl + f 向左移动一</description></item><item><title>索引处的解码字符串</title><link>https://justice.bj.cn/post/leetcode/880.%E7%B4%A2%E5%BC%95%E5%A4%84%E7%9A%84%E8%A7%A3%E7%A0%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Mon, 18 Sep 2023 17:34:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/880.%E7%B4%A2%E5%BC%95%E5%A4%84%E7%9A%84%E8%A7%A3%E7%A0%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>索引处的解码字符串 Category Difficulty Likes Dislikes algorithms Medium (27.00%) 181 - Tags segment-tree | line-sweep Companies Unknown 给定一个编码字符串 S。请你找出 解码字</description></item><item><title>专题：二分查找</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Sun, 17 Sep 2023 09:23:03 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>专题：二分查找 简介 二分查找法是一种高效的查找方法, 其拥有$log(n)$的时间复杂度</description></item><item><title>打家劫舍</title><link>https://justice.bj.cn/post/leetcode/198.%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</link><pubDate>Sun, 17 Sep 2023 09:23:03 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/198.%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</guid><description>打家劫舍 Category Difficulty Likes Dislikes algorithms Medium (52.98%) 2095 - Tags dynamic-programming Companies airbnb | linkedin 你是一个专业的小偷，计划偷窃沿街的房屋。每间房</description></item><item><title>绝对差值和</title><link>https://justice.bj.cn/post/leetcode/1818.%E7%BB%9D%E5%AF%B9%E5%B7%AE%E5%80%BC%E5%92%8C/</link><pubDate>Sun, 17 Sep 2023 09:23:03 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1818.%E7%BB%9D%E5%AF%B9%E5%B7%AE%E5%80%BC%E5%92%8C/</guid><description>绝对差值和 Category Difficulty Likes Dislikes algorithms Medium (37.55%) 156 - Tags Unknown Companies Unknown 给你两个正整数数组 nums1 和 nums2 ，数组的长度都是 n 。 数组</description></item><item><title>Rust 二叉树</title><link>https://justice.bj.cn/post/14.language/rust/rust-%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Wed, 13 Sep 2023 21:40:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust-%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>Rust 二叉树 定义 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #[derive(Debug, PartialEq, Eq)]pubstruct TreeNode{pubval: i32,publeft: Option&amp;lt;Rc&amp;lt;RefCell&amp;lt;TreeNode&amp;gt;&amp;gt;&amp;gt;,pubright: Option&amp;lt;Rc&amp;lt;RefCell&amp;lt;TreeNode&amp;gt;&amp;gt;&amp;gt;,}implTreeNode{#[inline]pubfn new(val: i32)-&amp;gt; Self{TreeNode{val,left: None,right: None,}}} 1 2 3 4 5 6 7</description></item><item><title>二叉树的层序遍历</title><link>https://justice.bj.cn/post/leetcode/102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Wed, 13 Sep 2023 21:40:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/102.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>二叉树的层序遍历 Category Difficulty Likes Dislikes algorithms Medium (60.88%) 391 - Tags tree | breadth-first-search Companies amazon | apple | bloomberg | facebook | linkedin | microsoft 给定一个二叉树，返</description></item><item><title>翻转对</title><link>https://justice.bj.cn/post/leetcode/493.%E7%BF%BB%E8%BD%AC%E5%AF%B9/</link><pubDate>Wed, 13 Sep 2023 21:40:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/493.%E7%BF%BB%E8%BD%AC%E5%AF%B9/</guid><description>翻转对 Category Difficulty Likes Dislikes algorithms Hard (36.60%) 418 - Tags binary-search | divide-and-conquer | sort | binary-indexed-tree | segment-tree Companies google 给定一个数组 nums ，如果 i &amp;lt; j 且 nums[i] &amp;gt; 2*nums[j] 我</description></item><item><title>专题：二叉树</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Tue, 12 Sep 2023 08:46:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>专题：二叉树 简介 二叉树是一个递归的结构 基本操作 遍历 计算高度 计算宽度 遍历 前序遍历: 又叫</description></item><item><title>二叉树展开为链表</title><link>https://justice.bj.cn/post/leetcode/114.%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</link><pubDate>Tue, 12 Sep 2023 08:46:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/114.%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/</guid><description>二叉树展开为链表 Category Difficulty Likes Dislikes algorithms Medium (68.83%) 340 - Tags tree | depth-first-search Companies microsoft 给定一个二叉树，原地将它展开为一个单链</description></item><item><title>二叉树的右视图</title><link>https://justice.bj.cn/post/leetcode/199.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE/</link><pubDate>Tue, 12 Sep 2023 08:46:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/199.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE/</guid><description>二叉树的右视图 Category Difficulty Likes Dislikes algorithms Medium (65.76%) 827 - Tags tree | depth-first-search | breadth-first-search Companies amazon 给定一个二叉树的 根节点 root，想象</description></item><item><title>二叉树的最大深度</title><link>https://justice.bj.cn/post/leetcode/104.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6/</link><pubDate>Tue, 12 Sep 2023 08:46:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/104.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6/</guid><description>二叉树的最大深度 Category Difficulty Likes Dislikes algorithms Easy (77.12%) 1655 - Tags tree | depth-first-search Companies apple | linkedin | uber | yahoo 给定一个二叉树 root ，返回其最</description></item><item><title>二叉树的最小深度</title><link>https://justice.bj.cn/post/leetcode/111.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6/</link><pubDate>Tue, 12 Sep 2023 08:46:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/111.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6/</guid><description>二叉树的最小深度 Category Difficulty Likes Dislikes algorithms Easy (49.24%) 656 - Tags tree | depth-first-search | breadth-first-search Companies Unknown 给定一个二叉树，找出其最小深度。 最</description></item><item><title>专题：归并排序</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid><description>专题：归并排序 简介 归并排序是一种$ Nlog(N) $时间复杂度的排序算法, 其主要使用了分治的思想，</description></item><item><title>二叉树的层序遍历 II</title><link>https://justice.bj.cn/post/leetcode/107.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86ii/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/107.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86ii/</guid><description>二叉树的层序遍历 II Category Difficulty Likes Dislikes algorithms Medium (72.24%) 666 - Tags tree | breadth-first-search Companies Unknown 给你二叉树的根节点 root ，返回其节点值 自</description></item><item><title>最大数</title><link>https://justice.bj.cn/post/leetcode/179.%E6%9C%80%E5%A4%A7%E6%95%B0/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/179.%E6%9C%80%E5%A4%A7%E6%95%B0/</guid><description>最大数 Category Difficulty Likes Dislikes algorithms Medium (40.98%) 1185 - Tags sort Companies Unknown 给定一组非负整数 nums，重新排列每个数的顺序（每个</description></item><item><title>区域和检索 - 数组可修改</title><link>https://justice.bj.cn/post/leetcode/307.%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2-%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BF%AE%E6%94%B9/</link><pubDate>Sun, 10 Sep 2023 17:31:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/307.%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2-%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BF%AE%E6%94%B9/</guid><description>区域和检索 - 数组可修改 Category Difficulty Likes Dislikes algorithms Medium (52.17%) 619 - Tags binary-indexed-tree | segment-tree Companies Unknown 给你一个数组 nums ，请你完成两类查询</description></item><item><title>计算右侧小于当前元素的个数</title><link>https://justice.bj.cn/post/leetcode/315.%E8%AE%A1%E7%AE%97%E5%8F%B3%E4%BE%A7%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%AA%E6%95%B0/</link><pubDate>Sun, 10 Sep 2023 17:31:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/315.%E8%AE%A1%E7%AE%97%E5%8F%B3%E4%BE%A7%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%AA%E6%95%B0/</guid><description>计算右侧小于当前元素的个数 Category Difficulty Likes Dislikes algorithms Hard (43.45%) 1009 - Tags binary-search | divide-and-conquer | sort | binary-indexed-tree | segment-tree Companies google 给你一个整数数组</description></item><item><title>区间和的个数</title><link>https://justice.bj.cn/post/leetcode/327.%E5%8C%BA%E9%97%B4%E5%92%8C%E7%9A%84%E4%B8%AA%E6%95%B0/</link><pubDate>Sat, 09 Sep 2023 18:46:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/327.%E5%8C%BA%E9%97%B4%E5%92%8C%E7%9A%84%E4%B8%AA%E6%95%B0/</guid><description>区间和的个数 Category Difficulty Likes Dislikes algorithms Hard (40.58%) 557 - Tags binary-search | divide-and-conquer | sort | binary-indexed-tree | segment-tree Companies google 给你一个整数数组 nums 以及两个整数</description></item><item><title>专题：树状数组</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</link><pubDate>Sat, 09 Sep 2023 10:21:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</guid><description>专题：树状数组 简介 树状数组是一种用来计算区间和(涉及元素修改)的高效数据结构，其查询</description></item><item><title>专题- 并查集</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%B9%B6%E6%9F%A5%E9%9B%86/</link><pubDate>Fri, 08 Sep 2023 16:58:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid><description>专题: 并查集 简介 并查集是图论中计算「动态连通性」的一种数据结构, 可用于计算图的连通性</description></item><item><title>寻找峰值</title><link>https://justice.bj.cn/post/leetcode/162.%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC/</link><pubDate>Fri, 08 Sep 2023 16:58:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/162.%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC/</guid><description>寻找峰值 Category Difficulty Likes Dislikes algorithms Medium (49.31%) 1113 - Tags array | binary-search Companies google | microsoft 峰值元素是指其值严格大于左右相邻值的元素。</description></item><item><title>移除最多的同行或同列石头</title><link>https://justice.bj.cn/post/leetcode/947.%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E8%A1%8C%E6%88%96%E5%90%8C%E5%88%97%E7%9F%B3%E5%A4%B4/</link><pubDate>Fri, 08 Sep 2023 16:58:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/947.%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E8%A1%8C%E6%88%96%E5%90%8C%E5%88%97%E7%9F%B3%E5%A4%B4/</guid><description>移除最多的同行或同列石头 Category Difficulty Likes Dislikes algorithms Medium (61.50%) 324 - Tags binary-search Companies Unknown n 块石头放置在二维平面中的一些整数</description></item><item><title>被围绕的区域</title><link>https://justice.bj.cn/post/leetcode/130.%E8%A2%AB%E5%9B%B4%E7%BB%95%E7%9A%84%E5%8C%BA%E5%9F%9F/</link><pubDate>Fri, 08 Sep 2023 16:58:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/130.%E8%A2%AB%E5%9B%B4%E7%BB%95%E7%9A%84%E5%8C%BA%E5%9F%9F/</guid><description>被围绕的区域 Category Difficulty Likes Dislikes algorithms Medium (46.23%) 942 - Tags depth-first-search | breadth-first-search | union-find Companies Unknown 给你一个 m x n 的矩阵 board ，由若干字符 'X' 和</description></item><item><title>寻找旋转排序数组中的最小值</title><link>https://justice.bj.cn/post/leetcode/153.%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/</link><pubDate>Thu, 07 Sep 2023 19:21:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/153.%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC/</guid><description>寻找旋转排序数组中的最小值 Category Difficulty Likes Dislikes algorithms Medium (57.09%) 1014 - Tags array | binary-search Companies microsoft 已知一个长度为 n 的数组，预先</description></item><item><title>寻找旋转排序数组中的最小值 II</title><link>https://justice.bj.cn/post/leetcode/154.%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BCii/</link><pubDate>Thu, 07 Sep 2023 19:21:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/154.%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BCii/</guid><description>寻找旋转排序数组中的最小值 II Category Difficulty Likes Dislikes algorithms Hard (52.46%) 633 - Tags array | binary-search Companies Unknown 已知一个长度为 n 的数组，预</description></item><item><title>搜索旋转排序数组</title><link>https://justice.bj.cn/post/leetcode/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</link><pubDate>Thu, 07 Sep 2023 19:21:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</guid><description>搜索旋转排序数组 Category Difficulty Likes Dislikes algorithms Medium (42.99%) 1743 - Tags array | binary-search Companies bloomberg | facebook | linkedin | microsoft | uber 整数数组 nums 按升序排列，</description></item><item><title>修车的最少时间</title><link>https://justice.bj.cn/post/leetcode/2594.%E4%BF%AE%E8%BD%A6%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4/</link><pubDate>Thu, 07 Sep 2023 15:58:40 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2594.%E4%BF%AE%E8%BD%A6%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4/</guid><description>修车的最少时间 Category Difficulty Likes Dislikes algorithms Medium (45.49%) 70 - Tags Unknown Companies Unknown 给你一个整数数组 ranks ，表示一些机械工的 能力值 。</description></item><item><title>小伙子的scratch游戏</title><link>https://justice.bj.cn/post/92.scratch/ff_game/</link><pubDate>Thu, 07 Sep 2023 15:58:40 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/92.scratch/ff_game/</guid><description>小伙子的scratch游戏 躲闪</description></item><item><title>最深叶节点的最近公共祖先</title><link>https://justice.bj.cn/post/leetcode/1123.%E6%9C%80%E6%B7%B1%E5%8F%B6%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link><pubDate>Thu, 07 Sep 2023 15:58:40 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1123.%E6%9C%80%E6%B7%B1%E5%8F%B6%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid><description>最深叶节点的最近公共祖先 Category Difficulty Likes Dislikes algorithms Medium (71.90%) 220 - Tags Unknown Companies Unknown 给你一个有根节点 root 的二叉树，返回它</description></item><item><title>正则表达式</title><link>https://justice.bj.cn/post/70.tool/regex/</link><pubDate>Thu, 07 Sep 2023 15:58:40 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/regex/</guid><description>正则表达式 普通正则表达式 位置相关 1 2 3 4 5 6 7 ^ 表示锚定行首，此字符后面的任意内容必</description></item><item><title>普罗米修斯受难的一日</title><link>https://justice.bj.cn/post/09.pub/poem/%E6%9E%97%E6%98%AD-%E6%99%AE%E7%BD%97%E7%B1%B3%E4%BF%AE%E6%96%AF%E5%8F%97%E9%9A%BE%E7%9A%84%E4%B8%80%E6%97%A5/</link><pubDate>Wed, 06 Sep 2023 23:31:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/poem/%E6%9E%97%E6%98%AD-%E6%99%AE%E7%BD%97%E7%B1%B3%E4%BF%AE%E6%96%AF%E5%8F%97%E9%9A%BE%E7%9A%84%E4%B8%80%E6%97%A5/</guid><description>普罗米修斯受难的一日 林昭 一 阿波罗的金车渐渐驶近， 天边升起了嫣红的黎明， 高加索的峰岭迎</description></item><item><title>林昭-血衣题跋</title><link>https://justice.bj.cn/post/09.pub/poem/%E6%9E%97%E6%98%AD-%E8%A1%80%E8%A1%A3%E9%A2%98%E8%B7%8B/</link><pubDate>Wed, 06 Sep 2023 23:31:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/poem/%E6%9E%97%E6%98%AD-%E8%A1%80%E8%A1%A3%E9%A2%98%E8%B7%8B/</guid><description>林昭-血衣题跋 寸心之悲愤冤苦沉痛激切，不堪追忆，不可回想，不忍言说！忆之如痴，想之欲</description></item><item><title>海鸥之歌</title><link>https://justice.bj.cn/post/09.pub/poem/%E6%9E%97%E6%98%AD-%E6%B5%B7%E9%B8%A5%E4%B9%8B%E6%AD%8C/</link><pubDate>Wed, 06 Sep 2023 23:31:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/poem/%E6%9E%97%E6%98%AD-%E6%B5%B7%E9%B8%A5%E4%B9%8B%E6%AD%8C/</guid><description>海鸥之歌 林昭 一 灰蓝色的海洋上暮色苍黄， 一艘船驶行着穿越波浪， 满载着带有镣链的囚犯， 去</description></item><item><title>献给第三次世界大战的勇士</title><link>https://justice.bj.cn/post/09.pub/poem/%E4%BD%9A%E5%90%8D-%E7%8C%AE%E7%BB%99%E7%AC%AC%E4%B8%89%E6%AC%A1%E4%B8%96%E7%95%8C%E5%A4%A7%E6%88%98%E7%9A%84%E5%8B%87%E5%A3%AB/</link><pubDate>Wed, 06 Sep 2023 23:31:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/poem/%E4%BD%9A%E5%90%8D-%E7%8C%AE%E7%BB%99%E7%AC%AC%E4%B8%89%E6%AC%A1%E4%B8%96%E7%95%8C%E5%A4%A7%E6%88%98%E7%9A%84%E5%8B%87%E5%A3%AB/</guid><description>献给第三次世界大战的勇士 佚名 一 摘下发白的军帽, 献上洁素的花圈, 轻轻地， 轻轻地走到你的</description></item><item><title>离开你的时候</title><link>https://justice.bj.cn/post/09.pub/poem/%E4%BD%9A%E5%90%8D-%E7%A6%BB%E5%BC%80%E4%BD%A0%E7%9A%84%E6%97%B6%E5%80%99/</link><pubDate>Wed, 06 Sep 2023 23:31:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/poem/%E4%BD%9A%E5%90%8D-%E7%A6%BB%E5%BC%80%E4%BD%A0%E7%9A%84%E6%97%B6%E5%80%99/</guid><description>离开你的时候 佚名 离开你的时候 是乍冷的初秋 萧瑟的秋风中 凝着我淡淡的哀愁 思念你的时候 时光</description></item><item><title>给母亲的信</title><link>https://justice.bj.cn/post/09.pub/poem/%E6%9E%97%E6%98%AD-%E7%BB%99%E6%AF%8D%E4%BA%B2%E7%9A%84%E4%BF%A1/</link><pubDate>Wed, 06 Sep 2023 23:31:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/poem/%E6%9E%97%E6%98%AD-%E7%BB%99%E6%AF%8D%E4%BA%B2%E7%9A%84%E4%BF%A1/</guid><description>给母亲的信 林昭 见不见的你弄些东西斋斋我， 我要吃呀，妈妈！ 给我炖一锅牛肉，煨一锅羊肉，</description></item><item><title>最多可以摧毁的敌人城堡数目</title><link>https://justice.bj.cn/post/leetcode/2511.%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E6%91%A7%E6%AF%81%E7%9A%84%E6%95%8C%E4%BA%BA%E5%9F%8E%E5%A0%A1%E6%95%B0%E7%9B%AE/</link><pubDate>Tue, 05 Sep 2023 22:07:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2511.%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E6%91%A7%E6%AF%81%E7%9A%84%E6%95%8C%E4%BA%BA%E5%9F%8E%E5%A0%A1%E6%95%B0%E7%9B%AE/</guid><description>最多可以摧毁的敌人城堡数目 题目描述 给你一个长度为 n ，下标从 0 开始的整数数组 forts ，表示一</description></item><item><title>Ozone</title><link>https://justice.bj.cn/post/30.architech/ozone/</link><pubDate>Sat, 02 Sep 2023 11:43:36 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/ozone/</guid><description>Ozone 简介 Ozone是专门为Hadoop设计的可扩展的分布式对象存储系统。Hadoop生</description></item><item><title>Pow(x, n)</title><link>https://justice.bj.cn/post/leetcode/50.pow/</link><pubDate>Sat, 02 Sep 2023 11:43:36 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/50.pow/</guid><description>Pow(x, n) Category Difficulty Likes Dislikes algorithms Medium (37.83%) 944 - Tags math | binary-search Companies bloomberg | facebook | google | linkedin 实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，x</description></item><item><title>岛屿数量</title><link>https://justice.bj.cn/post/leetcode/200.%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F/</link><pubDate>Mon, 21 Aug 2023 22:56:27 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/200.%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F/</guid><description>岛屿数量 Category Difficulty Likes Dislikes algorithms Medium (47.04%) 555 - Tags depth-first-search | breadth-first-search | union-find Companies amazon | facebook | google | microsoft | zenefits 给你一个由 '1'（陆地）和</description></item><item><title>最长连续序列</title><link>https://justice.bj.cn/post/leetcode/128.%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</link><pubDate>Mon, 21 Aug 2023 22:56:27 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/128.%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</guid><description>最长连续序列 Category Difficulty Likes Dislikes algorithms Medium (55.14%) 1567 - Tags array | union-find Companies facebook | google 给定一个未排序的整数数组 nums ，找出数字连</description></item><item><title>统计公平数对的数目</title><link>https://justice.bj.cn/post/leetcode/2563.%E7%BB%9F%E8%AE%A1%E5%85%AC%E5%B9%B3%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE/</link><pubDate>Sun, 20 Aug 2023 16:42:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2563.%E7%BB%9F%E8%AE%A1%E5%85%AC%E5%B9%B3%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE/</guid><description>统计公平数对的数目 Category Difficulty Likes Dislikes algorithms Medium (34.06%) 38 - Tags Unknown Companies Unknown 给你一个下标从 0 开始、长度为 n 的整数数组</description></item><item><title>二叉树的中序遍历</title><link>https://justice.bj.cn/post/leetcode/94.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Sun, 20 Aug 2023 14:56:31 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/94.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>二叉树的中序遍历 Category Difficulty Likes Dislikes algorithms Medium (68.96%) 339 - Tags Companies 给定一个二叉树，返回它的*中序 *遍历。 示例: 1</description></item><item><title>连续数组</title><link>https://justice.bj.cn/post/leetcode/525.%E8%BF%9E%E7%BB%AD%E6%95%B0%E7%BB%84/</link><pubDate>Sun, 20 Aug 2023 14:56:31 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/525.%E8%BF%9E%E7%BB%AD%E6%95%B0%E7%BB%84/</guid><description>连续数组 Category Difficulty Likes Dislikes algorithms Medium (54.72%) 671 - Tags hash-table Companies facebook 给定一个二进制数组 nums , 找到含有相同数量的 0 和 1 的最</description></item><item><title>专题：买卖股票</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8/</guid><description>专题：买卖股票 简介 股票买卖时机问题是 leetcode 中一类很常见的问题, 题目表述如下: 有一个数组 prices,</description></item><item><title>专题：区间问题</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</guid><description>专题：区间问题 简介 相关题目 56.合并区间 435.无重叠区间</description></item><item><title>专题：子串和子序列</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%AD%90%E4%B8%B2%E5%92%8C%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E5%AD%90%E4%B8%B2%E5%92%8C%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>专题：子串和子序列 简介 子串和子序列是 leetcode 中最常见的题目类型之一. 都是在一个数组上的问题</description></item><item><title>专题：括号问题</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E6%8B%AC%E5%8F%B7%E9%97%AE%E9%A2%98/</guid><description>专题：括号问题 简介 相关题目 20.有效的括号 22.括号生成 32.最长有效括号</description></item><item><title>专题：跳跃游戏</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid><description>专题：跳跃游戏 简介 题目 55.跳跃游戏： 45.跳跃游戏II:</description></item><item><title>专题：链表</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 20 Aug 2023 07:16:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E9%93%BE%E8%A1%A8/</guid><description>专题：链表 简介 链表是最基本，最常用的结构之一。 链表具有以下注意特性： 顺序访问； 离散；</description></item><item><title>连续的子数组和</title><link>https://justice.bj.cn/post/leetcode/523.%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</link><pubDate>Sat, 19 Aug 2023 22:59:47 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/523.%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</guid><description>连续的子数组和 Category Difficulty Likes Dislikes algorithms Medium (28.56%) 526 - Tags math | dynamic-programming Companies facebook 给你一个整数数组 nums 和一个整数 k ，编写一个</description></item><item><title>把二叉搜索树转换为累加树</title><link>https://justice.bj.cn/post/leetcode/538.%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%B4%AF%E5%8A%A0%E6%A0%91/</link><pubDate>Sat, 19 Aug 2023 16:27:46 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/538.%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%B4%AF%E5%8A%A0%E6%A0%91/</guid><description>把二叉搜索树转换为累加树 Category Difficulty Likes Dislikes algorithms Medium (76.71%) 934 - Tags tree Companies amazon 给出二叉** 搜索 **树的根节点，该</description></item><item><title>K 个元素的最大和</title><link>https://justice.bj.cn/post/leetcode/2656.k%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C/</link><pubDate>Sat, 19 Aug 2023 12:11:55 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2656.k%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C/</guid><description>K 个元素的最大和 Category Difficulty Likes Dislikes algorithms Easy (83.36%) 11 - Tags Unknown Companies Unknown 给你一个下标从 0 开始的整数数组 nums 和一个整数</description></item><item><title>删除一次得到子数组最大和</title><link>https://justice.bj.cn/post/leetcode/1186.%E5%88%A0%E9%99%A4%E4%B8%80%E6%AC%A1%E5%BE%97%E5%88%B0%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C/</link><pubDate>Sat, 19 Aug 2023 10:50:51 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1186.%E5%88%A0%E9%99%A4%E4%B8%80%E6%AC%A1%E5%BE%97%E5%88%B0%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C/</guid><description>删除一次得到子数组最大和 Category Difficulty Likes Dislikes algorithms Medium (48.11%) 287 - Tags Unknown Companies Unknown 给你一个整数数组，返回它的某个 非空</description></item><item><title>K 次串联后最大子数组之和</title><link>https://justice.bj.cn/post/leetcode/1191.k%E6%AC%A1%E4%B8%B2%E8%81%94%E5%90%8E%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E4%B9%8B%E5%92%8C/</link><pubDate>Sat, 19 Aug 2023 09:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1191.k%E6%AC%A1%E4%B8%B2%E8%81%94%E5%90%8E%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E4%B9%8B%E5%92%8C/</guid><description>K 次串联后最大子数组之和 Category Difficulty Likes Dislikes algorithms Medium (26.97%) 112 - Tags Unknown Companies Unknown 给定一个整数数组 arr 和一个整数 k ，通</description></item><item><title>scratch 简介</title><link>https://justice.bj.cn/post/14.language/scratch/scratch%E7%AE%80%E4%BB%8B/</link><pubDate>Sat, 19 Aug 2023 09:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/scratch/scratch%E7%AE%80%E4%BB%8B/</guid><description>scratch 简介 简介 scratch 游戏 L1 乒乓球 打砖块 祖玛 俄罗斯方块 L2 赛车 打飞机 flappy-bird 吃豆人 塔防游戏 L3 超级玛丽 坦</description></item><item><title>丑数 II</title><link>https://justice.bj.cn/post/leetcode/264.%E4%B8%91%E6%95%B0ii/</link><pubDate>Sat, 19 Aug 2023 09:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/264.%E4%B8%91%E6%95%B0ii/</guid><description>丑数 II Category Difficulty Likes Dislikes algorithms Medium (58.57%) 1097 - Tags math | dynamic-programming | heap Companies Unknown 给你一个整数 n ，请你找出并返回第 n 个 丑数 。 丑</description></item><item><title>乘积最大子数组</title><link>https://justice.bj.cn/post/leetcode/152.%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84/</link><pubDate>Fri, 18 Aug 2023 22:55:01 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/152.%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84/</guid><description>乘积最大子数组 Category Difficulty Likes Dislikes algorithms Medium (43.20%) 2078 - Tags array | dynamic-programming Companies linkedin 给你一个整数数组 nums ，请你找出数组中乘积最</description></item><item><title>反转字符串中的单词</title><link>https://justice.bj.cn/post/leetcode/151.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D/</link><pubDate>Fri, 18 Aug 2023 22:55:01 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/151.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D/</guid><description>反转字符串中的单词 Category Difficulty Likes Dislikes algorithms Medium (52.15%) 967 - Tags string Companies apple | bloomberg | microsoft | snapchat | yelp 给你一个字符串 s ，请你反</description></item><item><title>最大连续子数组和</title><link>https://justice.bj.cn/post/leetcode/53.%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</link><pubDate>Fri, 18 Aug 2023 22:55:01 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/53.%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</guid><description>最大连续子数组和 Category Difficulty Likes Dislikes algorithms Easy (48.34%) 1430 - Tags array | divide-and-conquer | dynamic-programming Companies bloomberg | linkedin | microsoft 给定一个整数数组 nums ，找到一</description></item><item><title>丑数</title><link>https://justice.bj.cn/post/leetcode/263.%E4%B8%91%E6%95%B0/</link><pubDate>Thu, 17 Aug 2023 16:46:31 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/263.%E4%B8%91%E6%95%B0/</guid><description>丑数 Category Difficulty Likes Dislikes algorithms Easy (50.48%) 414 - Tags math Companies Unknown 丑数就是只包含质因数 2、3 和 5 的正整数。 给你一个整数 n</description></item><item><title>数组的第 K 大子序列和</title><link>https://justice.bj.cn/post/leetcode/2386.%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%ACk%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C/</link><pubDate>Thu, 17 Aug 2023 14:23:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2386.%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%ACk%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C/</guid><description>数组的第 K 大子序列和 Category Difficulty Likes Dislikes algorithms Hard (42.26%) 73 - Tags Unknown Companies Unknown 给你一个整数数组 nums 和一个 正 整数 k 。你可</description></item><item><title>查找和最小的 K 对数字</title><link>https://justice.bj.cn/post/leetcode/373.%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9C%80%E5%B0%8F%E7%9A%84k%E5%AF%B9%E6%95%B0%E5%AD%97/</link><pubDate>Thu, 17 Aug 2023 14:23:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/373.%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9C%80%E5%B0%8F%E7%9A%84k%E5%AF%B9%E6%95%B0%E5%AD%97/</guid><description>查找和最小的 K 对数字 Category Difficulty Likes Dislikes algorithms Medium (40.66%) 505 - Tags heap Companies google | uber 给定两个以 非递减顺序排列 的整数数组</description></item><item><title>只出现一次的数字 II</title><link>https://justice.bj.cn/post/leetcode/137.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97ii/</link><pubDate>Mon, 14 Aug 2023 13:54:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/137.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97ii/</guid><description>只出现一次的数字 II Category Difficulty Likes Dislikes algorithms Medium (71.78%) 1044 - Tags bit-manipulation Companies Unknown 给你一个整数数组 nums ，除某个元素仅出现 一次</description></item><item><title>只出现一次的数字 III</title><link>https://justice.bj.cn/post/leetcode/260.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97iii/</link><pubDate>Mon, 14 Aug 2023 13:54:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/260.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97iii/</guid><description>只出现一次的数字 III Category Difficulty Likes Dislikes algorithms Medium (73.51%) 620 - Tags bit-manipulation Companies Unknown 给定一个整数数组 nums，其中恰好有两个</description></item><item><title>直线上最多的点数</title><link>https://justice.bj.cn/post/leetcode/149.%E7%9B%B4%E7%BA%BF%E4%B8%8A%E6%9C%80%E5%A4%9A%E7%9A%84%E7%82%B9%E6%95%B0/</link><pubDate>Mon, 14 Aug 2023 13:54:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/149.%E7%9B%B4%E7%BA%BF%E4%B8%8A%E6%9C%80%E5%A4%9A%E7%9A%84%E7%82%B9%E6%95%B0/</guid><description>直线上最多的点数 Category Difficulty Likes Dislikes algorithms Hard (39.34%) 505 - Tags hash-table | math Companies apple | linkedin | twitter 给你一个数组 points ，其中 points[i] = [x&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;, y&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;] 表</description></item><item><title>三角形最小路径和</title><link>https://justice.bj.cn/post/leetcode/120.%E4%B8%89%E8%A7%92%E5%BD%A2%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/</link><pubDate>Sun, 13 Aug 2023 22:13:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/120.%E4%B8%89%E8%A7%92%E5%BD%A2%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/</guid><description>三角形最小路径和 Category Difficulty Likes Dislikes algorithms Medium (68.65%) 1243 - Tags array | dynamic-programming Companies Unknown 给定一个三角形 triangle ，找出自顶向下的最小路</description></item><item><title>只出现一次的数字</title><link>https://justice.bj.cn/post/leetcode/136.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</link><pubDate>Sun, 13 Aug 2023 22:13:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/136.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</guid><description>只出现一次的数字 Category Difficulty Likes Dislikes algorithms Easy (72.34%) 2926 - Tags hash-table | bit-manipulation Companies airbnb | palantir 给你一个 非空 整数数组 nums ，除了某个元</description></item><item><title>杨辉三角 II</title><link>https://justice.bj.cn/post/leetcode/119.%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92ii/</link><pubDate>Sun, 13 Aug 2023 22:13:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/119.%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92ii/</guid><description>杨辉三角 II Category Difficulty Likes Dislikes algorithms Easy (68.92%) 502 - Tags array Companies amazon 给定一个非负索引 rowIndex，返回「杨辉三角</description></item><item><title>课程表 II</title><link>https://justice.bj.cn/post/leetcode/210.%E8%AF%BE%E7%A8%8B%E8%A1%A8ii/</link><pubDate>Sun, 13 Aug 2023 20:41:32 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/210.%E8%AF%BE%E7%A8%8B%E8%A1%A8ii/</guid><description>课程表 II Category Difficulty Likes Dislikes algorithms Medium (56.67%) 800 - Tags depth-first-search | breadth-first-search | graph | topological-sort Companies facebook | zenefits 现在你总共有 numCourses 门课需要选，记为 0 到</description></item><item><title>完全平方数</title><link>https://justice.bj.cn/post/leetcode/279.%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</link><pubDate>Sun, 13 Aug 2023 15:00:28 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/279.%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</guid><description>完全平方数 Category Difficulty Likes Dislikes algorithms Medium (66.22%) 1773 - Tags math | dynamic-programming | breadth-first-search Companies google 给你一个整数 n ，返回 和为 n 的完全平方数的</description></item><item><title>课程表</title><link>https://justice.bj.cn/post/leetcode/207.%E8%AF%BE%E7%A8%8B%E8%A1%A8/</link><pubDate>Sun, 13 Aug 2023 15:00:28 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/207.%E8%AF%BE%E7%A8%8B%E8%A1%A8/</guid><description>课程表 Category Difficulty Likes Dislikes algorithms Medium (53.55%) 1660 - Tags depth-first-search | breadth-first-search | graph | topological-sort Companies apple | uber | yelp | zenefits 你这个学期必须选修 numCourses 门课程，</description></item><item><title>单词接龙 II</title><link>https://justice.bj.cn/post/leetcode/126.%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99ii/</link><pubDate>Sun, 13 Aug 2023 12:20:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/126.%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99ii/</guid><description>单词接龙 II Category Difficulty Likes Dislikes algorithms Hard (37.75%) 667 - Tags array | string | backtracking | breadth-first-search Companies amazon | yelp 按字典 wordList 完成从单词 beginWord 到单词 endWord 转化</description></item><item><title>最小高度树</title><link>https://justice.bj.cn/post/leetcode/310.%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91/</link><pubDate>Sun, 13 Aug 2023 12:20:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/310.%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91/</guid><description>最小高度树 Category Difficulty Likes Dislikes algorithms Medium (42.58%) 790 - Tags breadth-first-search | graph Companies google 树是一个无向图，其中任何两个顶点只通过一条路</description></item><item><title>单词接龙</title><link>https://justice.bj.cn/post/leetcode/127.%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99/</link><pubDate>Fri, 11 Aug 2023 15:38:35 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/127.%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99/</guid><description>单词接龙 Category Difficulty Likes Dislikes algorithms Hard (48.24%) 1271 - Tags breadth-first-search Companies amazon | facebook | linkedin | snapchat | yelp 字典 wordList 中从单词 beginWord 和 endWord 的 **转换序列</description></item><item><title>单词拆分 II</title><link>https://justice.bj.cn/post/leetcode/140.%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86ii/</link><pubDate>Fri, 11 Aug 2023 14:48:06 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/140.%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86ii/</guid><description>单词拆分 II Category Difficulty Likes Dislikes algorithms Hard (57.32%) 709 - Tags dynamic-programming | backtracking Companies dropbox | google | snapchat | twitter | uber 给定一个字符串 s 和一个字符串</description></item><item><title>单词拆分</title><link>https://justice.bj.cn/post/leetcode/139.%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86/</link><pubDate>Thu, 10 Aug 2023 20:04:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/139.%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86/</guid><description>单词拆分 Category Difficulty Likes Dislikes algorithms Medium (54.22%) 2231 - Tags dynamic-programming Companies amazon | bloomberg | facebook | google | pocketgems | uber | yahoo 给你一个字符串 s 和一个字符</description></item><item><title>分发糖果</title><link>https://justice.bj.cn/post/leetcode/135.%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/</link><pubDate>Thu, 10 Aug 2023 12:36:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/135.%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/</guid><description>分发糖果 Category Difficulty Likes Dislikes algorithms Hard (50.42%) 1265 - Tags greedy Companies Unknown n 个孩子站成一排。给你一个整数数组 ratings 表示每个孩子的</description></item><item><title>杨辉三角</title><link>https://justice.bj.cn/post/leetcode/118.%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/</link><pubDate>Wed, 09 Aug 2023 21:48:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/118.%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/</guid><description>杨辉三角 Category Difficulty Likes Dislikes algorithms Easy (74.15%) 708 - Tags array Companies apple | twitter 给定一个非负整数 *numRows，*生成「杨辉</description></item><item><title>求根节点到叶节点数字之和</title><link>https://justice.bj.cn/post/leetcode/129.%E6%B1%82%E6%A0%B9%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%B6%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/</link><pubDate>Wed, 09 Aug 2023 21:48:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/129.%E6%B1%82%E6%A0%B9%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%B6%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/</guid><description>求根节点到叶节点数字之和 Category Difficulty Likes Dislikes algorithms Medium (70.09%) 663 - Tags tree | depth-first-search Companies Unknown 给你一个二叉树的根节点 root ，树中</description></item><item><title>不同的子序列</title><link>https://justice.bj.cn/post/leetcode/115.%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Wed, 09 Aug 2023 20:44:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/115.%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>不同的子序列 Category Difficulty Likes Dislikes algorithms Hard (52.21%) 1092 - Tags string | dynamic-programming Companies Unknown 给你两个字符串 s 和 t ，统计并返回在 s 的 子序</description></item><item><title>路径总和</title><link>https://justice.bj.cn/post/leetcode/112.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C/</link><pubDate>Wed, 09 Aug 2023 20:44:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/112.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C/</guid><description>路径总和 Category Difficulty Likes Dislikes algorithms Easy (53.55%) 1222 - Tags tree | depth-first-search Companies microsoft 给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。</description></item><item><title>路径总和 II</title><link>https://justice.bj.cn/post/leetcode/113.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8Cii/</link><pubDate>Wed, 09 Aug 2023 20:44:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/113.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8Cii/</guid><description>路径总和 II Category Difficulty Likes Dislikes algorithms Medium (63.21%) 1013 - Tags tree | depth-first-search Companies bloomberg 给你二叉树的根节点 root 和一个整数目标和 targetSum ，找出</description></item><item><title>平衡二叉树</title><link>https://justice.bj.cn/post/leetcode/110.%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Wed, 09 Aug 2023 08:26:16 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/110.%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>平衡二叉树 Category Difficulty Likes Dislikes algorithms Easy (56.52%) 872 - Tags tree | depth-first-search Companies bloomberg 给定一个二叉树，判断它是否是高度平衡的二叉树</description></item><item><title>有序链表转换二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/109.%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Wed, 09 Aug 2023 08:09:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/109.%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>有序链表转换二叉搜索树 Category Difficulty Likes Dislikes algorithms Medium (76.22%) 659 - Tags linked-list | depth-first-search Companies zenefits 给定一个单链表，其中的元素按升序</description></item><item><title>将有序数组转换为二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/108.%E5%B0%86%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Tue, 08 Aug 2023 12:18:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/108.%E5%B0%86%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>将有序数组转换为二叉搜索树 Category Difficulty Likes Dislikes algorithms Easy (76.25%) 917 - Tags tree | depth-first-search Companies airbnb 给你一个整数数组 nums ，其中元素</description></item><item><title>从前序与中序遍历序列构造二叉树</title><link>https://justice.bj.cn/post/leetcode/105.%E4%BB%8E%E5%89%8D%E5%BA%8F%E4%B8%8E%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Tue, 08 Aug 2023 12:08:12 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/105.%E4%BB%8E%E5%89%8D%E5%BA%8F%E4%B8%8E%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>从前序与中序遍历序列构造二叉树 Category Difficulty Likes Dislikes algorithms Medium (71.24%) 2031 - Tags array | tree | depth-first-search Companies bloomberg 给定两个整数数组 preorder 和</description></item><item><title>二叉树的锯齿形层序遍历</title><link>https://justice.bj.cn/post/leetcode/103.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%94%AF%E9%BD%BF%E5%BD%A2%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</link><pubDate>Tue, 08 Aug 2023 11:14:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/103.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%94%AF%E9%BD%BF%E5%BD%A2%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/</guid><description>二叉树的锯齿形层序遍历 Category Difficulty Likes Dislikes algorithms Medium (57.54%) 752 - Tags stack | tree | breadth-first-search Companies bloomberg | linkedin | microsoft 给你二叉树的根节点 root</description></item><item><title>恢复二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/99.%E6%81%A2%E5%A4%8D%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Tue, 08 Aug 2023 08:13:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/99.%E6%81%A2%E5%A4%8D%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>恢复二叉搜索树 Category Difficulty Likes Dislikes algorithms Medium (60.48%) 708 - Tags tree | depth-first-search Companies Unknown 给你二叉搜索树的根节点 root ，该树中的 恰好 两</description></item><item><title>不同的二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/96.%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Mon, 07 Aug 2023 08:47:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/96.%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>不同的二叉搜索树 Category Difficulty Likes Dislikes algorithms Medium (69.94%) 1502 - Tags dynamic-programming | tree Companies snapchat 给你一个整数 n ，求恰由 n 个节点组成且节</description></item><item><title>验证二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/98.%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Mon, 07 Aug 2023 08:47:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/98.%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>验证二叉搜索树 Category Difficulty Likes Dislikes algorithms Medium (35.36%) 1387 - Tags tree | depth-first-search Companies amazon | bloomberg | facebook | microsoft 给你一个二叉树的根节点 root ，判</description></item><item><title>不同的二叉搜索树 II</title><link>https://justice.bj.cn/post/leetcode/95.%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91ii/</link><pubDate>Sun, 06 Aug 2023 21:50:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/95.%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91ii/</guid><description>不同的二叉搜索树 II Category Difficulty Likes Dislikes algorithms Medium (73.37%) 1440 - Tags dynamic-programming | tree Companies Unknown 给你一个整数 n ，请你生成并返回所有由</description></item><item><title>对称二叉树</title><link>https://justice.bj.cn/post/leetcode/101.%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sun, 06 Aug 2023 09:45:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/101.%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>对称二叉树 Category Difficulty Likes Dislikes algorithms Easy (56.66%) 1665 - Tags tree | depth-first-search | breadth-first-search Companies bloomberg | linkedin | microsoft 给定一个二叉树，检查它是否是镜像</description></item><item><title>字符串相乘</title><link>https://justice.bj.cn/post/leetcode/43.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/</link><pubDate>Sun, 06 Aug 2023 08:19:15 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/43.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/</guid><description>字符串相乘 Category Difficulty Likes Dislikes algorithms Medium (44.98%) 838 - Tags math | string Companies facebook | twitter 给定两个以字符串形式表示的非负整数 num1 和 n</description></item><item><title>无重叠区间</title><link>https://justice.bj.cn/post/leetcode/435.%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4/</link><pubDate>Sun, 06 Aug 2023 08:19:15 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/435.%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4/</guid><description>无重叠区间 Category Difficulty Likes Dislikes algorithms Medium (51.16%) 904 - Tags greedy Companies Unknown 给定一个区间的集合 intervals ，其中 intervals[i] = [start&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;, end&amp;lt;sub&amp;gt;i&amp;lt;/sub&amp;gt;] 。返回 _需要移</description></item><item><title>K 个一组翻转链表</title><link>https://justice.bj.cn/post/leetcode/25.k%E4%B8%AA%E4%B8%80%E7%BB%84%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/25.k%E4%B8%AA%E4%B8%80%E7%BB%84%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid><description>K 个一组翻转链表 Category Difficulty Likes Dislikes algorithms Hard (67.72%) 1967 - Tags linked-list Companies facebook | microsoft 给你链表的头节点 head ，每 k 个节点一组进行</description></item><item><title>N 皇后 II</title><link>https://justice.bj.cn/post/leetcode/52.n%E7%9A%87%E5%90%8Eii/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/52.n%E7%9A%87%E5%90%8Eii/</guid><description>N 皇后 II Category Difficulty Likes Dislikes algorithms Hard (82.31%) 355 - Tags backtracking Companies zenefits n 皇后问题 研究的是如何将 n 个皇后放置在 n × n 的棋盘</description></item><item><title>不同路径 II</title><link>https://justice.bj.cn/post/leetcode/63.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84ii/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/63.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84ii/</guid><description>不同路径 II Category Difficulty Likes Dislikes algorithms Medium (39.93%) 766 - Tags array | dynamic-programming Companies bloomberg 一个机器人位于一个 m x n 网格的左上角 （起始点</description></item><item><title>两两交换链表中的节点</title><link>https://justice.bj.cn/post/leetcode/24.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/24.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid><description>两两交换链表中的节点 Category Difficulty Likes Dislikes algorithms Medium (71.30%) 1773 - Tags linked-list Companies bloomberg | microsoft | uber 给你一个链表，两两交换其中相邻</description></item><item><title>两数之和</title><link>https://justice.bj.cn/post/leetcode/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>两数之和 Category Difficulty Likes Dislikes algorithms Easy (47.03%) 6994 - Tags array | hash-table Companies adobe | airbnb | amazon | apple | bloomberg | dropbox | facebook | linkedin | microsoft | uber | yahoo | yelp 给</description></item><item><title>两数相除</title><link>https://justice.bj.cn/post/leetcode/29.%E4%B8%A4%E6%95%B0%E7%9B%B8%E9%99%A4/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/29.%E4%B8%A4%E6%95%B0%E7%9B%B8%E9%99%A4/</guid><description>两数相除 Category Difficulty Likes Dislikes algorithms Medium (22.21%) 1147 - Tags math | binary-search Companies Unknown 给你两个整数，被除数 dividend 和除数 divisor。将</description></item><item><title>全排列 II</title><link>https://justice.bj.cn/post/leetcode/47.%E5%85%A8%E6%8E%92%E5%88%97ii/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/47.%E5%85%A8%E6%8E%92%E5%88%97ii/</guid><description>全排列 II Category Difficulty Likes Dislikes algorithms Medium (64.55%) 1036 - Tags backtracking Companies linkedin | microsoft 给定一个可包含重复数字的序列 nums ，按任意顺序 返回</description></item><item><title>删除排序链表中的重复元素</title><link>https://justice.bj.cn/post/leetcode/83.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0i/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/83.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0i/</guid><description>删除排序链表中的重复元素 Category Difficulty Likes Dislikes algorithms Easy (49.10%) 260 - Tags linked-list Companies Unknown 给定一个排序链表，删除所有重复的元</description></item><item><title>删除有序数组中的重复项</title><link>https://justice.bj.cn/post/leetcode/26.%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/26.%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</guid><description>删除有序数组中的重复项 Category Difficulty Likes Dislikes algorithms Easy (54.69%) 3086 - Tags array | two-pointers Companies bloomberg | facebook | microsoft 给你一个 升序排列 的数组 nums</description></item><item><title>删除链表的倒数第 N 个结点</title><link>https://justice.bj.cn/post/leetcode/19.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E7%BB%93%E7%82%B9/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/19.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E7%BB%93%E7%82%B9/</guid><description>删除链表的倒数第 N 个结点 Category Difficulty Likes Dislikes algorithms Medium (45.32%) 2477 - Tags linked-list | two-pointers Companies Unknown 给你一个链表，删除链表的倒数第</description></item><item><title>反转链表 II</title><link>https://justice.bj.cn/post/leetcode/92.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8ii/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/92.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8ii/</guid><description>反转链表 II Category Difficulty Likes Dislikes algorithms Medium (49.10%) 304 - Tags linked-list Companies Unknown 反转从位置 m 到 n 的链表。请使用一趟扫描完成反转。</description></item><item><title>合并 K 个升序链表</title><link>https://justice.bj.cn/post/leetcode/23.%E5%90%88%E5%B9%B6k%E4%B8%AA%E5%8D%87%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/23.%E5%90%88%E5%B9%B6k%E4%B8%AA%E5%8D%87%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>合并 K 个升序链表 Category Difficulty Likes Dislikes algorithms Hard (57.61%) 2366 - Tags linked-list | divide-and-conquer | heap Companies airbnb | amazon | facebook | google | linkedin | microsoft | twitter | uber 给你一</description></item><item><title>合并两个有序链表</title><link>https://justice.bj.cn/post/leetcode/21.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/21.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>合并两个有序链表 Category Difficulty Likes Dislikes algorithms Easy (58.43%) 744 - **Tags****Companies** 将两个有序链表合并为一个新的有序链表并返回。新链</description></item><item><title>四数之和</title><link>https://justice.bj.cn/post/leetcode/18.%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/18.%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>四数之和 Category Difficulty Likes Dislikes algorithms Medium (36.88%) 1691 - Tags array | hash-table | two-pointers Companies linkedin 给你一个由 n 个整数组成的数组 nums ，和一个目标</description></item><item><title>回文数</title><link>https://justice.bj.cn/post/leetcode/9.%E5%9B%9E%E6%96%87%E6%95%B0/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/9.%E5%9B%9E%E6%96%87%E6%95%B0/</guid><description>回文数 Category Difficulty Likes Dislikes algorithms Easy (57.09%) 946 - Tags math Companies Unknown 判断一个整数是否是回文数。回文数是指正序（从左向右）</description></item><item><title>外观数列</title><link>https://justice.bj.cn/post/leetcode/38.%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/38.%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</guid><description>外观数列 Category Difficulty Likes Dislikes algorithms Medium (59.80%) 869 - Tags string Companies facebook 给定一个正整数 n ，输出外观数列的第 n 项。 「外观数列</description></item><item><title>子集</title><link>https://justice.bj.cn/post/leetcode/78.%E5%AD%90%E9%9B%86/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/78.%E5%AD%90%E9%9B%86/</guid><description>子集 Category Difficulty Likes Dislikes algorithms Medium (80.45%) 1604 - Tags array | backtracking | bit-manipulation Companies amazon | bloomberg | facebook | uber 给你一个整数数组 nums ，数组中的元素 互</description></item><item><title>找出字符串中第一个匹配项的下标</title><link>https://justice.bj.cn/post/leetcode/28.%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/28.%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87/</guid><description>找出字符串中第一个匹配项的下标 Category Difficulty Likes Dislikes algorithms Medium (42.17%) 1802 - Tags two-pointers | string Companies apple | facebook | microsoft | pocketgems 给你两个字符</description></item><item><title>括号生成</title><link>https://justice.bj.cn/post/leetcode/22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</guid><description>括号生成 Category Difficulty Likes Dislikes algorithms Medium (73.37%) 770 - Tags string | backtracking Companies google | uber | zenefits 给出 n 代表生成括号的对数，请你写出一个</description></item><item><title>搜索插入位置</title><link>https://justice.bj.cn/post/leetcode/35.%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/35.%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</guid><description>搜索插入位置 Category Difficulty Likes Dislikes algorithms Easy (45.04%) 1970 - Tags array | binary-search Companies Unknown 给定一个排序数组和一个目标值，在数组中找到</description></item><item><title>整数转罗马数字</title><link>https://justice.bj.cn/post/leetcode/12.%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/12.%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/</guid><description>整数转罗马数字 Category Difficulty Likes Dislikes algorithms Medium (66.27%) 868 - Tags math | string Companies twitter 罗马数字包含以下七种字符： I， V， X， L</description></item><item><title>最接近的三数之和</title><link>https://justice.bj.cn/post/leetcode/16.%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/16.%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>最接近的三数之和 Category Difficulty Likes Dislikes algorithms Medium (43.03%) 367 - Tags array | two-pointers Companies bloomberg 给定一个包括 n 个整数的数组 nums和 一</description></item><item><title>最长公共前缀</title><link>https://justice.bj.cn/post/leetcode/14.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/14.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</guid><description>最长公共前缀 Category Difficulty Likes Dislikes algorithms Easy (42.24%) 2215 - Tags string Companies yelp 编写一个函数来查找字符串数组中的最长公共前缀。</description></item><item><title>最长有效括号</title><link>https://justice.bj.cn/post/leetcode/32.%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/32.%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</guid><description>最长有效括号 Category Difficulty Likes Dislikes algorithms Hard (29.67%) 543 - Tags string | dynamic-programming Companies Unknown 给定一个只包含 '(' 和 ')' 的字符串，找出最长的包</description></item><item><title>有效的括号</title><link>https://justice.bj.cn/post/leetcode/20.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/20.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</guid><description>有效的括号 Category Difficulty Likes Dislikes algorithms Easy (40.21%) 1262 - Tags string | stack Companies 给定一个只包括 '('，')'，'{'，'}'，</description></item><item><title>正则表达式匹配</title><link>https://justice.bj.cn/post/leetcode/10.%E6%AD%A3%E5%88%99%E5%BC%8F%E5%8C%B9%E9%85%8D/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/10.%E6%AD%A3%E5%88%99%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid><description>正则表达式匹配 Category Difficulty Likes Dislikes algorithms Hard (31.61%) 2932 - Tags string | dynamic-programming | backtracking Companies airbnb | facebook | google | twitter | uber 给你一个字符串 s 和一</description></item><item><title>电话号码的字母组合</title><link>https://justice.bj.cn/post/leetcode/17.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/17.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</guid><description>电话号码的字母组合 Category Difficulty Likes Dislikes algorithms Medium (57.75%) 1863 - Tags string | backtracking Companies amazon | dropbox | facebook | google | uber 给定一个仅包含数字 2-9</description></item><item><title>盛最多水的容器</title><link>https://justice.bj.cn/post/leetcode/11.%E7%9B%9B%E6%B0%B4%E6%9C%80%E5%A4%A7%E5%AE%B9%E5%99%A8/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/11.%E7%9B%9B%E6%B0%B4%E6%9C%80%E5%A4%A7%E5%AE%B9%E5%99%A8/</guid><description>盛最多水的容器 Category Difficulty Likes Dislikes algorithms Medium (61.40%) 1147 - Tags array | two-pointers Companies bloomberg 给定 n 个非负整数 a1，a2，...，an</description></item><item><title>移除元素</title><link>https://justice.bj.cn/post/leetcode/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/27.%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</guid><description>移除元素 Category Difficulty Likes Dislikes algorithms Easy (59.14%) 1878 - Tags array | two-pointers Companies Unknown 给你一个数组 nums 和一个值 val，你需要 原地 移除所</description></item><item><title>组合总和</title><link>https://justice.bj.cn/post/leetcode/39.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/39.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/</guid><description>组合总和 Category Difficulty Likes Dislikes algorithms Medium (72.75%) 1922 - Tags array | backtracking Companies snapchat | uber 给你一个 无重复元素 的整数数组 candidates 和一个目标整</description></item><item><title>组合总和 II</title><link>https://justice.bj.cn/post/leetcode/40.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Cii/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/40.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Cii/</guid><description>组合总和 II Category Difficulty Likes Dislikes algorithms Medium (62.12%) 737 - Tags array | backtracking Companies snapchat 给定一个数组 candidates 和一个目标数 target ，找出 candidates 中所有可</description></item><item><title>罗马数字转整数</title><link>https://justice.bj.cn/post/leetcode/13.%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/13.%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/</guid><description>罗马数字转整数 Category Difficulty Likes Dislikes algorithms Easy (62.57%) 1853 - Tags math | string Companies bloomberg | facebook | microsoft | uber | yahoo 罗马数字包含以下七种字符</description></item><item><title>解数独</title><link>https://justice.bj.cn/post/leetcode/37.%E8%A7%A3%E6%95%B0%E7%8B%AC/</link><pubDate>Sat, 29 Jul 2023 11:16:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/37.%E8%A7%A3%E6%95%B0%E7%8B%AC/</guid><description>解数独 Category Difficulty Likes Dislikes algorithms Hard (67.05%) 1056 - Tags hash-table | backtracking Companies snapchat | uber 编写一个程序，通过填充空格来解决数独问题。 数</description></item><item><title>Z 字形变换</title><link>https://justice.bj.cn/post/leetcode/6.z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</link><pubDate>Sat, 29 Jul 2023 11:10:59 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/6.z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</guid><description>Z 字形变换 Category Difficulty Likes Dislikes algorithms Medium (45.86%) 564 - Tags string Companies Unknown 将一个给定字符串根据给定的行数，以从上往下、从左</description></item><item><title>字符串转换整数 (atoi)</title><link>https://justice.bj.cn/post/leetcode/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</link><pubDate>Sat, 29 Jul 2023 11:10:59 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</guid><description>字符串转换整数 (atoi) Category Difficulty Likes Dislikes algorithms Medium (19.14%) 561 - Tags math | string Companies amazon | bloomberg | microsoft | uber 请你来实现一个 atoi 函数，使其</description></item><item><title>整数反转</title><link>https://justice.bj.cn/post/leetcode/7.%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</link><pubDate>Sat, 29 Jul 2023 11:10:59 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/7.%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</guid><description>整数反转 Category Difficulty Likes Dislikes algorithms Easy (33.66%) 1720 - Tags math Companies apple | bloomberg 给出一个 32 位的有符号整数，你需要将这个整数中每</description></item><item><title>最长回文子串</title><link>https://justice.bj.cn/post/leetcode/5.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</link><pubDate>Sat, 29 Jul 2023 11:10:59 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/5.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</guid><description>最长回文子串 Category Difficulty Likes Dislikes algorithms Medium (28.58%) 1805 - Tags string | dynamic-programming Companies amazon | bloomberg | microsoft 给定一个字符串 s，找到 s 中最长的回</description></item><item><title>寻找两个有序数组的中位数</title><link>https://justice.bj.cn/post/leetcode/4.%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link><pubDate>Fri, 28 Jul 2023 21:10:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/4.%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid><description>寻找两个有序数组的中位数 Category Difficulty Likes Dislikes algorithms Hard (36.85%) 2222 - Tags array | binary-search | divide-and-conquer Companies adobe | apple | dropbox | google | microsoft | yahoo | zenefits 给</description></item><item><title>两链表数相加</title><link>https://justice.bj.cn/post/leetcode/2.%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</link><pubDate>Thu, 27 Jul 2023 16:49:51 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2.%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</guid><description>两链表数相加 Category Difficulty Likes Dislikes algorithms Medium (36.10%) 3467 - Tags Companies 给出两个 非空 的链表用来表示两个非负的整数。其中，它</description></item><item><title>无重复字符的最长子串</title><link>https://justice.bj.cn/post/leetcode/3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</link><pubDate>Thu, 27 Jul 2023 16:49:51 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</guid><description>无重复字符的最长子串 Category Difficulty Likes Dislikes algorithms Medium (32.18%) 2861 - Tags hash-table | two-pointers | string | sliding-window Companies adobe | amazon | bloomberg | yelp 给定一个字符串</description></item><item><title>N 皇后</title><link>https://justice.bj.cn/post/leetcode/51.n%E7%9A%87%E5%90%8E/</link><pubDate>Wed, 26 Jul 2023 13:31:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/51.n%E7%9A%87%E5%90%8E/</guid><description>N 皇后 Category Difficulty Likes Dislikes algorithms Hard (74.00%) 1297 - Tags backtracking Companies Unknown n 皇后问题 研究的是如何将 n 个皇后放置在 n×n 的棋盘上</description></item><item><title>加油站</title><link>https://justice.bj.cn/post/leetcode/134.%E5%8A%A0%E6%B2%B9%E7%AB%99/</link><pubDate>Wed, 26 Jul 2023 11:53:48 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/134.%E5%8A%A0%E6%B2%B9%E7%AB%99/</guid><description>加油站 Category Difficulty Likes Dislikes algorithms Medium (51.26%) 1311 - Tags greedy Companies Unknown 在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas[i] 升</description></item><item><title>分割回文串 II</title><link>https://justice.bj.cn/post/leetcode/132.%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2-ii/</link><pubDate>Mon, 24 Jul 2023 14:02:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/132.%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2-ii/</guid><description>分割回文串 II Category Difficulty Likes Dislikes algorithms Hard (49.93%) 684 - Tags dynamic-programming Companies Unknown 给你一个字符串 s，请你将 s 分割成一些子串，使每</description></item><item><title>分割回文串</title><link>https://justice.bj.cn/post/leetcode/131.%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2/</link><pubDate>Sat, 22 Jul 2023 22:10:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/131.%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2/</guid><description>分割回文串 Category Difficulty Likes Dislikes algorithms Medium (73.42%) 1567 - Tags backtracking Companies bloomberg 给你一个字符串 s，请你将 s 分割成一些子串，使每个</description></item><item><title>sed</title><link>https://justice.bj.cn/post/14.language/shell/sed/</link><pubDate>Sat, 22 Jul 2023 09:15:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/shell/sed/</guid><description>sed 简介 sed 是 unix 下常用的文本处理工具之一， 常用法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description></item><item><title>交错字符串</title><link>https://justice.bj.cn/post/leetcode/97.%E4%BA%A4%E9%94%99%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Fri, 21 Jul 2023 23:01:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/97.%E4%BA%A4%E9%94%99%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>交错字符串 Category Difficulty Likes Dislikes algorithms Medium (44.67%) 882 - Tags string | dynamic-programming Companies Unknown 给定三个字符串 s1、s2、s3，请你帮忙验证</description></item><item><title>存在重复元素 II</title><link>https://justice.bj.cn/post/leetcode/219.%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0ii/</link><pubDate>Fri, 21 Jul 2023 22:49:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/219.%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0ii/</guid><description>存在重复元素 II Category Difficulty Likes Dislikes algorithms Easy (44.26%) 610 - Tags array | hash-table Companies airbnb | palantir 给你一个整数数组 nums 和一个整数 k ，判断</description></item><item><title>复原 IP 地址</title><link>https://justice.bj.cn/post/leetcode/93.%E5%A4%8D%E5%8E%9Fip%E5%9C%B0%E5%9D%80/</link><pubDate>Fri, 21 Jul 2023 09:40:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/93.%E5%A4%8D%E5%8E%9Fip%E5%9C%B0%E5%9D%80/</guid><description>复原 IP 地址 Category Difficulty Likes Dislikes algorithms Medium (58.08%) 1252 - Tags string | backtracking Companies Unknown 有效 IP 地址 正好由四个整数（每个整数位于 0 到 255</description></item><item><title>格雷编码</title><link>https://justice.bj.cn/post/leetcode/89.%E6%A0%BC%E9%9B%B7%E7%BC%96%E7%A0%81/</link><pubDate>Thu, 20 Jul 2023 18:06:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/89.%E6%A0%BC%E9%9B%B7%E7%BC%96%E7%A0%81/</guid><description>格雷编码 Category Difficulty Likes Dislikes algorithms Medium (75.52%) 633 - Tags backtracking Companies amazon n 位格雷码序列 是一个由 2&amp;lt;sup&amp;gt;n&amp;lt;/sup&amp;gt; 个整数组成的序列，其中：*</description></item><item><title>合并两个有序数组</title><link>https://justice.bj.cn/post/leetcode/88.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</link><pubDate>Thu, 20 Jul 2023 09:36:01 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/88.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</guid><description>合并两个有序数组 Category Difficulty Likes Dislikes algorithms Easy (52.47%) 1932 - Tags array | two-pointers Companies bloomberg | facebook | microsoft 给你两个按 非递减顺序 排列的整数</description></item><item><title>扰乱字符串</title><link>https://justice.bj.cn/post/leetcode/87.%E6%89%B0%E4%B9%B1%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Thu, 20 Jul 2023 08:23:48 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/87.%E6%89%B0%E4%B9%B1%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>扰乱字符串 Category Difficulty Likes Dislikes algorithms Hard (47.35%) 526 - Tags string | dynamic-programming Companies Unknown 使用下面描述的算法可以扰乱字符串 s 得到字符串</description></item><item><title>组合</title><link>https://justice.bj.cn/post/leetcode/77.%E7%BB%84%E5%90%88/</link><pubDate>Thu, 20 Jul 2023 08:23:48 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/77.%E7%BB%84%E5%90%88/</guid><description>组合 Category Difficulty Likes Dislikes algorithms Medium (77.02%) 958 - Tags backtracking Companies Unknown 给定两个整数 n 和 k，返回范围 [1, n] 中所有可能的 k 个数的组</description></item><item><title>x 的平方根</title><link>https://justice.bj.cn/post/leetcode/69.x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/</link><pubDate>Wed, 19 Jul 2023 10:25:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/69.x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9/</guid><description>x 的平方根 Category Difficulty Likes Dislikes algorithms Easy (38.43%) 1375 - Tags math | binary-search Companies apple | bloomberg | facebook 给你一个非负整数 x ，计算并返回 x 的 算</description></item><item><title>二进制求和</title><link>https://justice.bj.cn/post/leetcode/67.%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%B1%82%E5%92%8C/</link><pubDate>Wed, 19 Jul 2023 09:53:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/67.%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%B1%82%E5%92%8C/</guid><description>二进制求和 Category Difficulty Likes Dislikes algorithms Easy (53.04%) 1026 - Tags math | string Companies facebook 给你两个二进制字符串 a 和 b ，以二进制字符串的</description></item><item><title>加一</title><link>https://justice.bj.cn/post/leetcode/66.%E5%8A%A0%E4%B8%80/</link><pubDate>Wed, 19 Jul 2023 09:53:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/66.%E5%8A%A0%E4%B8%80/</guid><description>加一 Category Difficulty Likes Dislikes algorithms Easy (45.18%) 1228 - Tags array Companies google 给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的</description></item><item><title>文本左右对齐</title><link>https://justice.bj.cn/post/leetcode/68.%E6%96%87%E6%9C%AC%E5%B7%A6%E5%8F%B3%E5%AF%B9%E9%BD%90/</link><pubDate>Wed, 19 Jul 2023 08:11:46 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/68.%E6%96%87%E6%9C%AC%E5%B7%A6%E5%8F%B3%E5%AF%B9%E9%BD%90/</guid><description>文本左右对齐 Category Difficulty Likes Dislikes algorithms Hard (52.22%) 334 - Tags string Companies airbnb | facebook | linkedin 给定一个单词数组 words 和一个长度 maxWidth ，重新排</description></item><item><title>最长递增子序列的个数</title><link>https://justice.bj.cn/post/leetcode/673.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0/</link><pubDate>Tue, 18 Jul 2023 19:23:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/673.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0/</guid><description>最长递增子序列的个数 Category Difficulty Likes Dislikes algorithms Medium (34.25%) 142 - Tags dynamic-programming Companies facebook 给定一个未排序的整数数组，找到最长递增</description></item><item><title>最长回文子序列</title><link>https://justice.bj.cn/post/leetcode/516.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Tue, 18 Jul 2023 14:27:15 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/516.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>最长回文子序列 Category Difficulty Likes Dislikes algorithms Medium (67.15%) 1070 - Tags dynamic-programming Companies amazon | uber 给你一个字符串 s ，找出其中最长的回文子序</description></item><item><title>最长递增子序列</title><link>https://justice.bj.cn/post/leetcode/300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Tue, 18 Jul 2023 12:28:46 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>最长递增子序列 Category Difficulty Likes Dislikes algorithms Medium (51.75%) 1963 - Tags binary-search | dynamic-programming Companies microsoft 给你一个整数数组 nums ，找到其中最长严格递增</description></item><item><title>买卖股票的最佳时机 II</title><link>https://justice.bj.cn/post/leetcode/122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAii/</link><pubDate>Mon, 17 Jul 2023 21:29:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAii/</guid><description>买卖股票的最佳时机 II Category Difficulty Likes Dislikes algorithms Easy (57.53%) 613 - Tags array | greedy Companies bloomberg 给定一个数组，它的第 i 个元素是一支</description></item><item><title>递增子序列</title><link>https://justice.bj.cn/post/leetcode/491.%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Mon, 17 Jul 2023 21:29:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/491.%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>递增子序列 Category Difficulty Likes Dislikes algorithms Medium (53.91%) 391 - Tags depth-first-search Companies yahoo 给你一个整数数组 nums ，找出并返回所有该数组中不同的</description></item><item><title>买卖股票的最佳时机</title><link>https://justice.bj.cn/post/leetcode/121.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</link><pubDate>Sun, 16 Jul 2023 15:55:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/121.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</guid><description>买卖股票的最佳时机 Category Difficulty Likes Dislikes algorithms Easy (52.41%) 779 - Tags array | dynamic-programming Companies amazon | bloomberg | facebook | microsoft | uber 给定一个数组，它的第</description></item><item><title>买卖股票的最佳时机 III</title><link>https://justice.bj.cn/post/leetcode/123.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiii/</link><pubDate>Sun, 16 Jul 2023 15:33:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/123.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAiii/</guid><description>买卖股票的最佳时机 III Category Difficulty Likes Dislikes algorithms Hard (41.21%) 308 - Tags array | dynamic-programming Companies Unknown 给定一个数组，它的第* i* 个元素是一</description></item><item><title>买卖股票的最佳时机含手续费</title><link>https://justice.bj.cn/post/leetcode/714.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9/</link><pubDate>Sun, 16 Jul 2023 15:33:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/714.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9/</guid><description>买卖股票的最佳时机含手续费 Category Difficulty Likes Dislikes algorithms Medium (75.23%) 928 - Tags array | dynamic-programming | greedy Companies bloomberg | facebook 给定一个整数数组 pr</description></item><item><title>天际线问题</title><link>https://justice.bj.cn/post/leetcode/218.%E5%A4%A9%E9%99%85%E7%BA%BF%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 16 Jul 2023 15:20:27 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/218.%E5%A4%A9%E9%99%85%E7%BA%BF%E9%97%AE%E9%A2%98/</guid><description>天际线问题 问题描述 Category Difficulty Likes Dislikes algorithms Hard (39.25%) 93 - Tags divide-and-conquer | heap | binary-indexed-tree | segment-tree | line-sweep Companies facebook | google | microsoft | twitter | yelp 城市的 天</description></item><item><title>组合总和 III</title><link>https://justice.bj.cn/post/leetcode/216.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Ciii/</link><pubDate>Sun, 16 Jul 2023 15:20:27 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/216.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Ciii/</guid><description>组合总和 III Category Difficulty Likes Dislikes algorithms Medium (72.79%) 461 - Tags array | backtracking Companies Unknown 找出所有相加之和为 n 的 k 个数的组合，且满足下</description></item><item><title>最佳买卖股票时机含冷冻期</title><link>https://justice.bj.cn/post/leetcode/309.%E6%9C%80%E4%BD%B3%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F/</link><pubDate>Sat, 15 Jul 2023 08:38:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/309.%E6%9C%80%E4%BD%B3%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F/</guid><description>最佳买卖股票时机含冷冻期 Category Difficulty Likes Dislikes algorithms Medium (64.14%) 1539 - Tags dynamic-programming Companies google 给定一个整数数组 prices，其中</description></item><item><title>汇总区间</title><link>https://justice.bj.cn/post/leetcode/228.%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4/</link><pubDate>Fri, 14 Jul 2023 15:23:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/228.%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4/</guid><description>汇总区间 Category Difficulty Likes Dislikes algorithms Easy (54.59%) 266 - Tags array Companies google 给定一个 无重复元素 的 有序 整数数组 nums 。 返回 *恰好覆盖</description></item><item><title>最大矩形</title><link>https://justice.bj.cn/post/leetcode/85.%E6%9C%80%E5%A4%A7%E7%9F%A9%E5%BD%A2/</link><pubDate>Tue, 11 Jul 2023 20:44:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/85.%E6%9C%80%E5%A4%A7%E7%9F%A9%E5%BD%A2/</guid><description>最大矩形 Category Difficulty Likes Dislikes algorithms Hard (54.69%) 1547 - Tags array | hash-table | dynamic-programming | stack Companies facebook 给定一个仅包含 0 和 1 、大小为 rows x cols 的二</description></item><item><title>搜索二维矩阵 II</title><link>https://justice.bj.cn/post/leetcode/240.%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5ii/</link><pubDate>Tue, 11 Jul 2023 17:13:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/240.%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5ii/</guid><description>搜索二维矩阵 II Category Difficulty Likes Dislikes algorithms Medium (52.80%) 1301 - Tags binary-search | divide-and-conquer Companies amazon | apple | google 编写一个高效的算法来搜索 &amp;lt;em&amp;gt;m&amp;lt;/em&amp;gt; x &amp;lt;em&amp;gt;n&amp;lt;/em&amp;gt; 矩</description></item><item><title>矩阵中的最长递增路径</title><link>https://justice.bj.cn/post/leetcode/329.%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E8%B7%AF%E5%BE%84/</link><pubDate>Tue, 11 Jul 2023 12:27:43 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/329.%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E8%B7%AF%E5%BE%84/</guid><description>矩阵中的最长递增路径 Category Difficulty Likes Dislikes algorithms Hard (51.76%) 774 - Tags depth-first-search | topological-sort | memoization Companies google 给定一个 m x n 整数矩阵 matrix ，找出</description></item><item><title>下一个更大元素 I</title><link>https://justice.bj.cn/post/leetcode/496.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0i/</link><pubDate>Mon, 10 Jul 2023 14:32:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/496.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0i/</guid><description>下一个更大元素 I Category Difficulty Likes Dislikes algorithms Easy (71.78%) 1043 - Tags stack Companies Unknown nums1 中数字 x 的 下一个更大元素 是指 x 在 nums2 中对应</description></item><item><title>每日温度</title><link>https://justice.bj.cn/post/leetcode/739.%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6/</link><pubDate>Sun, 09 Jul 2023 21:34:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/739.%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6/</guid><description>每日温度 Category Difficulty Likes Dislikes algorithms Medium (68.90%) 1535 - Tags hash-table | stack Companies Unknown 给定一个整数数组 temperatures ，表示每天的温度，返回一个数</description></item><item><title>接雨水</title><link>https://justice.bj.cn/post/leetcode/42.%E6%8E%A5%E9%9B%A8%E6%B0%B4/</link><pubDate>Sun, 09 Jul 2023 09:56:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/42.%E6%8E%A5%E9%9B%A8%E6%B0%B4/</guid><description>接雨水 Category Difficulty Likes Dislikes algorithms Hard (58.97%) 2959 - Tags array | two-pointers | stack Companies amazon | apple | bloomberg | google | twitter | zenefits 给定 n 个非负整数表示每个</description></item><item><title>柱状图中最大的矩形</title><link>https://justice.bj.cn/post/leetcode/84.%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2/</link><pubDate>Sat, 08 Jul 2023 12:11:16 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/84.%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2/</guid><description>柱状图中最大的矩形 Category Difficulty Likes Dislikes algorithms Hard (45.00%) 2481 - Tags array | stack Companies Unknown 给定 n 个非负整数，用来表示柱状图中各</description></item><item><title>搜索旋转排序数组 II</title><link>https://justice.bj.cn/post/leetcode/81.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84ii/</link><pubDate>Fri, 07 Jul 2023 21:53:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/81.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84ii/</guid><description>搜索旋转排序数组 II Category Difficulty Likes Dislikes algorithms Medium (40.98%) 717 - Tags array | binary-search Companies Unknown 已知存在一个按非降序排列的整数数组 nums</description></item><item><title>删除有序数组中的重复项 II</title><link>https://justice.bj.cn/post/leetcode/80.%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9ii/</link><pubDate>Fri, 07 Jul 2023 11:21:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/80.%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9ii/</guid><description>删除有序数组中的重复项 II Category Difficulty Likes Dislikes algorithms Medium (61.65%) 812 - Tags array | two-pointers Companies facebook 给你一个有序数组 nums ，请你**原</description></item><item><title>子集 II</title><link>https://justice.bj.cn/post/leetcode/90.%E5%AD%90%E9%9B%86ii/</link><pubDate>Thu, 06 Jul 2023 07:56:41 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/90.%E5%AD%90%E9%9B%86ii/</guid><description>子集 II Category Difficulty Likes Dislikes algorithms Medium (63.44%) 811 - Tags array | backtracking Companies facebook 给你一个整数数组 nums ，其中可能包含重复元素，请你返</description></item><item><title>单词搜索</title><link>https://justice.bj.cn/post/leetcode/79.%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2/</link><pubDate>Sun, 02 Jul 2023 11:14:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/79.%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2/</guid><description>单词搜索 Category Difficulty Likes Dislikes algorithms Medium (46.26%) 1620 - Tags array | backtracking Companies bloomberg | facebook | microsoft 给定一个 m x n 二维字符网格 board 和一个字符</description></item><item><title>最小覆盖子串</title><link>https://justice.bj.cn/post/leetcode/76.%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/</link><pubDate>Sat, 01 Jul 2023 14:36:42 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/76.%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/</guid><description>最小覆盖子串 Category Difficulty Likes Dislikes algorithms Hard (43.18%) 1565 - Tags hash-table | two-pointers | string | sliding-window Companies facebook | linkedin | snapchat | uber 给你一个字符串 s 、一个</description></item><item><title>颜色分类</title><link>https://justice.bj.cn/post/leetcode/75.%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB/</link><pubDate>Wed, 28 Jun 2023 22:13:15 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/75.%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB/</guid><description>颜色分类 Category Difficulty Likes Dislikes algorithms Medium (60.43%) 1611 - Tags array | two-pointers | sort Companies facebook | microsoft | pocketgems 给定一个包含红色、白色和蓝色、共 n</description></item><item><title>搜索二维矩阵</title><link>https://justice.bj.cn/post/leetcode/74.%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5/</link><pubDate>Wed, 28 Jun 2023 17:39:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/74.%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5/</guid><description>搜索二维矩阵 Category Difficulty Likes Dislikes algorithms Medium (48.71%) 811 - Tags array | binary-search Companies Unknown 编写一个高效的算法来判断 m x n 矩阵中，是否</description></item><item><title>矩阵置零</title><link>https://justice.bj.cn/post/leetcode/73.%E7%9F%A9%E9%98%B5%E7%BD%AE%E9%9B%B6/</link><pubDate>Wed, 28 Jun 2023 14:52:37 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/73.%E7%9F%A9%E9%98%B5%E7%BD%AE%E9%9B%B6/</guid><description>矩阵置零 Category Difficulty Likes Dislikes algorithms Medium (63.20%) 888 - Tags array Companies amazon | microsoft 给定一个 &amp;lt;em&amp;gt;m&amp;lt;/em&amp;gt; x &amp;lt;em&amp;gt;n&amp;lt;/em&amp;gt; 的矩阵，如果一个元素为 0 ** ，则将</description></item><item><title>编辑距离</title><link>https://justice.bj.cn/post/leetcode/72.%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</link><pubDate>Tue, 27 Jun 2023 21:20:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/72.%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/</guid><description>编辑距离 Category Difficulty Likes Dislikes algorithms Hard (62.13%) 2357 - Tags string | dynamic-programming Companies Unknown 给你两个单词 word1 和 word2， 请返回将 word1 转换成 word2</description></item><item><title>简化路径</title><link>https://justice.bj.cn/post/leetcode/71.%E7%AE%80%E5%8C%96%E8%B7%AF%E5%BE%84/</link><pubDate>Tue, 27 Jun 2023 18:43:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/71.%E7%AE%80%E5%8C%96%E8%B7%AF%E5%BE%84/</guid><description>简化路径 Category Difficulty Likes Dislikes algorithms Medium (44.20%) 482 - Tags string | stack Companies facebook | microsoft 给你一个字符串 path ，表示指向某一文件或目录的</description></item><item><title>删除一个元素使数组严格递增</title><link>https://justice.bj.cn/post/leetcode/1909.%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E/</link><pubDate>Tue, 27 Jun 2023 15:25:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1909.%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E/</guid><description>删除一个元素使数组严格递增 Category Difficulty Likes Dislikes algorithms Easy (30.00%) 37 - Tags Unknown Companies Unknown 给你一个下标从 0 开始的整数数组 nums</description></item><item><title>第一个出现两次的字母</title><link>https://justice.bj.cn/post/leetcode/2351.%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E7%9A%84%E5%AD%97%E6%AF%8D/</link><pubDate>Tue, 27 Jun 2023 11:40:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2351.%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E7%9A%84%E5%AD%97%E6%AF%8D/</guid><description>第一个出现两次的字母 Category Difficulty Likes Dislikes algorithms Easy (84.79%) 69 - Tags Unknown Companies Unknown 给你一个由小写英文字母组成的字符串 s ，</description></item><item><title>Linux虚拟内存空间管理</title><link>https://justice.bj.cn/post/21.linux/linux%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/</link><pubDate>Tue, 27 Jun 2023 10:28:19 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/</guid><description>Linux虚拟内存空间管理 段 在 32 位的操作系统中，每个进程都拥有 4GB 的虚拟内存空间。 Linux 根</description></item><item><title>一和零</title><link>https://justice.bj.cn/post/leetcode/474.%E4%B8%80%E5%92%8C%E9%9B%B6/</link><pubDate>Mon, 26 Jun 2023 14:41:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/474.%E4%B8%80%E5%92%8C%E9%9B%B6/</guid><description>一和零 Category Difficulty Likes Dislikes algorithms Medium (65.13%) 982 - Tags dynamic-programming Companies google 给你一个二进制字符串数组 strs 和两个整数 m 和 n 。 请你找出</description></item><item><title>分发饼干</title><link>https://justice.bj.cn/post/leetcode/455.%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</link><pubDate>Thu, 22 Jun 2023 14:52:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/455.%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</guid><description>分发饼干 Category Difficulty Likes Dislikes algorithms Easy (56.44%) 727 - Tags greedy Companies Unknown 假设你是一位很棒的家长，想要给你的孩子们一些小饼干</description></item><item><title>找出数组中的所有 K 近邻下标</title><link>https://justice.bj.cn/post/leetcode/2200.%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89k%E8%BF%91%E9%82%BB%E4%B8%8B%E6%A0%87/</link><pubDate>Thu, 22 Jun 2023 14:52:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2200.%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89k%E8%BF%91%E9%82%BB%E4%B8%8B%E6%A0%87/</guid><description>找出数组中的所有 K 近邻下标 Category Difficulty Likes Dislikes algorithms Easy (53.79%) 15 - Tags Unknown Companies Unknown 给你一个下标从 0 开始的整数数组 nums</description></item><item><title>网络空闲的时刻</title><link>https://justice.bj.cn/post/leetcode/2039.%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B2%E7%9A%84%E6%97%B6%E5%88%BB/</link><pubDate>Thu, 22 Jun 2023 14:52:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2039.%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B2%E7%9A%84%E6%97%B6%E5%88%BB/</guid><description>网络空闲的时刻 Category Difficulty Likes Dislikes algorithms Medium (55.85%) 119 - Tags Unknown Companies Unknown 给你一个有 n 个服务器的计算机网络，服务器编号</description></item><item><title>数位成本和为目标值的最大数字</title><link>https://justice.bj.cn/post/leetcode/1449.%E6%95%B0%E4%BD%8D%E6%88%90%E6%9C%AC%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97/</link><pubDate>Thu, 22 Jun 2023 08:36:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1449.%E6%95%B0%E4%BD%8D%E6%88%90%E6%9C%AC%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97/</guid><description>数位成本和为目标值的最大数字 Category Difficulty Likes Dislikes algorithms Hard (62.33%) 164 - Tags Unknown Companies Unknown 给你一个整数数组 cost 和一个整数 target</description></item><item><title>TrieTree(字典树)</title><link>https://justice.bj.cn/post/12.data_struct/tree/trietree/</link><pubDate>Fri, 16 Jun 2023 21:45:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tree/trietree/</guid><description>TrieTree(字典树) 简介 Trie Tree,前缀树或字典树，是一种有序树，用于保存关联</description></item><item><title>基数树(Radix Tree)</title><link>https://justice.bj.cn/post/12.data_struct/tree/radixtree/</link><pubDate>Fri, 16 Jun 2023 21:45:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tree/radixtree/</guid><description>基数树(Radix Tree) 简介 Radix tree(也被称为 radix trie，或者 compact prefix tree)是一种空间</description></item><item><title>添加与搜索单词 - 数据结构设计</title><link>https://justice.bj.cn/post/leetcode/211.%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D/</link><pubDate>Fri, 16 Jun 2023 21:45:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/211.%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D/</guid><description>添加与搜索单词 - 数据结构设计 Category Difficulty Likes Dislikes algorithms Medium (49.61%) 506 - Tags backtracking | design | trie Companies facebook 请你设计一个数据结构，</description></item><item><title>重新格式化字符串</title><link>https://justice.bj.cn/post/leetcode/1417.%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Mon, 12 Jun 2023 21:41:59 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1417.%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>重新格式化字符串 Category Difficulty Likes Dislikes algorithms Easy (55.17%) 92 - Tags Unknown Companies Unknown 给你一个混合了数字和字母的字符串 s，其中的</description></item><item><title>避免洪水泛滥</title><link>https://justice.bj.cn/post/leetcode/1488.%E9%81%BF%E5%85%8D%E6%B4%AA%E6%B0%B4%E6%B3%9B%E6%BB%A5/</link><pubDate>Mon, 12 Jun 2023 15:34:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1488.%E9%81%BF%E5%85%8D%E6%B4%AA%E6%B0%B4%E6%B3%9B%E6%BB%A5/</guid><description>避免洪水泛滥 Category Difficulty Likes Dislikes algorithms Medium (26.32%) 124 - Tags Unknown Companies Unknown 你的国家有无数个湖泊，所有湖泊一开始都是空的。</description></item><item><title>多 CPU 处理架构</title><link>https://justice.bj.cn/post/21.linux/%E5%A4%9Acpu%E5%A4%84%E7%90%86%E6%9E%B6%E6%9E%84/</link><pubDate>Sun, 11 Jun 2023 07:49:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/%E5%A4%9Acpu%E5%A4%84%E7%90%86%E6%9E%B6%E6%9E%84/</guid><description>多 CPU 处理架构 简介 多 cpu 系统架构上大概分为三种： SMP(Symmetric Multi Processing): 对称多处理器，所有 cpu 都是对等的, 一</description></item><item><title>大小为 K 的不重叠线段的数目</title><link>https://justice.bj.cn/post/leetcode/1621.%E5%A4%A7%E5%B0%8F%E4%B8%BAk%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%95%B0%E7%9B%AE/</link><pubDate>Sun, 11 Jun 2023 07:49:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1621.%E5%A4%A7%E5%B0%8F%E4%B8%BAk%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%95%B0%E7%9B%AE/</guid><description>大小为 K 的不重叠线段的数目 Category Difficulty Likes Dislikes algorithms Medium (47.64%) 55 - Tags Unknown Companies 给你一维空间的 n 个点，其中第 i 个点</description></item><item><title>Git基础知识</title><link>https://justice.bj.cn/post/70.tool/git/</link><pubDate>Fri, 09 Jun 2023 22:16:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/git/</guid><description>Git基础知识 简介 Git是一个分布式版本管理系统，2005年由Linus大神在一周时</description></item><item><title>HTML</title><link>https://justice.bj.cn/post/14.language/web/html/</link><pubDate>Fri, 09 Jun 2023 22:16:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/web/html/</guid><description>HTML 简介 超文本标记语言（英语：HyperText Markup Language，简称：HTML）是</description></item><item><title>JavaScript</title><link>https://justice.bj.cn/post/14.language/web/javascript/</link><pubDate>Fri, 02 Jun 2023 19:58:28 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/web/javascript/</guid><description>JavaScript 简介 JavaScript，是一种用于描述网页逻辑，处理网页业务的解释性脚本语言，纯</description></item><item><title>Rust模块及包管理</title><link>https://justice.bj.cn/post/14.language/rust/80.rust%E5%8C%85%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 02 Jun 2023 19:58:28 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/80.rust%E5%8C%85%E7%AE%A1%E7%90%86/</guid><description>Rust模块及包管理 简介 Rust程序代码组织分为三个层级： 项目(package)：一</description></item><item><title>C语言main函数</title><link>https://justice.bj.cn/post/14.language/c/c%E8%AF%AD%E8%A8%80main%E5%87%BD%E6%95%B0/</link><pubDate>Sat, 20 May 2023 10:47:12 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c/c%E8%AF%AD%E8%A8%80main%E5%87%BD%E6%95%B0/</guid><description>C语言main函数 简介 main函数是一个c语言程序的入口函数。 定义 1 2 3 4 5 6 7 8 9</description></item><item><title>C语言基础</title><link>https://justice.bj.cn/post/14.language/c/c%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 20 May 2023 10:47:12 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c/c%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</guid><description>C语言基础 简介 运行时crt 参考</description></item><item><title>有效数字</title><link>https://justice.bj.cn/post/leetcode/65.%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97/</link><pubDate>Sat, 20 May 2023 10:47:12 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/65.%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97/</guid><description>有效数字 Category Difficulty Likes Dislikes algorithms Hard (27.34%) 310 - Tags math | string Companies linkedin 有效数字（按顺序）可以分成以下几个部分： 一个 小</description></item><item><title>浮点数</title><link>https://justice.bj.cn/post/12.data_struct/%E6%B5%AE%E7%82%B9%E6%95%B0/</link><pubDate>Sat, 20 May 2023 10:47:12 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/%E6%B5%AE%E7%82%B9%E6%95%B0/</guid><description>浮点数 简介 浮点数是计算机内部使用科学记数法表示高范围实数的一种表示方法。相对于整形数</description></item><item><title>最小路径和</title><link>https://justice.bj.cn/post/leetcode/64.%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/</link><pubDate>Sat, 13 May 2023 21:42:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/64.%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/</guid><description>最小路径和 Category Difficulty Likes Dislikes algorithms Medium (63.17%) 337 - Tags array | dynamic-programming Companies 给定一个包含非负整数的 m x n 网格，请找出一条从</description></item><item><title>不同路径</title><link>https://justice.bj.cn/post/leetcode/62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/</link><pubDate>Sat, 13 May 2023 20:58:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/</guid><description>不同路径 Category Difficulty Likes Dislikes algorithms Medium (66.84%) 1361 - Tags array | dynamic-programming Companies bloomberg 一个机器人位于一个 m x n 网格的左上角 （起始点在</description></item><item><title>Apache Doris</title><link>https://justice.bj.cn/post/30.architech/apache-doris/</link><pubDate>Sat, 13 May 2023 16:36:37 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/apache-doris/</guid><description>Apache Doris 简介 1 2 3 4 5 6 Doris = Google Mesa（数据模型） + Apache Impala（MPP Query Engine) + Apache ORCFile (存</description></item><item><title>排列序列</title><link>https://justice.bj.cn/post/leetcode/60.%E6%8E%92%E5%88%97%E5%BA%8F%E5%88%97/</link><pubDate>Sat, 13 May 2023 16:36:37 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/60.%E6%8E%92%E5%88%97%E5%BA%8F%E5%88%97/</guid><description>排列序列 Category Difficulty Likes Dislikes algorithms Hard (52.96%) 659 - Tags math | backtracking Companies twitter 给出集合 [1,2,3,...,n]，其所有元素</description></item><item><title>螺旋矩阵 II</title><link>https://justice.bj.cn/post/leetcode/59.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5ii/</link><pubDate>Sat, 13 May 2023 13:57:48 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/59.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5ii/</guid><description>螺旋矩阵 II Category Difficulty Likes Dislikes algorithms Medium (76.50%) 696 - Tags array Companies Unknown 给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且</description></item><item><title>螺旋矩阵</title><link>https://justice.bj.cn/post/leetcode/54.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</link><pubDate>Sat, 13 May 2023 13:48:07 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/54.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</guid><description>螺旋矩阵 Category Difficulty Likes Dislikes algorithms Medium (48.67%) 1079 - Tags array Companies google | microsoft | uber 给你一个 m 行 n 列的矩阵 matrix ，请按照 顺时针螺旋</description></item><item><title>合并区间</title><link>https://justice.bj.cn/post/leetcode/56.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</link><pubDate>Sat, 13 May 2023 12:48:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/56.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</guid><description>合并区间 Category Difficulty Likes Dislikes algorithms Medium (49.30%) 1896 - Tags array | sort Companies bloomberg | facebook | google | linkedin | microsoft | twitter | yelp 以数组 intervals 表示若干个区间</description></item><item><title>插入区间</title><link>https://justice.bj.cn/post/leetcode/57.%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4/</link><pubDate>Sat, 13 May 2023 12:48:21 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/57.%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4/</guid><description>插入区间 Category Difficulty Likes Dislikes algorithms Medium (41.90%) 704 - Tags array | sort Companies facebook | google | linkedin 给你一个 无重叠的 ，按照区间起始端点排序</description></item><item><title>Mind+</title><link>https://justice.bj.cn/post/90.play/mindplus/</link><pubDate>Sun, 07 May 2023 18:53:12 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/90.play/mindplus/</guid><description>Mind+ 简介 软件 下载链接：https://www.mindplus.cc/download</description></item><item><title>字母异位词分组</title><link>https://justice.bj.cn/post/leetcode/49.%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/</link><pubDate>Fri, 28 Apr 2023 17:12:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/49.%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/</guid><description>字母异位词分组 Category Difficulty Likes Dislikes algorithms Medium (67.20%) 1117 - Tags hash-table | string Companies amazon | bloomberg | facebook | uber | yelp 给你一个字符串数组，请你</description></item><item><title>全排列</title><link>https://justice.bj.cn/post/leetcode/46.%E5%85%A8%E6%8E%92%E5%88%97/</link><pubDate>Fri, 21 Apr 2023 17:05:07 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/46.%E5%85%A8%E6%8E%92%E5%88%97/</guid><description>全排列 Category Difficulty Likes Dislikes algorithms Medium (78.41%) 1698 - Tags backtracking Companies linkedin | microsoft 给定一个不含重复数字的数组 nums ，返回其 所有可能的全</description></item><item><title>旋转图像</title><link>https://justice.bj.cn/post/leetcode/48.%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/</link><pubDate>Fri, 21 Apr 2023 17:05:07 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/48.%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/</guid><description>旋转图像 Category Difficulty Likes Dislikes algorithms Medium (74.04%) 1268 - Tags array Companies amazon | apple | microsoft 给定一个 n × n 的二维矩阵 matrix 表示一个图像。请</description></item><item><title>跳跃游戏 II</title><link>https://justice.bj.cn/post/leetcode/45.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8Fii/</link><pubDate>Fri, 21 Apr 2023 17:05:07 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/45.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8Fii/</guid><description>跳跃游戏 II Category Difficulty Likes Dislikes algorithms Medium (43.11%) 1270 - Tags array | greedy Companies Unknown 给你一个非负整数数组 nums ，你最初位于数组的第一</description></item><item><title>通配符匹配</title><link>https://justice.bj.cn/post/leetcode/44.%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D/</link><pubDate>Tue, 18 Apr 2023 16:47:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/44.%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D/</guid><description>通配符匹配 Category Difficulty Likes Dislikes algorithms Hard (33.77%) 1033 - Tags string | dynamic-programming | backtracking | greedy Companies facebook | google | snapchat | twitter | twosigma 给你一个输入字符串 (s)</description></item><item><title>Redis基础</title><link>https://justice.bj.cn/post/30.architech/redis/redis%E5%9F%BA%E7%A1%80/</link><pubDate>Tue, 18 Apr 2023 06:55:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/redis/redis%E5%9F%BA%E7%A1%80/</guid><description>Redis基础 简介 Redis（Remote Dictionary Server，远程数据服务）是一款用C语</description></item><item><title>Bash字符串操作</title><link>https://justice.bj.cn/post/14.language/shell/bash%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</link><pubDate>Sat, 15 Apr 2023 14:21:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/shell/bash%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</guid><description>Bash字符串操作 取长度 1 2 3 4 str=&amp;#34;abcd&amp;#34; expr length $str # 4 echo ${#str} # 4 expr &amp;#34;$str&amp;#34; : &amp;#34;.*&amp;#34; # 4 好像一般使用第二种 查</description></item><item><title>缺失的第一个正数</title><link>https://justice.bj.cn/post/leetcode/41.%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</link><pubDate>Wed, 12 Apr 2023 17:10:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/41.%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</guid><description>缺失的第一个正数 Category Difficulty Likes Dislikes algorithms Hard (42.50%) 1461 - Tags array Companies Unknown 给你一个未排序的整数数组 nums ，请你找出其中没</description></item><item><title>在排序数组中查找元素的第一个和最后一个位置</title><link>https://justice.bj.cn/post/leetcode/34.%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</link><pubDate>Wed, 05 Apr 2023 19:09:32 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/34.%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</guid><description>在排序数组中查找元素的第一个和最后一个位置 Category Difficulty Likes Dislikes algorithms Medium (42.36%) 2235 - Tags array | binary-search Companies linkedin 给你一个按照</description></item><item><title>串联所有单词的子串</title><link>https://justice.bj.cn/post/leetcode/30.%E4%B8%B2%E8%81%94%E6%89%80%E6%9C%89%E5%8D%95%E8%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2/</link><pubDate>Wed, 05 Apr 2023 15:34:07 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/30.%E4%B8%B2%E8%81%94%E6%89%80%E6%9C%89%E5%8D%95%E8%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2/</guid><description>串联所有单词的子串 Category Difficulty Likes Dislikes algorithms Hard (39.58%) 900 - Tags hash-table | two-pointers | string Companies Unknown 给定一个字符串 s 和一个字符串数组</description></item><item><title>Rust宏</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%AE%8F/</link><pubDate>Wed, 05 Apr 2023 15:05:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%AE%8F/</guid><description>Rust宏 简介 一般来说，宏是编程语言中，在编译期执行的，用于实现元编程的一种语法扩展</description></item><item><title>最长等差数列</title><link>https://justice.bj.cn/post/leetcode/1027.%E6%9C%80%E9%95%BF%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97/</link><pubDate>Mon, 27 Mar 2023 12:56:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1027.%E6%9C%80%E9%95%BF%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97/</guid><description>最长等差数列 Category Difficulty Likes Dislikes algorithms Medium (44.08%) 223 - Tags array Companies Unknown 给你一个整数数组 nums，返回 nums 中最长等差子序</description></item><item><title>下一个排列</title><link>https://justice.bj.cn/post/leetcode/31.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</link><pubDate>Sun, 26 Mar 2023 16:40:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/31.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</guid><description>下一个排列 Category Difficulty Likes Dislikes algorithms Medium (38.23%) 2117 - Tags array Companies google 整数数组的一个 排列 就是将其所有成员以序列或线性顺</description></item><item><title>字符的最短距离</title><link>https://justice.bj.cn/post/leetcode/821.%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB/</link><pubDate>Sat, 25 Mar 2023 17:52:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/821.%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB/</guid><description>字符的最短距离 Category Difficulty Likes Dislikes algorithms Easy (72.93%) 332 - Tags union-find Companies Unknown 给你一个字符串 s 和一个字符 c ，且 c 是 s 中出现</description></item><item><title>移掉 K 位数字</title><link>https://justice.bj.cn/post/leetcode/402.%E7%A7%BB%E6%8E%89-k-%E4%BD%8D%E6%95%B0%E5%AD%97/</link><pubDate>Fri, 24 Mar 2023 20:03:34 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/402.%E7%A7%BB%E6%8E%89-k-%E4%BD%8D%E6%95%B0%E5%AD%97/</guid><description>移掉 K 位数字 Category Difficulty Likes Dislikes algorithms Medium (31.97%) 929 - Tags stack | greedy Companies google | snapchat 给你一个以字符串表示的非负整数 num 和一个</description></item><item><title>去除重复字母</title><link>https://justice.bj.cn/post/leetcode/316.%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%AD%97%E6%AF%8D/</link><pubDate>Fri, 24 Mar 2023 12:00:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/316.%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%AD%97%E6%AF%8D/</guid><description>去除重复字母 Category Difficulty Likes Dislikes algorithms Medium (48.25%) 906 - Tags stack | greedy Companies google 给你一个字符串 s ，请你去除字符串中重复的字</description></item><item><title>移掉 K 位数字</title><link>https://justice.bj.cn/post/leetcode/402.%E7%A7%BB%E6%8E%89k%E4%BD%8D%E6%95%B0%E5%AD%97/</link><pubDate>Fri, 24 Mar 2023 12:00:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/402.%E7%A7%BB%E6%8E%89k%E4%BD%8D%E6%95%B0%E5%AD%97/</guid><description>移掉 K 位数字 Category Difficulty Likes Dislikes algorithms Medium (31.97%) 929 - Tags stack | greedy Companies google | snapchat 给你一个以字符串表示的非负整数 num 和一个</description></item><item><title>设计跳表</title><link>https://justice.bj.cn/post/leetcode/1206.%E8%AE%BE%E8%AE%A1%E8%B7%B3%E8%A1%A8/</link><pubDate>Fri, 24 Mar 2023 12:00:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1206.%E8%AE%BE%E8%AE%A1%E8%B7%B3%E8%A1%A8/</guid><description>设计跳表 Category Difficulty Likes Dislikes algorithms Hard (53.80%) 14 - Tags Unknown Companies Unknown 不使用任何库函数，设计一个跳表。 跳表是在 O(log(n)) 时间内完</description></item><item><title>对链表进行插入排序</title><link>https://justice.bj.cn/post/leetcode/147.%E5%AF%B9%E9%93%BE%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</link><pubDate>Fri, 24 Mar 2023 09:49:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/147.%E5%AF%B9%E9%93%BE%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</guid><description>对链表进行插入排序 Category Difficulty Likes Dislikes algorithms Medium (69.50%) 600 - Tags linked-list | sort Companies Unknown 给定单个链表的头 head ，使用 插入排序 对链</description></item><item><title>排序链表</title><link>https://justice.bj.cn/post/leetcode/148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Thu, 23 Mar 2023 08:08:31 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>排序链表 Category Difficulty Likes Dislikes algorithms Medium (65.90%) 1948 - Tags linked-list | sort Companies Unknown 给你链表的头结点 head ，请将其按 升序 排列并返回 排序</description></item><item><title>移除链表元素</title><link>https://justice.bj.cn/post/leetcode/203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/</link><pubDate>Thu, 23 Mar 2023 08:08:31 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/</guid><description>移除链表元素 Category Difficulty Likes Dislikes algorithms Easy (54.76%) 1199 - Tags linked-list Companies Unknown 给你一个链表的头节点 head 和一个整数 val ，请你删除链</description></item><item><title>合并两个链表</title><link>https://justice.bj.cn/post/leetcode/1669.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8/</link><pubDate>Thu, 23 Mar 2023 08:02:41 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1669.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8/</guid><description>合并两个链表 Category Difficulty Likes Dislikes algorithms Medium (77.41%) 95 - Tags Unknown Companies Unknown 给你两个链表 list1 和 list2 ，它们包含的元素分别为 n 个和</description></item><item><title>寻找重复数</title><link>https://justice.bj.cn/post/leetcode/287.%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0/</link><pubDate>Tue, 21 Mar 2023 15:31:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/287.%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0/</guid><description>寻找重复数 Category Difficulty Likes Dislikes algorithms Medium (64.44%) 2089 - Tags array | two-pointers | binary-search Companies bloomberg 给定一个包含 n + 1 个整数的数组 nums ，其数字</description></item><item><title>快照数组</title><link>https://justice.bj.cn/post/leetcode/1146.%E5%BF%AB%E7%85%A7%E6%95%B0%E7%BB%84/</link><pubDate>Sat, 18 Mar 2023 10:06:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1146.%E5%BF%AB%E7%85%A7%E6%95%B0%E7%BB%84/</guid><description>快照数组 Category Difficulty Likes Dislikes algorithms Medium (32.86%) 102 - Tags string Companies Unknown 实现支持下列接口的「快照数组」- SnapshotA</description></item><item><title>数组中的第K个最大元素</title><link>https://justice.bj.cn/post/leetcode/215.%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</link><pubDate>Sat, 18 Mar 2023 10:06:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/215.%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</guid><description>数组中的第K个最大元素 Category Difficulty Likes Dislikes algorithms Medium (64.03%) 2092 - Tags divide-and-conquer | heap Companies amazon | apple | bloomberg | facebook | microsoft | pocketgems 给定整数数组</description></item><item><title>根据前序和后序遍历构造二叉树</title><link>https://justice.bj.cn/post/leetcode/889.%E6%A0%B9%E6%8D%AE%E5%89%8D%E5%BA%8F%E5%92%8C%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sat, 18 Mar 2023 10:06:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/889.%E6%A0%B9%E6%8D%AE%E5%89%8D%E5%BA%8F%E5%92%8C%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>根据前序和后序遍历构造二叉树 Category Difficulty Likes Dislikes algorithms Medium (68.09%) 299 - Tags string Companies Unknown 给定两个整数数组，preord</description></item><item><title>滑动窗口中位数</title><link>https://justice.bj.cn/post/leetcode/480.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E4%BD%8D%E6%95%B0/</link><pubDate>Fri, 17 Mar 2023 21:47:32 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/480.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid><description>滑动窗口中位数 Category Difficulty Likes Dislikes algorithms Hard (44.56%) 410 - Tags sliding-window Companies google 中位数是有序序列最中间的那个数。如果序列的长</description></item><item><title>完成所有工作的最短时间</title><link>https://justice.bj.cn/post/leetcode/1723.%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4/</link><pubDate>Wed, 15 Mar 2023 14:35:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1723.%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4/</guid><description>完成所有工作的最短时间 Category Difficulty Likes Dislikes algorithms Hard (50.91%) 306 - Tags Unknown Companies Unknown 给你一个整数数组 jobs ，其中 jobs[i] 是完成第 i</description></item><item><title>前序遍历构造二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/1008.%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Wed, 15 Mar 2023 13:30:59 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1008.%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>前序遍历构造二叉搜索树 Category Difficulty Likes Dislikes algorithms Medium (72.08%) 248 - Tags dynamic-programming | tree | depth-first-search Companies Unknown 给定一个整数数组，它表示BS</description></item><item><title>多数元素</title><link>https://justice.bj.cn/post/leetcode/169.%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/</link><pubDate>Wed, 15 Mar 2023 13:30:59 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/169.%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/</guid><description>多数元素 Category Difficulty Likes Dislikes algorithms Easy (66.87%) 1720 - Tags array | divide-and-conquer | bit-manipulation Companies adobe | zenefits 给定一个大小为 n 的数组 nums ，返回其中的多</description></item><item><title>实现 Trie (前缀树)</title><link>https://justice.bj.cn/post/leetcode/208.%E5%AE%9E%E7%8E%B0trie/</link><pubDate>Wed, 15 Mar 2023 13:30:59 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/208.%E5%AE%9E%E7%8E%B0trie/</guid><description>实现 Trie (前缀树) Category Difficulty Likes Dislikes algorithms Medium (64.69%) 210 - Tags design | trie Companies bloomberg | facebook | google | microsoft | twitter | uber 实现一个 Trie (前缀树</description></item><item><title>切棍子的最小成本</title><link>https://justice.bj.cn/post/leetcode/1547.%E5%88%87%E6%A3%8D%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC/</link><pubDate>Mon, 13 Mar 2023 19:48:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1547.%E5%88%87%E6%A3%8D%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC/</guid><description>切棍子的最小成本 Category Difficulty Likes Dislikes algorithms Hard (56.43%) 74 - Tags Unknown Companies Unknown 有一根长度为 n 个单位的木棍，棍上从 0 到 n 标</description></item><item><title>最大三角形面积</title><link>https://justice.bj.cn/post/leetcode/812.%E6%9C%80%E5%A4%A7%E4%B8%89%E8%A7%92%E5%BD%A2%E9%9D%A2%E7%A7%AF/</link><pubDate>Mon, 13 Mar 2023 19:48:33 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/812.%E6%9C%80%E5%A4%A7%E4%B8%89%E8%A7%92%E5%BD%A2%E9%9D%A2%E7%A7%AF/</guid><description>最大三角形面积 Category Difficulty Likes Dislikes algorithms Easy (68.49%) 181 - Tags Unknown Companies Unknown 给你一个由 X-Y 平面上的点组成的数组 points ，其中 points[i] =</description></item><item><title>滑动窗口最大值</title><link>https://justice.bj.cn/post/leetcode/239.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/</link><pubDate>Sun, 12 Mar 2023 17:39:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/239.%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC/</guid><description>滑动窗口最大值 Category Difficulty Likes Dislikes algorithms Hard (49.73%) 1350 - Tags heap | sliding-window Companies amazon | google | zenefits 给你一个整数数组 nums，有一个</description></item><item><title>二叉搜索树迭代器</title><link>https://justice.bj.cn/post/leetcode/173.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8/</link><pubDate>Sun, 12 Mar 2023 09:46:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/173.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid><description>二叉搜索树迭代器 Category Difficulty Likes Dislikes algorithms Medium (80.79%) 582 - Tags stack | tree | design Companies facebook | google | linkedin | microsoft 实现一个二叉搜索树迭代</description></item><item><title>输出二叉树</title><link>https://justice.bj.cn/post/leetcode/655.%E8%BE%93%E5%87%BA%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sun, 12 Mar 2023 09:46:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/655.%E8%BE%93%E5%87%BA%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>输出二叉树 Category Difficulty Likes Dislikes algorithms Medium (69.52%) 207 - Tags tree Companies Unknown 给你一棵二叉树的根节点 root ，请你构造一个下标从 0 开</description></item><item><title>奇偶跳</title><link>https://justice.bj.cn/post/leetcode/975.%E5%A5%87%E5%81%B6%E8%B7%B3/</link><pubDate>Wed, 08 Mar 2023 20:30:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/975.%E5%A5%87%E5%81%B6%E8%B7%B3/</guid><description>奇偶跳 Category Difficulty Likes Dislikes algorithms Hard (47.96%) 163 - Tags tree | recursion Companies Unknown 给定一个整数数组 A，你可以从某一起始索引出发，跳</description></item><item><title>Golang数据结构之map</title><link>https://justice.bj.cn/post/14.language/golang/golang%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bmap/</link><pubDate>Wed, 08 Mar 2023 19:49:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bmap/</guid><description>Golang数据结构之map 简介 用法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description></item><item><title>golang最佳实践</title><link>https://justice.bj.cn/post/14.language/golang/golang%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Wed, 08 Mar 2023 19:49:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>golang最佳实践 最佳实践 字符切片转string 1 // []byte -&amp;gt; string 参考</description></item><item><title>Go内存管理</title><link>https://justice.bj.cn/post/14.language/golang/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link><pubDate>Wed, 08 Mar 2023 19:49:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/go%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid><description>Go内存管理 Go内部内存结构 首先，让我们看看Go内部的内存结构是什么样子的。 Go运行</description></item><item><title>Go语言之cgo</title><link>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bcgo/</link><pubDate>Wed, 08 Mar 2023 19:49:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bcgo/</guid><description>Go语言之cgo 简介 Go语言通过自带的CGO的工具来支持C语言函数调用，也可以用Go</description></item><item><title>字符串解码</title><link>https://justice.bj.cn/post/leetcode/394.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81/</link><pubDate>Wed, 08 Mar 2023 19:49:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/394.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81/</guid><description>字符串解码 Category Difficulty Likes Dislikes algorithms Medium (56.01%) 1124 - Tags stack | depth-first-search Companies google | yelp 给定一个经过编码的字符串，返回它解码后的</description></item><item><title>零钱兑换</title><link>https://justice.bj.cn/post/leetcode/322.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/</link><pubDate>Wed, 08 Mar 2023 19:49:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/322.%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/</guid><description>零钱兑换 Category Difficulty Likes Dislikes algorithms Medium (46.30%) 2307 - Tags dynamic-programming Companies Unknown 给你一个整数数组 coins ，表示不同面额的硬币；以及一个整</description></item><item><title>种花问题</title><link>https://justice.bj.cn/post/leetcode/605.%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98/</link><pubDate>Sat, 04 Mar 2023 17:39:15 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/605.%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98/</guid><description>种花问题 Category Difficulty Likes Dislikes algorithms Easy (32.62%) 529 - Tags array Companies linkedin 假设有一个很长的花坛，一部分地块种植了花，另一部分</description></item><item><title>Docker基础</title><link>https://justice.bj.cn/post/32.cloudnative/docker%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/docker%E5%9F%BA%E7%A1%80/</guid><description>Docker基础 简介 docker是一个开源的应用容器引擎，基于go语言开发并遵循了a</description></item><item><title>LFU缓存</title><link>https://justice.bj.cn/post/leetcode/460.lfu%E7%BC%93%E5%AD%98/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/460.lfu%E7%BC%93%E5%AD%98/</guid><description>LFU缓存 Category Difficulty Likes Dislikes algorithms Hard (34.03%) 81 - Tags design Companies amazon | google 设计并实现最不经常使用（LFU）缓存的数据结</description></item><item><title>LRU缓存机制</title><link>https://justice.bj.cn/post/leetcode/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/146.lru%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid><description>LRU缓存机制 Category Difficulty Likes Dislikes algorithms Medium (44.70%) 332 - Tags design Companies amazon | bloomberg | facebook | google | microsoft | palantir | snapchat | twitter | uber | yahoo | zenefits 运用</description></item><item><title>mmap</title><link>https://justice.bj.cn/post/21.linux/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90mmap/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90mmap/</guid><description>mmap 概述 对于mmap，您是否能从原理上解析以下三个问题： mmap比物理内存+swap空</description></item><item><title>Rust基础</title><link>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/01.rust%E5%9F%BA%E7%A1%80/</guid><description>Rust基础 简介 Rust是由Graydon Hoare于2009年发起的一门系统级、编</description></item><item><title>排列硬币</title><link>https://justice.bj.cn/post/leetcode/441.%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/441.%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81/</guid><description>排列硬币 Category Difficulty Likes Dislikes algorithms Easy (45.46%) 262 - Tags math | binary-search Companies Unknown 你总共有 n 枚硬币，并计划将它们按阶梯状排列。对</description></item><item><title>组合总和 Ⅳ</title><link>https://justice.bj.cn/post/leetcode/377.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/377.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-/</guid><description>组合总和 Ⅳ Category Difficulty Likes Dislikes algorithms Medium (53.15%) 751 - Tags dynamic-programming Companies facebook | google | snapchat 给你一个由 不同 整数组成的数组 nums ，和一个目</description></item><item><title>旋转字符串</title><link>https://justice.bj.cn/post/leetcode/796.%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Tue, 21 Feb 2023 21:37:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/796.%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>旋转字符串 Category Difficulty Likes Dislikes algorithms Easy (63.30%) 282 - Tags math Companies Unknown 给定两个字符串, s 和 goal。如果在若干次旋转操</description></item><item><title>有效的括号字符串</title><link>https://justice.bj.cn/post/leetcode/678.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Tue, 21 Feb 2023 21:37:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/678.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>有效的括号字符串 Category Difficulty Likes Dislikes algorithms Medium (39.23%) 553 - Tags string Companies Unknown 给定一个只包含三种字符的字符串：（ ，） 和 *</description></item><item><title>最长公共子序列</title><link>https://justice.bj.cn/post/leetcode/1143.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Tue, 21 Feb 2023 08:28:47 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1143.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>最长公共子序列 Category Difficulty Likes Dislikes algorithms Medium (64.96%) 1215 - Tags Unknown Companies Unknown 给定两个字符串 text1 和 text2，返回这两个字符</description></item><item><title>Batocera</title><link>https://justice.bj.cn/post/90.play/batocera/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/90.play/batocera/</guid><description>Batocera 简介 batocera是一个模拟器游戏linux发行版。 u盘安装 准备一个容量16GB</description></item><item><title>BIOS</title><link>https://justice.bj.cn/post/70.tool/boot/bios/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/boot/bios/</guid><description>BIOS 简介 BlOS（Basic Input Output System）称为“基本输出输入系统”，是用于为操作系</description></item><item><title>Boot</title><link>https://justice.bj.cn/post/70.tool/boot/boot/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/boot/boot/</guid><description>Boot 简介 计算机系统的启动过程称为boot。 参考</description></item><item><title>Rust测试</title><link>https://justice.bj.cn/post/14.language/rust/rust%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E6%B5%8B%E8%AF%95/</guid><description>Rust测试 简介 Rust测试包括单元测试、集成测试、文档测试和性能测试； 单元测试一般</description></item><item><title>syslinux</title><link>https://justice.bj.cn/post/70.tool/boot/syslinux/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/boot/syslinux/</guid><description>syslinux 简介 syslinux是一个linux启动加载程序，可以运行在msdos/fat文件</description></item><item><title>Ventoy</title><link>https://justice.bj.cn/post/70.tool/boot/ventoy/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/boot/ventoy/</guid><description>Ventoy 简介 ventoy是一个开源的u盘启动引导工具。 参考</description></item><item><title>区块链-POS共识机制</title><link>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE-pos%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE-pos%E5%85%B1%E8%AF%86%E6%9C%BA%E5%88%B6/</guid><description>区块链-POS共识机制 简介 PoS(Proof of Stake，权益证明), 最早由点点币的创始人Sunny</description></item><item><title>基于Rust-vmm实现Kubernetes运行时</title><link>https://justice.bj.cn/post/32.cloudnative/%E5%9F%BA%E4%BA%8Erust-vmm%E5%AE%9E%E7%8E%B0kubernetes%E8%BF%90%E8%A1%8C%E6%97%B6/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/%E5%9F%BA%E4%BA%8Erust-vmm%E5%AE%9E%E7%8E%B0kubernetes%E8%BF%90%E8%A1%8C%E6%97%B6/</guid><description>基于Rust-vmm实现Kubernetes运行时 随着容器及K8s的广泛使用，越来越</description></item><item><title>硬盘分区结构mbr和gpt</title><link>https://justice.bj.cn/post/70.tool/boot/mbr%E5%92%8Cgpt/</link><pubDate>Mon, 20 Feb 2023 10:33:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/boot/mbr%E5%92%8Cgpt/</guid><description>硬盘分区结构mbr和gpt 简介 硬盘是一个逻辑上的连续顺序存储介质，为了对硬盘上的存储</description></item><item><title>Qemu</title><link>https://justice.bj.cn/post/70.tool/qemu/</link><pubDate>Mon, 13 Feb 2023 19:49:11 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/qemu/</guid><description>Qemu 简介 安装 1 2 3 4 5 6 7 ## 安装virt-manager $ brew install libvirt $ brew tap arthurk/homebrew-virt-manager $ brew install virt-manager virt-viewer ## 启</description></item><item><title>Yarn</title><link>https://justice.bj.cn/post/70.tool/yarn/</link><pubDate>Sun, 12 Feb 2023 18:40:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/yarn/</guid><description>Yarn 简介 配置 配置镜像源 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ## 安装yrm，nrm $ npm install -g yrm --registry</description></item><item><title>三数之和的多种可能</title><link>https://justice.bj.cn/post/leetcode/923.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%8F%AF%E8%83%BD/</link><pubDate>Sun, 12 Feb 2023 18:40:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/923.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%8F%AF%E8%83%BD/</guid><description>三数之和的多种可能 Category Difficulty Likes Dislikes algorithms Medium (36.28%) 111 - Tags math | binary-search | dynamic-programming Companies Unknown 给定一个整数数组 arr ，以及一个整数</description></item><item><title>Openwrt</title><link>https://justice.bj.cn/post/70.tool/openwrt/</link><pubDate>Thu, 09 Feb 2023 08:19:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/openwrt/</guid><description>Openwrt 简介 小米路由mini安装 步骤 升级到开发版固件 解锁ssh； 刷入breed 引导固件； 使</description></item><item><title>基数排序</title><link>https://justice.bj.cn/post/13.algorithm/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</link><pubDate>Sat, 10 Dec 2022 15:56:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</guid><description>基数排序 简介 基数排序（Radix sort）是一种非比较型整数排序算法。 基本思想 原理是</description></item><item><title>最大间距</title><link>https://justice.bj.cn/post/leetcode/164.%E6%9C%80%E5%A4%A7%E9%97%B4%E8%B7%9D/</link><pubDate>Sat, 10 Dec 2022 15:56:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/164.%E6%9C%80%E5%A4%A7%E9%97%B4%E8%B7%9D/</guid><description>最大间距 Category Difficulty Likes Dislikes algorithms Hard (60.44%) 530 - Tags sort Companies Unknown 给定一个无序的数组 nums，返回 数组在排序之后，相</description></item><item><title>解码方法</title><link>https://justice.bj.cn/post/leetcode/91.%E8%A7%A3%E7%A0%81%E6%96%B9%E6%B3%95/</link><pubDate>Sat, 10 Dec 2022 15:56:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/91.%E8%A7%A3%E7%A0%81%E6%96%B9%E6%B3%95/</guid><description>解码方法 Category Difficulty Likes Dislikes algorithms Medium (32.81%) 1300 - Tags string | dynamic-programming Companies facebook | microsoft | uber 一条包含字母 A-Z 的消息通过以下映射进行了</description></item><item><title>Rust 异步编程</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%82%E6%AD%A5/</link><pubDate>Sat, 10 Dec 2022 14:02:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%82%E6%AD%A5/</guid><description>Rust 异步编程 简介 异步编程经历了三个阶段： 第一阶段：异步回调模式，存在回调地狱问题； 第二</description></item><item><title>删除无效的括号</title><link>https://justice.bj.cn/post/leetcode/301.%E5%88%A0%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</link><pubDate>Thu, 08 Dec 2022 21:16:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/301.%E5%88%A0%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</guid><description>删除无效的括号 Category Difficulty Likes Dislikes algorithms Hard (55.14%) 796 - Tags depth-first-search | breadth-first-search Companies facebook 给你一个由若干括号和字母组成的字符串 s ，</description></item><item><title>Rust中的Pin</title><link>https://justice.bj.cn/post/14.language/rust/rust-pin/</link><pubDate>Thu, 01 Dec 2022 14:33:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust-pin/</guid><description>Rust中的Pin 简介 Pin&amp;lt;P&amp;lt;T&amp;gt;&amp;gt;是一个struct,</description></item><item><title>K 进制表示下的各位数字总和</title><link>https://justice.bj.cn/post/leetcode/1837.k%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E4%B8%8B%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E6%80%BB%E5%92%8C/</link><pubDate>Sun, 13 Nov 2022 21:39:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1837.k%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E4%B8%8B%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E6%80%BB%E5%92%8C/</guid><description>K 进制表示下的各位数字总和 Category Difficulty Likes Dislikes algorithms Easy (79.43%) 23 - Tags Unknown Companies Unknown 给你一个整数 n（10 进制）和一个</description></item><item><title>具有给定数值的最小字符串</title><link>https://justice.bj.cn/post/leetcode/1663.%E5%85%B7%E6%9C%89%E7%BB%99%E5%AE%9A%E6%95%B0%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sun, 13 Nov 2022 20:48:37 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1663.%E5%85%B7%E6%9C%89%E7%BB%99%E5%AE%9A%E6%95%B0%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>具有给定数值的最小字符串 Category Difficulty Likes Dislikes algorithms Medium (57.25%) 39 - Tags Unknown Companies Unknown 小写字符 的 数值 是它在字母表中的位置</description></item><item><title>石子游戏</title><link>https://justice.bj.cn/post/leetcode/877.%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F/</link><pubDate>Sun, 13 Nov 2022 20:48:37 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/877.%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F/</guid><description>石子游戏 Category Difficulty Likes Dislikes algorithms Medium (76.30%) 455 - Tags dynamic-programming | breadth-first-search Companies Unknown Alice 和 Bob 用几堆石子在做游戏。一共有偶数堆石子，排</description></item><item><title>字符频次唯一的最小删除次数</title><link>https://justice.bj.cn/post/leetcode/1647.%E5%AD%97%E7%AC%A6%E9%A2%91%E6%AC%A1%E5%94%AF%E4%B8%80%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0/</link><pubDate>Sun, 13 Nov 2022 16:07:47 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1647.%E5%AD%97%E7%AC%A6%E9%A2%91%E6%AC%A1%E5%94%AF%E4%B8%80%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0/</guid><description>字符频次唯一的最小删除次数 Category Difficulty Likes Dislikes algorithms Medium (53.76%) 50 - Tags Unknown Companies Unknown 如果字符串 s 中 不存在 两个不同字符</description></item><item><title>最长定差子序列</title><link>https://justice.bj.cn/post/leetcode/1218.%E6%9C%80%E9%95%BF%E5%AE%9A%E5%B7%AE%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Sat, 12 Nov 2022 17:45:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1218.%E6%9C%80%E9%95%BF%E5%AE%9A%E5%B7%AE%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>最长定差子序列 Category Difficulty Likes Dislikes algorithms Medium (51.73%) 225 - Tags Unknown Companies Unknown 给你一个整数数组 arr 和一个整数 differen</description></item><item><title>最长连续递增序列</title><link>https://justice.bj.cn/post/leetcode/674.%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97/</link><pubDate>Sat, 12 Nov 2022 17:45:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/674.%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97/</guid><description>最长连续递增序列 Category Difficulty Likes Dislikes algorithms Easy (54.38%) 340 - Tags array Companies facebook 给定一个未经排序的整数数组，找到最长且 连续</description></item><item><title>最小数字对和</title><link>https://justice.bj.cn/post/leetcode/1877.%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E5%AF%B9%E5%92%8C/</link><pubDate>Thu, 10 Nov 2022 10:30:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1877.%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E5%AF%B9%E5%92%8C/</guid><description>最小数字对和 Category Difficulty Likes Dislikes algorithms Medium (81.29%) 91 - Tags Unknown Companies Unknown 一个数对 (a,b) 的 数对和 等于 a + b 。最大数对和 是一个</description></item><item><title>最长重复k次子序列</title><link>https://justice.bj.cn/post/leetcode/2014.%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8Dk%E6%AC%A1%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Thu, 10 Nov 2022 10:30:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2014.%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8Dk%E6%AC%A1%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>最长重复k次子序列 Category Difficulty Likes Dislikes algorithms Hard (54.48%) 22 - Tags Unknown Companies Unknown 给你一个长度为 n 的字符串 s ，和一个整数 k</description></item><item><title>JQ</title><link>https://justice.bj.cn/post/70.tool/jq/</link><pubDate>Wed, 09 Nov 2022 15:16:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/jq/</guid><description>JQ 简介 jq是一个shell下的json解析工具，功能强大。 用法 格式化json 不加任何</description></item><item><title>岛屿的最大面积</title><link>https://justice.bj.cn/post/leetcode/695.%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF/</link><pubDate>Wed, 09 Nov 2022 15:16:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/695.%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF/</guid><description>岛屿的最大面积 Category Difficulty Likes Dislikes algorithms Medium (67.92%) 876 - Tags array | depth-first-search Companies Unknown 给你一个大小为 m x n 的二进制矩阵 grid 。 岛屿</description></item><item><title>石子游戏 V</title><link>https://justice.bj.cn/post/leetcode/1563.%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8Fv/</link><pubDate>Tue, 25 Oct 2022 16:13:36 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1563.%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8Fv/</guid><description>石子游戏 V Category Difficulty Likes Dislikes algorithms Hard (39.38%) 48 - Tags Unknown Companies Unknown 几块石子 排成一行 ，每块石子都有一个关联值，关联值</description></item><item><title>预测赢家</title><link>https://justice.bj.cn/post/leetcode/486.%E9%A2%84%E6%B5%8B%E8%B5%A2%E5%AE%B6/</link><pubDate>Tue, 25 Oct 2022 16:13:36 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/486.%E9%A2%84%E6%B5%8B%E8%B5%A2%E5%AE%B6/</guid><description>预测赢家 Category Difficulty Likes Dislikes algorithms Medium (59.30%) 582 - Tags dynamic-programming | minimax Companies google 给你一个整数数组 nums 。玩家 1 和玩家 2 基于这个数组</description></item><item><title>scala的monad(转)</title><link>https://justice.bj.cn/post/14.language/scala/scala%E4%B9%8Bmonad/</link><pubDate>Sat, 15 Oct 2022 10:19:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/scala/scala%E4%B9%8Bmonad/</guid><description>scala的monad(转) 转自我所理解的monad(1)：半群(semigroup</description></item><item><title>Rust泛型(generic)</title><link>https://justice.bj.cn/post/14.language/rust/25.rust%E6%B3%9B%E5%9E%8Bgenric/</link><pubDate>Sun, 25 Sep 2022 18:42:51 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/25.rust%E6%B3%9B%E5%9E%8Bgenric/</guid><description>Rust泛型(generic) 简介 泛型（generic）是关于泛化类型和函数功能, 以</description></item><item><title>Rust错误处理</title><link>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link><pubDate>Sun, 25 Sep 2022 18:42:51 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/40.rust%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid><description>Rust错误处理 简介 Rust将错误分为两个主要类别： 可恢复错误（recoverabl</description></item><item><title>子树中标签相同的节点数</title><link>https://justice.bj.cn/post/leetcode/1519.%E5%AD%90%E6%A0%91%E4%B8%AD%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0/</link><pubDate>Thu, 22 Sep 2022 20:04:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1519.%E5%AD%90%E6%A0%91%E4%B8%AD%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0/</guid><description>子树中标签相同的节点数 Category Difficulty Likes Dislikes algorithms Medium (31.49%) 57 - Tags Unknown Companies Unknown 给你一棵树（即，一个连通的无环无向图</description></item><item><title>Spark 基础</title><link>https://justice.bj.cn/post/30.architech/spark/spark%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Wed, 31 Aug 2022 10:46:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>Spark 基础 简介 Spark 是一种快速、通用、可扩展的大数据分析引擎，2009 年诞生于加州大学伯克利</description></item><item><title>Vega基础</title><link>https://justice.bj.cn/post/30.architech/vega%E5%9F%BA%E7%A1%80/</link><pubDate>Wed, 31 Aug 2022 10:46:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/vega%E5%9F%BA%E7%A1%80/</guid><description>Vega基础 简介 参考</description></item><item><title>位/字节(Bit/Byte)</title><link>https://justice.bj.cn/post/12.data_struct/01.%E6%AF%94%E7%89%B9/</link><pubDate>Wed, 31 Aug 2022 10:46:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/01.%E6%AF%94%E7%89%B9/</guid><description>位/字节(Bit/Byte) 简介 比特(bit) bit是内存中最小的数据单位，为一个数</description></item><item><title>H2O 生成</title><link>https://justice.bj.cn/post/leetcode/1117.h2o-%E7%94%9F%E6%88%90/</link><pubDate>Sat, 20 Aug 2022 17:48:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1117.h2o-%E7%94%9F%E6%88%90/</guid><description>H2O 生成 Category Difficulty Likes Dislikes concurrency Medium (53.24%) 117 - Tags Unknown Companies Unknown 现在有两种线程，氧 oxygen 和氢 hydrogen，你的目标是</description></item><item><title>Makefile</title><link>https://justice.bj.cn/post/70.tool/makefile/</link><pubDate>Sat, 20 Aug 2022 17:48:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/makefile/</guid><description>Makefile 简介 语法 内部变量 1 2 3 4 5 6 7 8 9 10 11 12 $@ : 规则的目标名 $% : 当目标为文件时，为目标</description></item><item><title>openssl</title><link>https://justice.bj.cn/post/70.tool/openssl/</link><pubDate>Sat, 20 Aug 2022 17:48:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/openssl/</guid><description>openssl 简介 操作 1 2 3 4 5 6 7 ## 加密 echo -n &amp;#34;xxx&amp;#34; | base64 | openssl enc -aes-128-ecb -a -e -nosalt ## 解密 cat &amp;lt;&amp;lt;EOF | openssl enc -aes-128-ecb -a -d -nosalt | base64 -d</description></item><item><title>区块链共识算法</title><link>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 19 Jun 2022 16:06:37 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/</guid><description>区块链共识算法 简介 共识算法是用来解决对等节点网络系统(P2P)中节点间相互信任问题（</description></item><item><title>Flink消息消费流程</title><link>https://justice.bj.cn/post/30.architech/flink/flink-%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF%E7%9A%84%E6%B5%81%E7%A8%8B/</link><pubDate>Tue, 14 Jun 2022 19:20:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/flink/flink-%E6%B6%88%E8%B4%B9%E6%B6%88%E6%81%AF%E7%9A%84%E6%B5%81%E7%A8%8B/</guid><description>Flink消息消费流程 简介 准备一个ResultPartition； 通知JobMast</description></item><item><title>区块链中的攻击</title><link>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%B8%AD%E7%9A%84%E6%94%BB%E5%87%BB/</link><pubDate>Tue, 14 Jun 2022 19:20:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%B8%AD%E7%9A%84%E6%94%BB%E5%87%BB/</guid><description>区块链中的攻击 简介 1. 双花攻击 问题 双花问题是在点对点数字现金系统中，支付方将同一笔资金</description></item><item><title>基本计算器</title><link>https://justice.bj.cn/post/leetcode/224.%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8/</link><pubDate>Mon, 13 Jun 2022 17:36:43 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/224.%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8/</guid><description>基本计算器 Category Difficulty Likes Dislikes algorithms Hard (41.92%) 777 - Tags math | stack Companies google 给你一个字符串表达式 s ，请你实现一个基本计算</description></item><item><title>Substrate</title><link>https://justice.bj.cn/post/60.blockchain/substrate/</link><pubDate>Mon, 13 Jun 2022 16:32:28 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/60.blockchain/substrate/</guid><description>Substrate 简介 参考</description></item><item><title>区块链UTXO模型</title><link>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BEutxo%E6%A8%A1%E5%9E%8B/</link><pubDate>Mon, 13 Jun 2022 16:32:28 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/60.blockchain/%E5%8C%BA%E5%9D%97%E9%93%BEutxo%E6%A8%A1%E5%9E%8B/</guid><description>区块链UTXO模型 简介 UTXO(Unspent Transaction Output)是区块链中用来保存区块账户记录的方式之一。 参</description></item><item><title>blockchain_rust</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E4%B9%8Bblockchain/</link><pubDate>Sun, 12 Jun 2022 20:44:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E4%B9%8Bblockchain/</guid><description>blockchain_rust 简介 blockchain_rust是github上一个基于rust的blockch</description></item><item><title>IPFS(星际文件系统)</title><link>https://justice.bj.cn/post/60.blockchain/ipfs%E5%9F%BA%E7%A1%80/</link><pubDate>Sun, 12 Jun 2022 20:44:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/60.blockchain/ipfs%E5%9F%BA%E7%A1%80/</guid><description>IPFS(星际文件系统) 简介 IPFS(InterPlanetary File System，星际文件系统), 是一个对等的分布式文件</description></item><item><title>Kademlia算法</title><link>https://justice.bj.cn/post/13.algorithm/kademlia%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 12 Jun 2022 20:44:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/kademlia%E7%AE%97%E6%B3%95/</guid><description>Kademlia算法 简介 Kademlia算法是2002年由Petar Maymounkov 和 David Maziè</description></item><item><title>AF_XDP</title><link>https://justice.bj.cn/post/21.linux/af_xdp/</link><pubDate>Sat, 04 Jun 2022 10:26:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/af_xdp/</guid><description>AF_XDP 简介 AF_XDP是一种用于高性能包处理的地址簇(Address Family)。 使用</description></item><item><title>eBPF简史(转)</title><link>https://justice.bj.cn/post/21.linux/ebpf%E7%AE%80%E5%8F%B2/</link><pubDate>Sat, 04 Jun 2022 10:26:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/ebpf%E7%AE%80%E5%8F%B2/</guid><description>eBPF简史(转) 源头：一篇 1992 年的论文 考虑到 BPF 的知名度，在介绍 eBPF 之前，笔者自觉还是有</description></item><item><title>Ext4文件系统架构分析(一)(转)</title><link>https://justice.bj.cn/post/21.linux/ext4%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 04 Jun 2022 10:26:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/ext4%E4%BB%8B%E7%BB%8D/</guid><description>Ext4文件系统架构分析(一)(转) 本文描述Ext4文件系统磁盘布局和元数据的一些分</description></item><item><title>FUSE- linux用户空间文件系统(转)</title><link>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B9%8Bfuse/</link><pubDate>Sat, 04 Jun 2022 10:26:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B9%8Bfuse/</guid><description>FUSE: linux用户空间文件系统(转) 简介 架构 用户空间文件系统 是操作系统中的概念，指完全</description></item><item><title>Linux 网络包发送过程(转)</title><link>https://justice.bj.cn/post/21.linux/linux-%E7%BD%91%E7%BB%9C%E5%8F%91%E5%8C%85%E8%BF%87%E7%A8%8B%E5%9B%BE%E8%A7%A3/</link><pubDate>Sat, 04 Jun 2022 10:26:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-%E7%BD%91%E7%BB%9C%E5%8F%91%E5%8C%85%E8%BF%87%E7%A8%8B%E5%9B%BE%E8%A7%A3/</guid><description>Linux 网络包发送过程(转) 在开始今天的文章之前，我先来请大家思考几个小问题。 问1：我们在</description></item><item><title>Linux内存管理</title><link>https://justice.bj.cn/post/21.linux/linux%E5%86%85%E6%A0%B8%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BC%99%E4%BC%B4%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 04 Jun 2022 10:26:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux%E5%86%85%E6%A0%B8%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E4%BC%99%E4%BC%B4%E7%AE%97%E6%B3%95/</guid><description>Linux内存管理 简介 kernel的内存管理是个2层分层系统，从下往上依次为： 第一层</description></item><item><title>内存分配器</title><link>https://justice.bj.cn/post/21.linux/%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/</link><pubDate>Sat, 04 Jun 2022 10:26:13 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8/</guid><description>内存分配器 简介 系统的物理内存是有限的，而对内存的需求是变化的, 程序的动态性越强，内存</description></item><item><title>GCC</title><link>https://justice.bj.cn/post/70.tool/gcc/</link><pubDate>Thu, 02 Jun 2022 21:57:18 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/gcc/</guid><description>GCC 简介 gcc 编译链接 编译选项 -shared ：指定生成动态链接库。 -static ：指定生成静态链接库。 -fPIC ：生成可用</description></item><item><title>二进制手表</title><link>https://justice.bj.cn/post/leetcode/401.%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%8B%E8%A1%A8/</link><pubDate>Wed, 25 May 2022 17:09:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/401.%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%8B%E8%A1%A8/</guid><description>二进制手表 Category Difficulty Likes Dislikes algorithms Easy (61.77%) 363 - Tags backtracking | bit-manipulation Companies google 二进制手表顶部有 4 个 LED 代表 小时（0-11），</description></item><item><title>构造 K 个回文字符串</title><link>https://justice.bj.cn/post/leetcode/1400.%E6%9E%84%E9%80%A0-k-%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sun, 22 May 2022 17:42:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1400.%E6%9E%84%E9%80%A0-k-%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>构造 K 个回文字符串 Category Difficulty Likes Dislikes algorithms Medium (61.19%) 39 - Tags Unknown Companies Unknown 给你一个字符串 s 和一个整数 k 。请你用 s 字</description></item><item><title>jzice-nvim</title><link>https://justice.bj.cn/post/70.tool/jzice-nvim/</link><pubDate>Sun, 22 May 2022 09:42:16 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/jzice-nvim/</guid><description>jzice-nvim Info Neovim lua config in one file.
Require neovim &amp;gt; 0.7.0 git rg Feature plugin manager: packer theme: molokai ui: startiy + nvim-tree + symbols-outline + lualine(statusline) lspconfig + lsp-installer + nvim-cmp telescope + anyjump + lspsaga hop + vim-eft nvim-autopairs nvim-notify vim-fugitive+lazygit + gitsigns .</description></item><item><title>Accumulo</title><link>https://justice.bj.cn/post/30.architech/accumulo/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/accumulo/</guid><description>Accumulo 简介 Apache Accumulo 由 NSA 开源一个可靠、可伸缩、高性能的排序分布式的 Key-Value 数据库。基于单元访问控制以</description></item><item><title>AdaBoost</title><link>https://justice.bj.cn/post/50.ml/adaboost/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/adaboost/</guid><description>AdaBoost 简介 AdaBoost(Adaptive Boosting, 自适应增强），是Yoav Freund和Robert Schapire在199</description></item><item><title>Alluxio</title><link>https://justice.bj.cn/post/30.architech/alluxio/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/alluxio/</guid><description>Alluxio 简介 Alluxio是一个开源的基于内存的分布式存储系统, 为计算框架和存储系统构建了</description></item><item><title>Anna</title><link>https://justice.bj.cn/post/30.architech/anna/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/anna/</guid><description>Anna 简介 Anna是伯克利 RISE 实验室推出了KV存储数据库，提供了惊人的存取速度、超强的伸缩</description></item><item><title>apache arrow</title><link>https://justice.bj.cn/post/30.architech/arrow/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/arrow/</guid><description>apache arrow 简介 Apache Arrow 是一种基于内存的列式数据格式； 为了解决系统到系统之间的数据传输问题， 2016 年</description></item><item><title>Apache Avro</title><link>https://justice.bj.cn/post/30.architech/avro/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/avro/</guid><description>Apache Avro 简介 Avro是Hadoop的一个数据序列化系统; 由Hadoop的创始人Doug C</description></item><item><title>Apache Hudi</title><link>https://justice.bj.cn/post/30.architech/hudi/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hudi/</guid><description>Apache Hudi 简介 Hudi，全称是Hadoop Upsert Delete and Incremental, 最初的设计目标：在hadoop上实现up</description></item><item><title>Apache iceberg</title><link>https://justice.bj.cn/post/30.architech/iceberg/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/iceberg/</guid><description>Apache iceberg 简介 Apache Iceberg 是一种用于跟踪超大规模表的新格式，是专门为对象存储（如S3）而设计的, 由</description></item><item><title>Apache Kylin</title><link>https://justice.bj.cn/post/30.architech/kylin/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/kylin/</guid><description>Apache Kylin 简介 Apache Kylin™是一个开源的分布式分析引擎，提供Hadoop之上的SQL查询接</description></item><item><title>Apache Phoenix</title><link>https://justice.bj.cn/post/30.architech/phoenix/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/phoenix/</guid><description>Apache Phoenix 简介 Phoenix是构建在HBase上的一个SQL层，能让我们用标准的JDBC A</description></item><item><title>AWS常用概念</title><link>https://justice.bj.cn/post/30.architech/aws-s3/aws-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/aws-s3/aws-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</guid><description>AWS常用概念 简介 每个Region都是完全独立的。每个Availability Zon</description></item><item><title>B-Link-Tree</title><link>https://justice.bj.cn/post/12.data_struct/tree/b-link-tree/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tree/b-link-tree/</guid><description>B-Link-Tree 简介 B-Link-Tree是B+ Tree的一个变种；优化了B+ Tree结构调整时的</description></item><item><title>BlobStore</title><link>https://justice.bj.cn/post/40.storage/spdk/blobstore/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/spdk/blobstore/</guid><description>BlobStore 简介 SPDK bdev层类似于内核中的通用块设备层，是对底层不同类型设备（如NVMe bde</description></item><item><title>BookKeeper</title><link>https://justice.bj.cn/post/30.architech/bookkeeper/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/bookkeeper/</guid><description>BookKeeper 简介 BookKeeper是一个可靠的日志流记录系统，用于将系统产生的日志(也可以是</description></item><item><title>Cap'n Proto</title><link>https://justice.bj.cn/post/12.data_struct/capn-proto/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/capn-proto/</guid><description>Cap'n Proto 简介 Cap’n Proto 是非常快速的数据交换格式和基于容量的 RPC 系统， Cap'n Proto没有任何</description></item><item><title>ChubaoFS MetaNode</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-metanode/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-metanode/</guid><description>ChubaoFS MetaNode 简介 源码分析 启动流程 1 2 3 4 5 main=&amp;gt;start: main doStart=&amp;gt;subroutine: 启动 et=&amp;gt;end: 结束 main-&amp;gt;doStart-&amp;gt;et 1 2 3 4 5 doStart=&amp;gt;start: doStart parseConfig=&amp;gt;operation: 解析配置 et=&amp;gt;end: 结束 doStart-&amp;gt;parseConfig</description></item><item><title>ChubaoFS vs NFS 性能对比测试</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-vs-nfs%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-vs-nfs%E5%AF%B9%E6%AF%94%E6%B5%8B%E8%AF%95/</guid><description>ChubaoFS vs NFS 性能对比测试 目的 使用fio，对chubaofs 和 nfs 进行读写测试，对比两者性能；</description></item><item><title>ChubaoFS 基础</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E5%9F%BA%E7%A1%80/</guid><description>ChubaoFS 基础 简介 ChubaoFS是一个开源的分布式文件存储系统，同时提供POSIX FS和S</description></item><item><title>chubaofs-s3</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-s3/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-s3/</guid><description>chubaofs-s3 简介 chubaofs的s3兼容组件，提供s3对象存储服务。 架构 s3-cmd 1 2 3 4 5 6 7 8 9</description></item><item><title>ClickHouse</title><link>https://justice.bj.cn/post/30.architech/clickhouse/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/clickhouse/</guid><description>ClickHouse 简介 clickhouse是2016年由俄罗斯Yandex开源的一个OLAP列存数据</description></item><item><title>clock缓存置换算法</title><link>https://justice.bj.cn/post/13.algorithm/clock%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/clock%E7%AE%97%E6%B3%95/</guid><description>clock缓存置换算法 简介 clock缓存置换算法(时钟置换算法)是LRU算法的一个变</description></item><item><title>CockroachDB</title><link>https://justice.bj.cn/post/30.architech/cockroachdb/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/cockroachdb/</guid><description>CockroachDB 简介 CockroachDB是一个分布式的K/V数据仓库，是Google Spanne</description></item><item><title>ConcurrentHashMap 原理分析</title><link>https://justice.bj.cn/post/14.language/java/concurrenthashmap/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/concurrenthashmap/</guid><description>ConcurrentHashMap 原理分析 简介 java 中，hash 表总共有hashmap, hashtable,concur</description></item><item><title>CPU基础</title><link>https://justice.bj.cn/post/21.linux/cpu%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/cpu%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid><description>CPU基础 简介 CPU(Center Process Unit, 中央处理单元)是计算机的核心部件，在冯诺依曼体系架构中，位于中心</description></item><item><title>CubeFS-BlobStore</title><link>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore/</guid><description>CubeFS-BlobStore 简介 CubeFS-BlobStore是一个高可靠、高可用、低成本、支持超大规模(E</description></item><item><title>Delta Lake</title><link>https://justice.bj.cn/post/30.architech/delta-lake/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/delta-lake/</guid><description>Delta Lake 简介 Delta Lake 是一个存储层，为 Apache Spark 和大数据 workloads 提供 ACID 事务能力，其通过写和快照隔离之间的乐</description></item><item><title>DMA &amp; RDMA 基本概念</title><link>https://justice.bj.cn/post/21.linux/dma_rdma-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/dma_rdma-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid><description>DMA &amp;amp; RDMA 基本概念 DMA 系统架构 先来看一个典型的系统架构，其中，CPU 通过某种内存总线（me</description></item><item><title>DPDK</title><link>https://justice.bj.cn/post/21.linux/dpdk/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/dpdk/</guid><description>DPDK 简介 DPDK（Data Plane Development Kit）是由Intel提出的linux 网络加速方案，其完</description></item><item><title>DynamoDB</title><link>https://justice.bj.cn/post/30.architech/dynamodb/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/dynamodb/</guid><description>DynamoDB 简介 Amazon DynamoDB 是Amazon的一个键/值和文档数据库，可以在任何规模的环境中提供个位数的</description></item><item><title>ElasticSearch基础</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80/</guid><description>ElasticSearch基础 简介 Elasticsearch 是一个基于Lucene的搜索和分析引擎; 近实时；</description></item><item><title>ElasticSearch基础之lucene</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80%E4%B9%8Blucene/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%9F%BA%E7%A1%80%E4%B9%8Blucene/</guid><description>ElasticSearch基础之lucene 简介 Elasticsearch 是一个基于lucene的分布式可扩</description></item><item><title>Flink内存管理</title><link>https://justice.bj.cn/post/30.architech/flink/flink%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/flink/flink%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid><description>Flink内存管理 JVM存在的问题 对象存储密度低 Full GC 影响性能 OOM 影响稳定 Cache Miss 代码结构：</description></item><item><title>Flink简介</title><link>https://justice.bj.cn/post/30.architech/flink/flink%E7%AE%80%E4%BB%8B/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/flink/flink%E7%AE%80%E4%BB%8B/</guid><description>Flink简介 简介 Flink是开始于2008年，原生的流处理系统，提供high lev</description></item><item><title>FUSE简介</title><link>https://justice.bj.cn/post/40.storage/fuse/fuse/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/fuse/fuse/</guid><description>FUSE简介 简介 FUSE（Filesystem in Userspace）是linux ke</description></item><item><title>Git内部原理揭秘</title><link>https://justice.bj.cn/post/70.tool/git%E5%8E%9F%E7%90%86/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/git%E5%8E%9F%E7%90%86/</guid><description>Git内部原理揭秘 Git是怎么储存信息的 这里会用一个简单的例子让大家直观感受一下gi</description></item><item><title>Golang之interface</title><link>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Binterface/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Binterface/</guid><description>Golang之interface 简介 接口是一个或多个方法签名的集合 只要某个类型拥有该</description></item><item><title>Golang之unsafe</title><link>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bunsafe/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bunsafe/</guid><description>Golang之unsafe 简介 unsafe包 unsafe 包中的几个函数都是在编译期间执行的。 1</description></item><item><title>Goroutine</title><link>https://justice.bj.cn/post/14.language/golang/goroutine/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/goroutine/</guid><description>Goroutine 简介 goroutine是go中的协程。goroutine基于线程池+任务队列模型，</description></item><item><title>Grafana</title><link>https://justice.bj.cn/post/36.monitor/grafana%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/grafana%E5%9F%BA%E7%A1%80/</guid><description>Grafana 简介 Grafana是开源的数据分析及可视化前端； es Dashboard es 变量 1 2 query: {&amp;#34;find&amp;#34;: &amp;#34;terms&amp;#34;, &amp;#34;field&amp;#34;: &amp;#34;service.name&amp;#34;, &amp;#34;query&amp;#34;: &amp;#34;service.name: $serviceType-*&amp;#34; } es</description></item><item><title>Hazelcast</title><link>https://justice.bj.cn/post/30.architech/hazelcast/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hazelcast/</guid><description>Hazelcast 简介 Hazelcast作为一个高度可扩展的数据分发和集群平台，提供了高效的、可扩展</description></item><item><title>HBase Compaction分析</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-compact%E5%88%86%E6%9E%90/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-compact%E5%88%86%E6%9E%90/</guid><description>HBase Compaction分析 compact 流程 compact 触发条件 memstore flush： memstore flush会产生HFile</description></item><item><title>HBase python client</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-python-client%E6%93%8D%E4%BD%9C/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-python-client%E6%93%8D%E4%BD%9C/</guid><description>HBase python client 介绍 hbase 提供thrift接口，python可通过该接口和hbase通信。happ</description></item><item><title>HBase Region Split</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-split/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-split/</guid><description>HBase Region Split split 作用 在 HBase 中，split 其实是进行 sharding 的一种技术手段，通过 HBase 的 split 条件和 split 策略，将</description></item><item><title>HBase Scan</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-scan/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-scan/</guid><description>HBase Scan Filter 过滤器是在get或者scan时候过滤结果用的. HBase中的过滤器被用户创建出</description></item><item><title>HBase WAL详解</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-log%E7%BB%93%E6%9E%84/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-log%E7%BB%93%E6%9E%84/</guid><description>HBase WAL详解 简介 HLog 每个RegionServer拥有一个或多个HLog（默认只有1个，</description></item><item><title>hbase 复制(replication)</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E5%A4%8D%E5%88%B6/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E5%A4%8D%E5%88%B6/</guid><description>hbase 复制(replication) 相关复制命令 1 2 Group name: replication Commands: add_peer, append_peer_tableCFs, disable_peer, enable_peer, list_peers, list_replicated_tables, remove_peer, remove_peer_tableCFs, set_peer_tableCFs, show_peer_tableCFs add_peer : 添加</description></item><item><title>Hermes算法</title><link>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/hermes%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/hermes%E7%AE%97%E6%B3%95/</guid><description>Hermes算法 简介 基本思想 特性 Strong Consistency: linearizable reads and writes Fault Tolerance: live nodes unblock via write replays after faults High Performance Reads: reads are served locally from all replicas</description></item><item><title>HFile详解</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-hfile%E8%AF%A6%E8%A7%A3/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-hfile%E8%AF%A6%E8%A7%A3/</guid><description>HFile详解 kv store 参考 hbase源码系列（九）StoreFile存储格式 - 岑玉海 - 博</description></item><item><title>Hive</title><link>https://justice.bj.cn/post/30.architech/hive/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hive/</guid><description>Hive 简介 Hive是建立在 Hadoop 上的数据仓库基础构架。它提供了一系列的工具，可以用来进行数据</description></item><item><title>Istio基础</title><link>https://justice.bj.cn/post/32.cloudnative/istio%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/istio%E5%9F%BA%E7%A1%80/</guid><description>Istio基础 简介 Istio为希腊文，意思是“启航”，和“kubernetes（舵手</description></item><item><title>JAVA基础</title><link>https://justice.bj.cn/post/14.language/java/java%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/java%E5%9F%BA%E7%A1%80/</guid><description>JAVA基础 简介 内存对象 jvm 程序计数器(PC) 栈(Stack) 虚拟机栈(VM stack) 本地方法</description></item><item><title>Java线程池</title><link>https://justice.bj.cn/post/14.language/java/java%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/java%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid><description>Java线程池 简介 创建线程需要操作系统资源（线程资源，栈空间等），频繁创建和销毁大量</description></item><item><title>java调试</title><link>https://justice.bj.cn/post/14.language/java/java%E8%B0%83%E8%AF%95/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/java%E8%B0%83%E8%AF%95/</guid><description>java调试 简介 jvm内存布局 工具 jps: 查看jvm 进程信息； jstack：查看jvm栈信</description></item><item><title>Java锁</title><link>https://justice.bj.cn/post/14.language/java/java%E9%94%81/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/java%E9%94%81/</guid><description>Java锁 简介 Synchronized synchronized是悲观锁； synchronized通过jav</description></item><item><title>k8s中informer机制</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E4%B9%8Binformer%E6%9C%BA%E5%88%B6/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E4%B9%8Binformer%E6%9C%BA%E5%88%B6/</guid><description>k8s中informer机制 简介 kubernetes中的informer机制可能是实</description></item><item><title>k8s基础</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E5%9F%BA%E7%A1%80/</guid><description>k8s基础 简介 kubernetes(简称k8s)是google 2015年开源的一个容</description></item><item><title>k8s手动部署</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E6%89%8B%E5%8A%A8%E9%83%A8%E7%BD%B2/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E6%89%8B%E5%8A%A8%E9%83%A8%E7%BD%B2/</guid><description>k8s手动部署 简介 在物理机上手动部署k8s集群。 部署方式 物理机器守护进程 物理机器po</description></item><item><title>k8s网络模型</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</guid><description>k8s网络模型 简介 Kubernetes 要求所有的网络插件实现必须满足如下要求： 所有的 Pod 可以与任何其他 Pod</description></item><item><title>Kafka</title><link>https://justice.bj.cn/post/30.architech/kafka/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/kafka/</guid><description>Kafka 简介 Kafka是由Linkedin公司开发的分布式、支持分区（partition）</description></item><item><title>Kerberos</title><link>https://justice.bj.cn/post/30.architech/hbase/kerberos/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/kerberos/</guid><description>Kerberos 简介 组件 KDC：Key Distribution Center, 密钥分发中心 KAdmin: 安装 ubuntu 1 $ apt install krb5-server krb5-user centos 1 $ yum install -y krb5-server krb5-workstation 配置文件</description></item><item><title>Knative</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/knative/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/knative/</guid><description>Knative 简介 Knative 是 Google 2018 年 在Google Cloud Next 2018 上发布的基于 Kubernetes 的 Serverless 解决方案， 旨在标准化 Serve</description></item><item><title>kudu</title><link>https://justice.bj.cn/post/30.architech/kudu/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/kudu/</guid><description>kudu 简介 特性 数据模型和关系数据库类似，为结构化的表；列的数量有限（和HBase/Cas</description></item><item><title>LevelDB</title><link>https://justice.bj.cn/post/30.architech/leveldb/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/leveldb/</guid><description>LevelDB 简介 LevelDB是Google的 Jeff Dean和Sanjay Ghemawat设计开发</description></item><item><title>linux 文件系统之VFS</title><link>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B9%8Bvfs/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B9%8Bvfs/</guid><description>linux 文件系统之VFS 简介 基本概念 VFS VFS(Vritual Filesystem) 是给用户空间程序提供统一的文件和文件系统访问接口</description></item><item><title>linux-0.11 启动流程</title><link>https://justice.bj.cn/post/21.linux/linux-0.11%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-0.11%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid><description>linux-0.11 启动流程 1. BIOS 引导 BIOS将 bootsect(启动盘第一个扇区)加载到内存 0x7C00 处，并跳</description></item><item><title>Linux内存基础</title><link>https://justice.bj.cn/post/21.linux/linux-%E5%86%85%E5%AD%98/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-%E5%86%85%E5%AD%98/</guid><description>Linux内存基础 Linux内核地址类型 物理地址：CPU和MM之间使用。（内存在总线</description></item><item><title>Linux内嵌链表</title><link>https://justice.bj.cn/post/21.linux/linux%E5%86%85%E5%B5%8C%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux%E5%86%85%E5%B5%8C%E9%93%BE%E8%A1%A8/</guid><description>Linux内嵌链表 简介 linux 内嵌链表sys/queue.h移植自FreeBSD queue 分为 SL</description></item><item><title>Linux网络命名空间</title><link>https://justice.bj.cn/post/32.cloudnative/linux%E7%BD%91%E7%BB%9C%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/linux%E7%BD%91%E7%BB%9C%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/</guid><description>Linux网络命名空间 简介 Linux network namespace是Linux上容器技术的基础之一； network</description></item><item><title>Lucene基础知识</title><link>https://justice.bj.cn/post/30.architech/lucene/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/lucene/</guid><description>Lucene基础知识 简介 Lucene 是一个基于 Java 的全文信息检索工具包，它不是一个完整的搜索应用</description></item><item><title>MassTree</title><link>https://justice.bj.cn/post/12.data_struct/tree/masstree/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tree/masstree/</guid><description>MassTree 简介 masstree 来源于 2012 年发表的论文(Cache craftiness for fast multicore key-value storage)，可以理解为 B+ Tree 和</description></item><item><title>Merkle Tree</title><link>https://justice.bj.cn/post/12.data_struct/tree/merkle-tree/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tree/merkle-tree/</guid><description>Merkle Tree 简介 Merkle Tree 是一种 Hash Tree，由 Ralph Merkle 在 1979 年发明。 Merkle Tree 的每个非叶节点通过其子节点的标记</description></item><item><title>minio外链</title><link>https://justice.bj.cn/post/30.architech/minio/minio%E5%A4%96%E9%93%BE/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/minio/minio%E5%A4%96%E9%93%BE/</guid><description>minio外链 简介 外链 原理：使用secretKey, date, region, s3 作为key，对对象请求()</description></item><item><title>Nebula Graph</title><link>https://justice.bj.cn/post/30.architech/graphdb/nebulagraph/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/graphdb/nebulagraph/</guid><description>Nebula Graph 简介 Nebula Graph是一款开源的、分布式的、易扩展的原生图数据库，能够承载数千亿个点</description></item><item><title>NLP</title><link>https://justice.bj.cn/post/50.ml/nlp/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/nlp/</guid><description>NLP 简介 TF-IDF TF （Term Frequency）—— “单词频率”: 某一个单词在目标文档中出现</description></item><item><title>npm</title><link>https://justice.bj.cn/post/70.tool/npm/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/npm/</guid><description>npm 简介 node package manager, node 包管理工具。 解决Building fresh packages...一直执行下载 ~/.npmrc</description></item><item><title>PacificA</title><link>https://justice.bj.cn/post/30.architech/pacifica/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/pacifica/</guid><description>PacificA 简介 Pacifica 是微软 2008 年发表的一个通用的复制框架，早于 raft（2014），其具有简单、实</description></item><item><title>Percolator模型</title><link>https://justice.bj.cn/post/31.distribute/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E4%B9%8Bpercolar/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E4%B9%8Bpercolar/</guid><description>Percolator模型 简介 Percolator模型是Google提出的构建在Big</description></item><item><title>Prometheus基础</title><link>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E5%9F%BA%E7%A1%80/</guid><description>Prometheus基础 简介 Prometheus(普罗米修斯)受启发于Google的</description></item><item><title>Prometheus直方图</title><link>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E4%B9%8B%E7%9B%B4%E6%96%B9%E5%9B%BE/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E4%B9%8B%E7%9B%B4%E6%96%B9%E5%9B%BE/</guid><description>Prometheus直方图 简介 prometheus中的histogram是用来设置直</description></item><item><title>Prometheus配置</title><link>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E9%85%8D%E7%BD%AE/</guid><description>Prometheus配置 简介 Prometheus受启发于Google的Brogmon</description></item><item><title>ProtoBuf</title><link>https://justice.bj.cn/post/12.data_struct/protobuf/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/protobuf/</guid><description>ProtoBuf 简介 protocol buffers 是一种语言无关、平台无关、可扩展的序列化结构数据的方法，它可用于（数据）通</description></item><item><title>Pulsar</title><link>https://justice.bj.cn/post/30.architech/pulsar/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/pulsar/</guid><description>Pulsar 简介 Pulsar 是一个用于服务器到服务器的消息系统，具有多租户、高性能等优势。 Pulsar 最初由 Yahoo 开发</description></item><item><title>QPS、TPS、并发用户数、吞吐量关系</title><link>https://justice.bj.cn/post/30.architech/qpstps%E5%B9%B6%E5%8F%91%E7%94%A8%E6%88%B7%E6%95%B0%E5%90%9E%E5%90%90%E9%87%8F%E5%85%B3%E7%B3%BB-/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/qpstps%E5%B9%B6%E5%8F%91%E7%94%A8%E6%88%B7%E6%95%B0%E5%90%9E%E5%90%90%E9%87%8F%E5%85%B3%E7%B3%BB-/</guid><description>QPS、TPS、并发用户数、吞吐量关系 QPS Queries Per Second，每秒查询率。一台服务器每秒</description></item><item><title>Ray</title><link>https://justice.bj.cn/post/30.architech/ray/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/ray/</guid><description>Ray 简介 Ray是UC Berkeley AMP 实验室继 Spark 后又推出一款重磅高性能AI计算引擎，号称支持每秒数百</description></item><item><title>RocksDB</title><link>https://justice.bj.cn/post/30.architech/rocksdb/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/rocksdb/</guid><description>RocksDB 简介 RocksDB是Facebook基于LevelDB开发的一种嵌入式Key-va</description></item><item><title>Rook基础</title><link>https://justice.bj.cn/post/32.cloudnative/rook%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/rook%E5%9F%BA%E7%A1%80/</guid><description>Rook基础 简介 架构 组件 Rook Volume Plugin：扩展了 K8S 的存储系统，使用 Kubelet 代理程序 Pod 可以挂</description></item><item><title>RT-Linux</title><link>https://justice.bj.cn/post/21.linux/rt-linux/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/rt-linux/</guid><description>RT-Linux 简介 通用linux是非实时的分时操作系统， RT-Linux（RealTime Lin</description></item><item><title>SaltStack</title><link>https://justice.bj.cn/post/70.tool/saltstack/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/saltstack/</guid><description>SaltStack 简介 Salt是一个使用Python开发的，非常简单易用和轻量级的管理工具。由Mas</description></item><item><title>Spanner</title><link>https://justice.bj.cn/post/30.architech/spanner/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spanner/</guid><description>Spanner 简介 Spanner 是Google的可扩展的、多版本、全球分布式、同步复制多副本的数据库。是第一</description></item><item><title>spark</title><link>https://justice.bj.cn/post/30.architech/spark/spark%E5%AE%89%E8%A3%85%E8%BF%90%E8%A1%8C/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark%E5%AE%89%E8%A3%85%E8%BF%90%E8%A1%8C/</guid><description>spark 简介 Spark vs MapReduce MapReduce Spark 运行模式 spark支持standlone、yarn、mesos等多种</description></item><item><title>Spark 文件 IO 分析</title><link>https://justice.bj.cn/post/30.architech/spark/spark-shuffle/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark-shuffle/</guid><description>Spark 文件 IO 分析 1. Spark 简介 Spark 是一种是基于内存计算的大数据并行计算框架，主要分为 Driver</description></item><item><title>Spark存储体系详解</title><link>https://justice.bj.cn/post/30.architech/spark/spark%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB%E8%AF%A6%E8%A7%A3/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB%E8%AF%A6%E8%A7%A3/</guid><description>Spark存储体系详解 存储体系的职责 在研究Spark存储体系之前，我们先搞清楚一个重</description></item><item><title>SPDK简介</title><link>https://justice.bj.cn/post/40.storage/spdk/spdk%E7%AE%80%E4%BB%8B/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/spdk/spdk%E7%AE%80%E4%BB%8B/</guid><description>SPDK简介 简介 SPDK（Storage Performance Development Kit）是Intel发布的一套高性能存储</description></item><item><title>Spring的注解</title><link>https://justice.bj.cn/post/14.language/java/spring%E6%B3%A8%E8%A7%A3/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/spring%E6%B3%A8%E8%A7%A3/</guid><description>Spring的注解 什么是注解 传统的Spring做法是使用.xml文件来对bean进行</description></item><item><title>TAILQ-双向有尾队列</title><link>https://justice.bj.cn/post/12.data_struct/tailq/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tailq/</guid><description>TAILQ-双向有尾队列 简介 TAILQ(双向有尾队列)是 FreeBSD/linux 内核对双向队列操作的一种抽</description></item><item><title>Thanos</title><link>https://justice.bj.cn/post/36.monitor/thanos/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/thanos/</guid><description>Thanos 简介 特点 架构 组件 这张图中包含了 Thanos 的几个核心组件： Thanos Query：实现了 Prometheus API，将来</description></item><item><title>UIO</title><link>https://justice.bj.cn/post/21.linux/linux-uio/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-uio/</guid><description>UIO 简介 UIO（Userspace I/O,用户空间IO）是运行在用户空间的I/O技术。</description></item><item><title>Unikernel基础知识</title><link>https://justice.bj.cn/post/32.cloudnative/unikernel%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/unikernel%E5%9F%BA%E7%A1%80/</guid><description>Unikernel基础知识 简介 Unikernel 是专用的，单地址空间的，使用 library OS 构建出来的镜像。 Un</description></item><item><title>XDP</title><link>https://justice.bj.cn/post/21.linux/xdp/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/xdp/</guid><description>XDP 简介 XDP（eXpress Data Path）为Linux内核提供了高性能、可编程的网络数</description></item><item><title>一致性Hash算法</title><link>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95/</guid><description>一致性Hash算法 一致性哈希算法在 1997 年由麻省理工学院的 Karger 等人在解决分布式 Cache 中提出; 设</description></item><item><title>以太坊数据结构</title><link>https://justice.bj.cn/post/60.blockchain/etherume/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%8C%BA%E5%9D%97%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/60.blockchain/etherume/%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%8C%BA%E5%9D%97%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid><description>以太坊数据结构 区块数据结构 以太坊的区块是由区块头、交易列表和叔区块三部分组成。其中区</description></item><item><title>分布式哈希表(DHT)</title><link>https://justice.bj.cn/post/12.data_struct/40.%E5%88%86%E5%B8%83%E5%BC%8F%E5%93%88%E5%B8%8C%E8%A1%A8dht/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/40.%E5%88%86%E5%B8%83%E5%BC%8F%E5%93%88%E5%B8%8C%E8%A1%A8dht/</guid><description>分布式哈希表(DHT) 简介 分布式哈希表(DHT, Distributed Hash Table)是分布式系统中，用来</description></item><item><title>分布式系统时钟</title><link>https://justice.bj.cn/post/31.distribute/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%92%9F/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%92%9F/</guid><description>分布式系统时钟 时钟 物理时钟 物理时钟：物理节点的系统时钟； 逻辑时钟：逻辑上表示事件顺序</description></item><item><title>图解 Golang 的 GC 算法</title><link>https://justice.bj.cn/post/14.language/golang/golang-gc%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang-gc%E7%AE%97%E6%B3%95/</guid><description>图解 Golang 的 GC 算法 简介 虽然 Golang 的 GC 自打一开始，就被人所诟病，但是经过这么多年的发展，Gol</description></item><item><title>大数据基础</title><link>https://justice.bj.cn/post/30.architech/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/</guid><description>大数据基础 语言基础 Java基础篇 Java 基础主要包含以下部分： 语言基础 锁 多线程 并发包中常用</description></item><item><title>并发模型</title><link>https://justice.bj.cn/post/30.architech/%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B/</guid><description>并发模型 Actor 模型 简介 Actors 模型(Actor model)首先是由 Carl Hewitt 在 1973 定义， 由 Erlang OTP (Open Telecom Platform) 推</description></item><item><title>推荐系统</title><link>https://justice.bj.cn/post/50.ml/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/</guid><description>推荐系统 简介 “推荐系统的基本任务是联系用户和物品，解决信息过载的问题” 信息过载： 分类</description></item><item><title>数据库索引介绍</title><link>https://justice.bj.cn/post/30.architech/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E4%BB%8B%E7%BB%8D/</guid><description>数据库索引介绍 B+Tree SkipList MassTree</description></item><item><title>日志结构合并树(LSM-Tree)</title><link>https://justice.bj.cn/post/12.data_struct/tree/lsm-tree/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tree/lsm-tree/</guid><description>日志结构合并树(LSM-Tree) 简介 LSM-Tree全称 Log Structured Merge Tree，是 Google 在 2006 年</description></item><item><title>机器学习</title><link>https://justice.bj.cn/post/50.ml/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/</guid><description>机器学习 基础知识 线性代数 矩阵 概率论 分类 监督学习 无监督学习 强化学习 常用算法 回归 聚类 支持</description></item><item><title>树状数组(BIT)</title><link>https://justice.bj.cn/post/12.data_struct/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</guid><description>树状数组(BIT) 简介 树状数组或二元索引树（英语：Binary Indexed Tree），又以其发</description></item><item><title>知识图谱</title><link>https://justice.bj.cn/post/30.architech/graphdb/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/graphdb/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</guid><description>知识图谱 简介 知识图谱（Knowledge Graph）是Google 于2012年提出了</description></item><item><title>系统架构演进过程</title><link>https://justice.bj.cn/post/30.architech/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/</guid><description>系统架构演进过程 随着 IT 信息化的普及，更多的交易放到了网络上，信息量增加和访问次数频繁</description></item><item><title>红黑树(RB-Tree)</title><link>https://justice.bj.cn/post/12.data_struct/tree/rb-tree/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tree/rb-tree/</guid><description>红黑树(RB-Tree) 定义 红黑树是一种二叉平衡树。 性质 每个节点要么是黑色，要么是红</description></item><item><title>线段树(Segment-Tree)</title><link>https://justice.bj.cn/post/12.data_struct/tree/segment-tree/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/tree/segment-tree/</guid><description>线段树(Segment-Tree) 简介 线段树（Segment Tree）是一种二叉树形</description></item><item><title>k8s证书</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E8%AF%81%E4%B9%A6/</link><pubDate>Sat, 21 May 2022 21:16:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E8%AF%81%E4%B9%A6/</guid><description>k8s证书 简介 操作 1 2 ## 创建默认证书 cfssl print-defaults csr &amp;gt; ca-csr-config.json 证书相关文件 X.509：RFC5280</description></item><item><title>删除子字符串的最大得分</title><link>https://justice.bj.cn/post/leetcode/1717.%E5%88%A0%E9%99%A4%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86/</link><pubDate>Sat, 21 May 2022 21:16:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1717.%E5%88%A0%E9%99%A4%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86/</guid><description>删除子字符串的最大得分 Category Difficulty Likes Dislikes algorithms Medium (44.73%) 24 - Tags Unknown Companies Unknown 给你一个字符串 s 和两个整数 x 和 y 。你</description></item><item><title>大礼包</title><link>https://justice.bj.cn/post/leetcode/638.%E5%A4%A7%E7%A4%BC%E5%8C%85/</link><pubDate>Sat, 21 May 2022 21:16:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/638.%E5%A4%A7%E7%A4%BC%E5%8C%85/</guid><description>大礼包 Category Difficulty Likes Dislikes algorithms Medium (64.38%) 327 - Tags dynamic-programming | depth-first-search Companies google 在 LeetCode 商店中， 有 n 件在售的物品。每件物品都有对应的</description></item><item><title>掷骰子模拟</title><link>https://justice.bj.cn/post/leetcode/1223.%E6%8E%B7%E9%AA%B0%E5%AD%90%E6%A8%A1%E6%8B%9F/</link><pubDate>Tue, 10 May 2022 22:29:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1223.%E6%8E%B7%E9%AA%B0%E5%AD%90%E6%A8%A1%E6%8B%9F/</guid><description>掷骰子模拟 Category Difficulty Likes Dislikes algorithms Hard (47.73%) 88 - Tags Unknown Companies Unknown 有一个骰子模拟器会每次投掷的时候生成一个 1 到 6 的</description></item><item><title>Squid</title><link>https://justice.bj.cn/post/70.tool/squid/</link><pubDate>Sun, 08 May 2022 22:55:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/squid/</guid><description>Squid 简介 squid是linux上的一款代理软件 参考</description></item><item><title>丢失的数字</title><link>https://justice.bj.cn/post/leetcode/268.%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97/</link><pubDate>Wed, 04 May 2022 16:22:31 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/268.%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97/</guid><description>丢失的数字 Category Difficulty Likes Dislikes algorithms Easy (65.63%) 602 - Tags array | math | bit-manipulation Companies bloomberg | microsoft 给定一个包含 [0, n] 中 n 个数的数组 nums ，找</description></item><item><title>3 的幂</title><link>https://justice.bj.cn/post/leetcode/326.3%E7%9A%84%E5%B9%82/</link><pubDate>Wed, 04 May 2022 15:53:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/326.3%E7%9A%84%E5%B9%82/</guid><description>3 的幂 Category Difficulty Likes Dislikes algorithms Easy (50.64%) 252 - Tags math Companies google 给定一个整数，写一个函数来判断它是否是 3 的幂次方。如</description></item><item><title>最小栈</title><link>https://justice.bj.cn/post/leetcode/155.%E6%9C%80%E5%B0%8F%E6%A0%88/</link><pubDate>Wed, 04 May 2022 10:33:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/155.%E6%9C%80%E5%B0%8F%E6%A0%88/</guid><description>最小栈 Category Difficulty Likes Dislikes algorithms Easy (58.03%) 1293 - Tags stack | design Companies amazon | bloomberg | google | snapchat | uber | zenefits 设计一个支持 push ，pop ，to</description></item><item><title>Fizz Buzz</title><link>https://justice.bj.cn/post/leetcode/412.fizzbuzz/</link><pubDate>Tue, 03 May 2022 21:10:09 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/412.fizzbuzz/</guid><description>Fizz Buzz Category Difficulty Likes Dislikes algorithms Easy (71.31%) 177 - Tags Unknown Companies Unknown 给你一个整数 n ，找出从 1 到 n 各个整数的 Fizz Buzz 表示，并用字</description></item><item><title>计数质数</title><link>https://justice.bj.cn/post/leetcode/204.%E8%AE%A1%E6%95%B0%E8%B4%A8%E6%95%B0/</link><pubDate>Tue, 03 May 2022 21:10:09 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/204.%E8%AE%A1%E6%95%B0%E8%B4%A8%E6%95%B0/</guid><description>计数质数 Category Difficulty Likes Dislikes algorithms Medium (37.52%) 881 - Tags hash-table | math Companies amazon | microsoft 给定整数 n ，返回 所有小于非负整数 n 的质数的</description></item><item><title>宝石与石头</title><link>https://justice.bj.cn/post/leetcode/771.%E5%AE%9D%E7%9F%B3%E4%B8%8E%E7%9F%B3%E5%A4%B4/</link><pubDate>Tue, 03 May 2022 16:44:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/771.%E5%AE%9D%E7%9F%B3%E4%B8%8E%E7%9F%B3%E5%A4%B4/</guid><description>宝石与石头 Category Difficulty Likes Dislikes algorithms Easy (85.18%) 700 - Tags tree Companies Unknown 给你一个字符串 jewels 代表石头中宝石的类型，另有一个字</description></item><item><title>颠倒二进制位</title><link>https://justice.bj.cn/post/leetcode/190.%E9%A2%A0%E5%80%92%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%8D/</link><pubDate>Tue, 03 May 2022 16:44:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/190.%E9%A2%A0%E5%80%92%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%8D/</guid><description>颠倒二进制位 Category Difficulty Likes Dislikes algorithms Easy (70.89%) 527 - Tags bit-manipulation Companies airbnb | apple 颠倒给定的 32 位无符号整数的二进制位。 提示：</description></item><item><title>字符串的排列</title><link>https://justice.bj.cn/post/leetcode/567.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97/</link><pubDate>Mon, 02 May 2022 14:53:34 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/567.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97/</guid><description>字符串的排列 Category Difficulty Likes Dislikes algorithms Medium (43.74%) 656 - Tags two-pointers | sliding-window Companies microsoft 给你两个字符串 s1 和 s2 ，写一个函数来判断 s2 是</description></item><item><title>打乱数组</title><link>https://justice.bj.cn/post/leetcode/384.%E6%89%93%E4%B9%B1%E6%95%B0%E7%BB%84/</link><pubDate>Sun, 01 May 2022 21:13:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/384.%E6%89%93%E4%B9%B1%E6%95%B0%E7%BB%84/</guid><description>打乱数组 Category Difficulty Likes Dislikes algorithms Medium (61.06%) 274 - Tags Unknown Companies Unknown 给你一个整数数组 nums ，设计算法来打乱一个没有重复元素</description></item><item><title>第一个错误的版本</title><link>https://justice.bj.cn/post/leetcode/278.%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC/</link><pubDate>Sun, 01 May 2022 13:13:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/278.%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC/</guid><description>第一个错误的版本 Category Difficulty Likes Dislikes algorithms Easy (45.15%) 673 - Tags binary-search Companies facebook 你是产品经理，目前正在带领一个团队开发新的</description></item><item><title>环形链表</title><link>https://justice.bj.cn/post/leetcode/141.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 01 May 2022 10:53:18 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/141.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</guid><description>环形链表 Category Difficulty Likes Dislikes algorithms Easy (51.39%) 1476 - Tags linked-list | two-pointers Companies amazon | bloomberg | microsoft | yahoo 给你一个链表的头节点 head ，判断链表中</description></item><item><title>回文链表</title><link>https://justice.bj.cn/post/leetcode/234.%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 01 May 2022 10:38:59 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/234.%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</guid><description>回文链表 Category Difficulty Likes Dislikes algorithms Easy (51.35%) 1365 - Tags linked-list | two-pointers Companies amazon | facebook 给你一个单链表的头节点 head ，请你判断该链表是</description></item><item><title>验证回文串</title><link>https://justice.bj.cn/post/leetcode/125.%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/</link><pubDate>Sat, 30 Apr 2022 21:01:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/125.%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/</guid><description>验证回文串 Category Difficulty Likes Dislikes algorithms Easy (46.93%) 523 - Tags two-pointers | string Companies facebook | microsoft | uber | zenefits 给定一个字符串，验证它是否是回文</description></item><item><title>有效的字母异位词</title><link>https://justice.bj.cn/post/leetcode/242.%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/</link><pubDate>Sat, 30 Apr 2022 19:58:18 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/242.%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/</guid><description>有效的字母异位词 Category Difficulty Likes Dislikes algorithms Easy (65.23%) 565 - Tags hash-table | sort Companies amazon | uber | yelp 给定两个字符串 *s* 和 *t* ，编写一个</description></item><item><title>SnowFlake 算法</title><link>https://justice.bj.cn/post/13.algorithm/snowflake%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 30 Apr 2022 19:40:36 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/snowflake%E7%AE%97%E6%B3%95/</guid><description>SnowFlake 算法 概述 Snowflake 算法是 Twitter 发明的一种算法，用于在分布式的高并发环境中，生成 64 位自增 ID。这</description></item><item><title>反转字符串</title><link>https://justice.bj.cn/post/leetcode/344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sat, 30 Apr 2022 19:40:36 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>反转字符串 Category Difficulty Likes Dislikes algorithms Easy (78.41%) 580 - Tags two-pointers | string Companies Unknown 编写一个函数，其作用是将输入的字符串反转过来</description></item><item><title>字符串中的第一个唯一字符</title><link>https://justice.bj.cn/post/leetcode/387.%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%94%AF%E4%B8%80%E5%AD%97%E7%AC%A6/</link><pubDate>Sat, 30 Apr 2022 19:40:36 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/387.%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%94%AF%E4%B8%80%E5%AD%97%E7%AC%A6/</guid><description>字符串中的第一个唯一字符 Category Difficulty Likes Dislikes algorithms Easy (54.73%) 548 - Tags hash-table | string Companies amazon | bloomberg | microsoft 给定一个字符串 s ，找到</description></item><item><title>Jump一致性哈希算法</title><link>https://justice.bj.cn/post/13.algorithm/jumpconsistenthash%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 30 Apr 2022 17:04:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/jumpconsistenthash%E7%AE%97%E6%B3%95/</guid><description>Jump一致性哈希算法 简介 Jump consistent hash是一种一致性哈希算法, 此算法零内存消耗，均匀分</description></item><item><title>KMP算法</title><link>https://justice.bj.cn/post/13.algorithm/kmp%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 30 Apr 2022 17:04:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/kmp%E7%AE%97%E6%B3%95/</guid><description>KMP算法 简介 KMP算法是一种改进的字符串匹配算法，由D.E.Knuth，J.H.M</description></item><item><title>一致性哈希算法</title><link>https://justice.bj.cn/post/13.algorithm/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 30 Apr 2022 17:04:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95/</guid><description>一致性哈希算法 一致性哈希算法在 1997 年由麻省理工学院的 Karger 等人在解决分布式 Cache 中提出的，设计</description></item><item><title>设计模式及准则</title><link>https://justice.bj.cn/post/13.algorithm/design_pattern/</link><pubDate>Sat, 30 Apr 2022 17:04:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/design_pattern/</guid><description>设计模式及准则 设计准则 单一职责原则(SDP): 一个类自有一个引起变化的原因。 开发封闭</description></item><item><title>Disruptor(高效无锁内存队列)</title><link>https://justice.bj.cn/post/12.data_struct/%E9%AB%98%E6%95%88%E6%97%A0%E9%94%81%E7%8E%AF%E5%BD%A2%E9%98%9F%E5%88%97disruptor/</link><pubDate>Sat, 30 Apr 2022 11:32:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/%E9%AB%98%E6%95%88%E6%97%A0%E9%94%81%E7%8E%AF%E5%BD%A2%E9%98%9F%E5%88%97disruptor/</guid><description>Disruptor(高效无锁内存队列) 简介 Disruptor 是 LMAX 公司开源的一个高效的内存无锁队列。</description></item><item><title>Kafka时间轮算法</title><link>https://justice.bj.cn/post/12.data_struct/%E6%97%B6%E9%97%B4%E8%BD%AE/</link><pubDate>Sat, 30 Apr 2022 11:32:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/%E6%97%B6%E9%97%B4%E8%BD%AE/</guid><description>Kafka时间轮算法 Kafka 中存在一些定时任务(DelayedOperation)，如 De</description></item><item><title>RoaringBitmap</title><link>https://justice.bj.cn/post/12.data_struct/31.roaringbitmap/</link><pubDate>Sat, 30 Apr 2022 11:32:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/31.roaringbitmap/</guid><description>RoaringBitmap 简介 RoaringBitmap（简称为 RBM）是 2016 年由 S. Chambi、D. Lemi</description></item><item><title>k8s Volume实现原理</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s-volume/</link><pubDate>Sat, 30 Apr 2022 09:23:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s-volume/</guid><description>k8s Volume实现原理 在 Kubernetes 集群中，虽然无状态的服务非常常见，但是在实际的生产中仍然会</description></item><item><title>k8s之CSI实现原理</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E4%B9%8Bcsi%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</link><pubDate>Sat, 30 Apr 2022 09:23:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E4%B9%8Bcsi%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</guid><description>k8s之CSI实现原理 简介 Kubernetes存储系统的核心概念包括： StorageClass (SC)：存</description></item><item><title>k8s基本操作</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link><pubDate>Sat, 30 Apr 2022 09:23:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid><description>k8s基本操作 简介 k8s提供了kubeadm，kubectl, kubelet等二进制</description></item><item><title>k8s存储原理</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/</link><pubDate>Sat, 30 Apr 2022 09:23:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/</guid><description>k8s存储原理 简介 Kubernetes 默认情况下就提供了主流的存储卷接入方案，我们可以执行命令 kubectl explain pod.spec.volumes 查</description></item><item><title>k8s存储架构</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84/</link><pubDate>Sat, 30 Apr 2022 09:23:49 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84/</guid><description>k8s存储架构 在 Kubernetes 中挂载一个 Volume 如下图所示，左边的 YAML 模板定义了一个 StatefulSet 的一个应用，其中定</description></item><item><title>k8s之Pod基本原理</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E4%B9%8Bpod%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</link><pubDate>Sat, 30 Apr 2022 00:25:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E4%B9%8Bpod%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</guid><description>k8s之Pod基本原理 简介 Pod、Service、Volume 和 Namespace 是 Kubernetes 集群中四大基本</description></item><item><title>K8S之Volume原理</title><link>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E4%B9%8Bvolume%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</link><pubDate>Sat, 30 Apr 2022 00:25:08 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/k8s/k8s%E4%B9%8Bvolume%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</guid><description>K8S之Volume原理 简介 在 Kubernetes 集群中，虽然无状态的服务非常常见，但是在实际的生产中</description></item><item><title>Helm基础</title><link>https://justice.bj.cn/post/32.cloudnative/helm%E5%9F%BA%E7%A1%80/</link><pubDate>Fri, 29 Apr 2022 23:24:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/32.cloudnative/helm%E5%9F%BA%E7%A1%80/</guid><description>Helm基础 简介 Helm是 k8s 的一个管理工具，用来简化 k8s 应用的部署和管理，类似于 Ubuntu 中的</description></item><item><title>Java常用概念</title><link>https://justice.bj.cn/post/14.language/java/java%E5%B8%B8%E7%94%A8%E6%A6%82%E5%BF%B5/</link><pubDate>Fri, 29 Apr 2022 21:42:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/java%E5%B8%B8%E7%94%A8%E6%A6%82%E5%BF%B5/</guid><description>Java常用概念 简介 POJO: Plain Old Java Object, 简单java对象，指那些没有继承任何类、也没有实现任何</description></item><item><title>从ReentrantLock的实现看AQS的原理及应用</title><link>https://justice.bj.cn/post/14.language/java/java%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81/</link><pubDate>Fri, 29 Apr 2022 21:42:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/java%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81/</guid><description>从ReentrantLock的实现看AQS的原理及应用 前言 Java中的大部分同步类（</description></item><item><title>集中式缓存GuavaCache</title><link>https://justice.bj.cn/post/14.language/java/guavacache/</link><pubDate>Fri, 29 Apr 2022 21:42:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/guavacache/</guid><description>集中式缓存GuavaCache 简介 Guava Cache与ConcurrentMap很相似， guava</description></item><item><title>C++基础</title><link>https://justice.bj.cn/post/14.language/c++/c++%E5%9F%BA%E7%A1%80/</link><pubDate>Tue, 26 Apr 2022 16:43:54 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/c++%E5%9F%BA%E7%A1%80/</guid><description>C++基础 简介 内存分配 构造析构 默认函数(Defaulted 函数) 1 2 3 4 5 6 Object() {} //</description></item><item><title>C++11左值与右值</title><link>https://justice.bj.cn/post/14.language/c++/c++-%E5%B7%A6%E5%80%BC%E5%BC%95%E7%94%A8%E4%B8%8E%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/</link><pubDate>Tue, 26 Apr 2022 15:22:45 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/c++-%E5%B7%A6%E5%80%BC%E5%BC%95%E7%94%A8%E4%B8%8E%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/</guid><description>C++11左值与右值 简介 在C++11之前，表达式的值按出现在=的位置不同可简单分为左</description></item><item><title>有效的数独</title><link>https://justice.bj.cn/post/leetcode/36.%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/</link><pubDate>Sun, 24 Apr 2022 22:41:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/36.%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/</guid><description>有效的数独 Category Difficulty Likes Dislikes algorithms Medium (63.73%) 772 - Tags hash-table Companies apple | snapchat | uber 请你判断一个 9 x 9 的数独是否有效。只需要</description></item><item><title>轮转数组</title><link>https://justice.bj.cn/post/leetcode/189.%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/</link><pubDate>Sun, 24 Apr 2022 22:41:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/189.%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/</guid><description>轮转数组 Category Difficulty Likes Dislikes algorithms Medium (44.34%) 1453 - Tags array Companies amazon | bloomberg | microsoft 给你一个数组，将数组中的元素向右轮转 k 个位</description></item><item><title>最长同值路径</title><link>https://justice.bj.cn/post/leetcode/687.%E6%9C%80%E9%95%BF%E5%90%8C%E5%80%BC%E8%B7%AF%E5%BE%84/</link><pubDate>Thu, 21 Apr 2022 09:34:01 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/687.%E6%9C%80%E9%95%BF%E5%90%8C%E5%80%BC%E8%B7%AF%E5%BE%84/</guid><description>最长同值路径 Category Difficulty Likes Dislikes algorithms Medium (44.69%) 550 - Tags tree | recursion Companies google 给定一个二叉树的 root ，返回 最长的路径的长度 ，</description></item><item><title>C++ string</title><link>https://justice.bj.cn/post/14.language/c++/c++%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Wed, 20 Apr 2022 21:59:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/c++%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>C++ string 简介 std::string C++ 字符串库支持三种通用字符串类型： std::basic_string ——为操作任何字符类型的字符串设计的模</description></item><item><title>ElasticSearch 查询操作</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5/</link><pubDate>Wed, 20 Apr 2022 21:59:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5/</guid><description>ElasticSearch 查询操作 简介 常用操作 清空index数据 1 2 3 4 5 6 # create index curl -X PUT http://192.168.0.10:20000/test6 --header &amp;#34;Content-Type: application/json&amp;#34; -d index.json cat index.json # delete</description></item><item><title>MongoDB</title><link>https://justice.bj.cn/post/30.architech/mongo/</link><pubDate>Wed, 20 Apr 2022 21:59:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/mongo/</guid><description>MongoDB 简介 特点 基于内存的文档数据库, NoSQL 模式自由：可以把不同结构的文档存储在同一个数据库里</description></item><item><title>C++11</title><link>https://justice.bj.cn/post/14.language/c++/c++11/</link><pubDate>Fri, 15 Apr 2022 23:32:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/c++11/</guid><description>C++11 左值与右值 可以取地址的，有名字的，非临时的就是左值； 不能取地址的，没有名字的，临时</description></item><item><title>ES之SQL</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E4%B9%8Bsql/</link><pubDate>Fri, 15 Apr 2022 23:32:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E4%B9%8Bsql/</guid><description>ES之SQL 简介 使用 1 2 3 4 5 6 7 8 9 10 11 # 查看所有的table POST /_sql?format=txt { &amp;#34;query&amp;#34;: &amp;#34;SHOW TABLES&amp;#34; } # SQL -&amp;gt;</description></item><item><title>STL迭代器</title><link>https://justice.bj.cn/post/14.language/c++/stl/stl%E8%BF%AD%E4%BB%A3%E5%99%A8/</link><pubDate>Fri, 15 Apr 2022 23:32:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/stl/stl%E8%BF%AD%E4%BB%A3%E5%99%A8/</guid><description>STL迭代器 简介 STL迭代器为STL容器提供遍历相关的操作的统一接口 参考 cppref</description></item><item><title>Elasticsearch写流程</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%99%E5%85%A5%E6%B5%81%E7%A8%8B/</link><pubDate>Sat, 09 Apr 2022 12:34:48 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%99%E5%85%A5%E6%B5%81%E7%A8%8B/</guid><description>Elasticsearch写流程 lucene的写操作及其问题 Elasticsearc</description></item><item><title>ElasticSearch集群</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E9%9B%86%E7%BE%A4/</link><pubDate>Sat, 09 Apr 2022 12:34:48 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E9%9B%86%E7%BE%A4/</guid><description>ElasticSearch集群 简介 一个ES集群由多个节点(Node)组成； 节点角色 每</description></item><item><title>ES之Master选举</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E4%B9%8Bmaster%E9%80%89%E4%B8%BE/</link><pubDate>Fri, 08 Apr 2022 20:28:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E4%B9%8Bmaster%E9%80%89%E4%B8%BE/</guid><description>ES之Master选举 简介 ES的所有节点通过Gossip协议建立一个Cluster；</description></item><item><title>vim</title><link>https://justice.bj.cn/post/70.tool/vim/</link><pubDate>Fri, 08 Apr 2022 20:28:58 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/vim/</guid><description>vim 简介 基本操作 设置 1 2 3 4 5 6 7 8 9 ## 查看设置 :set shiftwidth? :echo &amp;amp;option ## 重置为默认值 :set option&amp;amp; ## 查看opt</description></item><item><title>ChubaoFS DataNode</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-datanode/</link><pubDate>Wed, 06 Apr 2022 09:43:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-datanode/</guid><description>ChubaoFS DataNode 简介 chubaofs datanode 是chubaofs中的数据存储节点，用于将chubaofs中的文件数据存</description></item><item><title>Chubaofs Fuse Client</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-client/</link><pubDate>Sat, 02 Apr 2022 10:47:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-client/</guid><description>Chubaofs Fuse Client 简介 源码 初始化 1 2 3 type Super struct { } write 参考</description></item><item><title>ChubaoFS 读写分析</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E8%AF%BB%E5%86%99%E5%88%86%E6%9E%90/</link><pubDate>Sat, 02 Apr 2022 10:47:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E8%AF%BB%E5%86%99%E5%88%86%E6%9E%90/</guid><description>ChubaoFS 读写分析 简介 ExtentClient ExtentHandler sdk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // type ExtentClient struct { streamers map[uint64]*Streamer dataWrapper *Wrapper //... } type Streamer struct { extents</description></item><item><title>HBase事务</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E4%BA%8B%E5%8A%A1/</link><pubDate>Sat, 02 Apr 2022 10:47:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E4%BA%8B%E5%8A%A1/</guid><description>HBase事务 简介 HBase本身仅支持行级ACID事务一致性保证，通过行锁(RowL</description></item><item><title>Paxos算法</title><link>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/paxos%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 02 Apr 2022 10:47:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/paxos%E7%AE%97%E6%B3%95/</guid><description>Paxos算法 简介 Paxos算法是Leslie Lamport在1990年提出的一种基</description></item><item><title>将 x 减到 0 的最小操作数</title><link>https://justice.bj.cn/post/leetcode/1658.%E5%B0%86-x-%E5%87%8F%E5%88%B0-0-%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0/</link><pubDate>Sat, 02 Apr 2022 10:47:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1658.%E5%B0%86-x-%E5%87%8F%E5%88%B0-0-%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0/</guid><description>将 x 减到 0 的最小操作数 Category Difficulty Likes Dislikes algorithms Medium (31.13%) 90 - Tags Unknown Companies Unknown 给你一个整数数组 nums 和一个整数 x 。每一</description></item><item><title>数据流的中位数</title><link>https://justice.bj.cn/post/leetcode/295.%E6%95%B0%E6%8D%AE%E6%B5%81%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link><pubDate>Sat, 02 Apr 2022 10:47:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/295.%E6%95%B0%E6%8D%AE%E6%B5%81%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid><description>数据流的中位数 Category Difficulty Likes Dislikes algorithms Hard (52.43%) 657 - Tags heap | design Companies google 中位数是有序列表中间的数。如果列表长度是</description></item><item><title>爬楼梯</title><link>https://justice.bj.cn/post/leetcode/70.%E7%88%AC%E6%A5%BC%E6%A2%AF/</link><pubDate>Sat, 02 Apr 2022 10:47:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/70.%E7%88%AC%E6%A5%BC%E6%A2%AF/</guid><description>爬楼梯 Category Difficulty Likes Dislikes algorithms Easy (53.23%) 2083 - Tags dynamic-programming Companies adobe | apple 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你</description></item><item><title>子树中标签相同的节点数</title><link>https://justice.bj.cn/post/leetcode/1518.%E5%AD%90%E6%A0%91%E4%B8%AD%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0/</link><pubDate>Wed, 23 Mar 2022 21:00:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1518.%E5%AD%90%E6%A0%91%E4%B8%AD%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0/</guid><description>子树中标签相同的节点数 Category Difficulty Likes Dislikes algorithms Medium (30.38%) 55 - Tags Unknown Companies Unknown 给你一棵树（即，一个连通的无环无向图</description></item><item><title>CubeFS Bcache</title><link>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-bcache/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-bcache/</guid><description>CubeFS Bcache 简介 CubeFS 3.0.0-beta增加了bcache功能， 新增blockcache节点，</description></item><item><title>ssh</title><link>https://justice.bj.cn/post/70.tool/ssh/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/ssh/</guid><description>ssh 简介 常用配置 1. 关闭ssh 首次连接确认提示(yes/no) 两种方式： a. 修改ssh客户</description></item><item><title>三数之和</title><link>https://justice.bj.cn/post/leetcode/15.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/15.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>三数之和 Category Difficulty Likes Dislikes algorithms Medium (25.59%) 1827 - Tags array | two-pointers Companies adobe | amazon | bloomberg | facebook | microsoft 给定一个包含 n 个整数的数组 nu</description></item><item><title>字符编码</title><link>https://justice.bj.cn/post/21.linux/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</guid><description>字符编码 简介 字符是表示现实中的一个符号单元，如数字(0-9), 标点, 英文字母(a-z</description></item><item><title>逆波兰表达式求值</title><link>https://justice.bj.cn/post/leetcode/150.%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/150.%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/</guid><description>逆波兰表达式求值 Category Difficulty Likes Dislikes algorithms Medium (49.14%) 111 - Tags stack Companies linkedin 根据逆波兰表示法，求表达式的值。 有效的运算</description></item><item><title>重排链表</title><link>https://justice.bj.cn/post/leetcode/143.%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/143.%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/</guid><description>重排链表 Category Difficulty Likes Dislikes algorithms Medium (54.54%) 158 - Tags linked-list Companies Unknown 给定一个单链表 L：L0→L1→…→L**n-1→L</description></item><item><title>反转单词前缀</title><link>https://justice.bj.cn/post/leetcode/2000.%E5%8F%8D%E8%BD%AC%E5%8D%95%E8%AF%8D%E5%89%8D%E7%BC%80/</link><pubDate>Wed, 09 Mar 2022 16:23:26 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/2000.%E5%8F%8D%E8%BD%AC%E5%8D%95%E8%AF%8D%E5%89%8D%E7%BC%80/</guid><description>反转单词前缀 Category Difficulty Likes Dislikes algorithms Easy (79.88%) 55 - Tags Unknown Companies Unknown 给你一个下标从 0 开始的字符串 word 和一个字符 ch 。找</description></item><item><title>CubeFS-BlobStore配置</title><link>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 07 Mar 2022 16:37:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/cubefs-blobstore%E9%85%8D%E7%BD%AE/</guid><description>CubeFS-BlobStore配置 简介 centos: 7.5.1804 (Core) linux kernel：3.10.0-862.</description></item><item><title>Golang 调试</title><link>https://justice.bj.cn/post/14.language/golang/golang%E8%B0%83%E8%AF%95/</link><pubDate>Mon, 07 Mar 2022 16:37:39 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E8%B0%83%E8%AF%95/</guid><description>Golang 调试 简介 Golang程序的调试工具包括gdb调试、go pprof性能调试工具及go</description></item><item><title>数据湖(Delta Lake)</title><link>https://justice.bj.cn/post/30.architech/%E6%95%B0%E6%8D%AE%E6%B9%96/</link><pubDate>Fri, 25 Feb 2022 22:06:38 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/%E6%95%B0%E6%8D%AE%E6%B9%96/</guid><description>数据湖(Delta Lake) 简介 Data lake这个术语由Pentaho公司创始人兼CTO詹姆斯·</description></item><item><title>Elasticsearch内核解析 - 查询篇</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E8%AF%BB%E6%B5%81%E7%A8%8B/</link><pubDate>Fri, 18 Feb 2022 10:14:15 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E8%AF%BB%E6%B5%81%E7%A8%8B/</guid><description>Elasticsearch内核解析 - 查询篇 读操作 实时性和《Elasticsearch</description></item><item><title>通过翻转子数组使两个数组相等</title><link>https://justice.bj.cn/post/leetcode/1460.%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89/</link><pubDate>Fri, 18 Feb 2022 10:14:15 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1460.%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89/</guid><description>通过翻转子数组使两个数组相等 Category Difficulty Likes Dislikes algorithms Easy (74.20%) 33 - Tags Unknown Companies Unknown 给你两个长度相同的整数数组 target 和</description></item><item><title>二叉树的最近公共祖先</title><link>https://justice.bj.cn/post/leetcode/236.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link><pubDate>Sun, 13 Feb 2022 13:20:16 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/236.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid><description>二叉树的最近公共祖先 Category Difficulty Likes Dislikes algorithms Medium (68.41%) 1530 - Tags tree Companies amazon | apple | facebook | linkedin | microsoft 给定一个二叉树, 找到该</description></item><item><title>RCFile</title><link>https://justice.bj.cn/post/30.architech/rcfile/</link><pubDate>Fri, 11 Feb 2022 20:24:35 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/rcfile/</guid><description>RCFile 简介 RCFile文件格式是FaceBook开源的一种Hive的文件存储格式，首先将</description></item><item><title>二叉搜索树的最近公共祖先</title><link>https://justice.bj.cn/post/leetcode/235.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link><pubDate>Tue, 25 Jan 2022 09:54:18 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/235.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid><description>二叉搜索树的最近公共祖先 Category Difficulty Likes Dislikes algorithms Easy (66.85%) 743 - Tags tree Companies amazon | facebook | microsoft | twitter 给定一个二叉搜索树, 找</description></item><item><title>删除链表中的节点</title><link>https://justice.bj.cn/post/leetcode/237.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link><pubDate>Tue, 25 Jan 2022 09:54:18 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/237.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid><description>删除链表中的节点 Category Difficulty Likes Dislikes algorithms Easy (85.71%) 1086 - Tags linked-list Companies adobe | apple | microsoft 请编写一个函数，用于 删除单链表中某</description></item><item><title>另一棵树的子树</title><link>https://justice.bj.cn/post/leetcode/527.%E5%8F%A6%E4%B8%80%E6%A3%B5%E6%A0%91%E7%9A%84%E5%AD%90%E6%A0%91/</link><pubDate>Tue, 25 Jan 2022 09:54:18 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/527.%E5%8F%A6%E4%B8%80%E6%A3%B5%E6%A0%91%E7%9A%84%E5%AD%90%E6%A0%91/</guid><description>另一棵树的子树 Category Difficulty Likes Dislikes algorithms Easy (47.45%) 629 - Tags tree Companies ebay | facebook | google 给你两棵二叉树 root 和 subRoot 。检验 root 中是否包</description></item><item><title>翻转二叉树</title><link>https://justice.bj.cn/post/leetcode/226.%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Tue, 25 Jan 2022 09:54:18 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/226.%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>翻转二叉树 Category Difficulty Likes Dislikes algorithms Easy (78.84%) 1145 - Tags tree Companies Unknown 翻转一棵二叉树。 示例： 输入： 1 2 3 4 5 4 / \ 2 7</description></item><item><title>环形数组是否存在循环</title><link>https://justice.bj.cn/post/leetcode/457.%E7%8E%AF%E5%BD%A2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%BE%AA%E7%8E%AF/</link><pubDate>Sat, 22 Jan 2022 21:40:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/457.%E7%8E%AF%E5%BD%A2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%BE%AA%E7%8E%AF/</guid><description>环形数组是否存在循环 Category Difficulty Likes Dislikes algorithms Medium (43.55%) 174 - Tags array | two-pointers Companies Unknown 存在一个不含 0 的 环形 数组 nums ，每个 nums[i]</description></item><item><title>青蛙过河</title><link>https://justice.bj.cn/post/leetcode/403.%E9%9D%92%E8%9B%99%E8%BF%87%E6%B2%B3/</link><pubDate>Sat, 22 Jan 2022 21:40:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/403.%E9%9D%92%E8%9B%99%E8%BF%87%E6%B2%B3/</guid><description>青蛙过河 Category Difficulty Likes Dislikes algorithms Hard (45.55%) 396 - Tags dynamic-programming Companies snapchat 一只青蛙想要过河。 假定河流被等分为若干个单元格，并</description></item><item><title>设计循环队列</title><link>https://justice.bj.cn/post/leetcode/622.%E8%AE%BE%E8%AE%A1%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/</link><pubDate>Fri, 21 Jan 2022 22:30:06 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/622.%E8%AE%BE%E8%AE%A1%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/</guid><description>设计循环队列 Category Difficulty Likes Dislikes algorithms Medium (44.06%) 247 - Tags Unknown Companies Unknown 设计你的循环队列实现。 循环队列是一种线性数据结</description></item><item><title>Flink Shuffle 原理</title><link>https://justice.bj.cn/post/30.architech/flink/flink-shuffle%E5%8E%9F%E7%90%86/</link><pubDate>Thu, 20 Jan 2022 22:03:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/flink/flink-shuffle%E5%8E%9F%E7%90%86/</guid><description>Flink Shuffle 原理 简介 参考 批流统一计算引擎的动力源泉—Flink Shuffle机制的重构与优化</description></item><item><title>SPARK-25299- 改进Spark Shuffle可靠性</title><link>https://justice.bj.cn/post/30.architech/spark/spark-25299/</link><pubDate>Thu, 20 Jan 2022 22:03:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark-25299/</guid><description>SPARK-25299: 改进Spark Shuffle可靠性 背景动机 在分布式计算中，shuffle表示多个不</description></item><item><title>STL简介</title><link>https://justice.bj.cn/post/14.language/c++/stl/stl%E7%AE%80%E4%BB%8B/</link><pubDate>Thu, 20 Jan 2022 22:03:10 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/stl/stl%E7%AE%80%E4%BB%8B/</guid><description>STL简介 简介 STL，Standard Template Library，是C++标准委员会推出的c+</description></item><item><title>Flink-基本</title><link>https://justice.bj.cn/post/30.architech/flink/flink%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 20 Jan 2022 09:40:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/flink/flink%E5%9F%BA%E7%A1%80/</guid><description>Flink-基本 数据流 数据流就是一个无界（unbounded）的事件序列。事件（Ev</description></item><item><title>STL-deque</title><link>https://justice.bj.cn/post/14.language/c++/stl/stl-deque/</link><pubDate>Mon, 17 Jan 2022 09:36:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/stl/stl-deque/</guid><description>STL-deque 简介 参考</description></item><item><title>Zeus- Uber的分布式Spark Shuffle Service</title><link>https://justice.bj.cn/post/30.architech/spark/zeus-uber-remote-spark-shuffle-service/</link><pubDate>Fri, 14 Jan 2022 14:52:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/zeus-uber-remote-spark-shuffle-service/</guid><description>Zeus: Uber的分布式Spark Shuffle Service 特性 垂直扩展 独立节点运行； 去中心化存储，节点无状态；</description></item><item><title>智能指针</title><link>https://justice.bj.cn/post/14.language/c++/stl/stl%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</link><pubDate>Tue, 11 Jan 2022 20:36:42 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/stl/stl%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/</guid><description>智能指针 简介 智能指针(smart pointer)是C++用来自动管理对象生命周期的模</description></item><item><title>ES倒排索引原理</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</link><pubDate>Mon, 10 Jan 2022 09:25:01 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86/</guid><description>ES倒排索引原理 简介 Elasticsearch通过Lucene的倒排索引技术实现比关</description></item><item><title>Golang之mutex</title><link>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bmutex/</link><pubDate>Mon, 10 Jan 2022 09:25:01 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E4%B9%8Bmutex/</guid><description>Golang之mutex 简介 sync.Mutex是一个不可重入的排他锁; 当一个 goroutine 获得</description></item><item><title>CrateDB</title><link>https://justice.bj.cn/post/30.architech/cratedb/</link><pubDate>Sat, 08 Jan 2022 12:19:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/cratedb/</guid><description>CrateDB 简介 CrateDB是一个基于ElasticSearch的开源的分布式数据库， 使用S</description></item><item><title>Flink WordCount程序背后的万字深度解析</title><link>https://justice.bj.cn/post/30.architech/flink/flink-wordcoun%E8%A7%A3%E6%9E%90/</link><pubDate>Sat, 08 Jan 2022 12:19:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/flink/flink-wordcoun%E8%A7%A3%E6%9E%90/</guid><description>Flink WordCount程序背后的万字深度解析 1 Flink数据流图简介 1.1 Flink样例程</description></item><item><title>Flink入门</title><link>https://justice.bj.cn/post/30.architech/flink/flink%E5%85%A5%E9%97%A8/</link><pubDate>Sat, 08 Jan 2022 12:19:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/flink/flink%E5%85%A5%E9%97%A8/</guid><description>Flink入门 启动本地flink实例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description></item><item><title>Linux IO 模型之BIO/NIO/AIO/UIO</title><link>https://justice.bj.cn/post/21.linux/linux-io-%E6%A8%A1%E5%9E%8B%E5%AF%B9%E6%AF%94/</link><pubDate>Sat, 08 Jan 2022 12:19:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-io-%E6%A8%A1%E5%9E%8B%E5%AF%B9%E6%AF%94/</guid><description>Linux IO 模型之BIO/NIO/AIO/UIO BIO：线程发起IO请求，不管内核是否准备好</description></item><item><title>MySQL锁</title><link>https://justice.bj.cn/post/30.architech/mysql/mysql%E9%94%81/</link><pubDate>Sat, 08 Jan 2022 12:19:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/mysql/mysql%E9%94%81/</guid><description>MySQL锁 简介 mysql中的锁是用于保证并发事务访问一致性的一种机制。 分类 按对资源</description></item><item><title>Prometheus 存储层的演进</title><link>https://justice.bj.cn/post/36.monitor/prometheus/prometheus-%E5%AD%98%E5%82%A8%E5%B1%82%E7%9A%84%E6%BC%94%E8%BF%9B/</link><pubDate>Sat, 08 Jan 2022 12:19:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/prometheus/prometheus-%E5%AD%98%E5%82%A8%E5%B1%82%E7%9A%84%E6%BC%94%E8%BF%9B/</guid><description>Prometheus 存储层的演进 Prometheus 是当下最流行的监控平台之一，它的主要职责是从各个目标节点中采集监控数</description></item><item><title>Protobuf</title><link>https://justice.bj.cn/post/30.architech/protobuf/</link><pubDate>Sat, 08 Jan 2022 12:19:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/protobuf/</guid><description>Protobuf 简介 Protobuf 是 Google 整的一个序列化/反序列化框架，性能不算很好不过用的人比较多，各个语言的实</description></item><item><title>Scala 基础</title><link>https://justice.bj.cn/post/14.language/scala/01.scala%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 08 Jan 2022 12:19:20 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/scala/01.scala%E5%9F%BA%E7%A1%80/</guid><description>Scala 基础 简介 Scala 是一门基于 jvm 的多范式的编程语言，由 Martin Odersky 创建， 2003 年首次发布； Scala设计</description></item><item><title>十道海量数据处理面试题</title><link>https://justice.bj.cn/post/30.architech/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E9%9D%A2%E8%AF%95%E9%A2%98/</link><pubDate>Thu, 30 Dec 2021 21:26:14 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E9%9D%A2%E8%AF%95%E9%A2%98/</guid><description>十道海量数据处理面试题 1、海量日志数据，提取出某日访问百度次数最多的那个IP。 当时给</description></item><item><title>全面介绍数砖开发 Delta Lake 的第一篇论文</title><link>https://justice.bj.cn/post/30.architech/deltalake/</link><pubDate>Fri, 24 Dec 2021 18:21:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/deltalake/</guid><description>全面介绍数砖开发 Delta Lake 的第一篇论文 摘要 云对象存储如Amazon S3，作为目前最大且最节</description></item><item><title>跳跃游戏</title><link>https://justice.bj.cn/post/leetcode/55.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link><pubDate>Wed, 22 Dec 2021 10:04:41 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/55.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid><description>跳跃游戏 Category Difficulty Likes Dislikes algorithms Medium (38.11%) 469 - Tags array | greedy Companies microsoft 给定一个非负整数数组，你最初位于数组的第一个位</description></item><item><title>ChubaoFS Master</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-master/</link><pubDate>Thu, 25 Nov 2021 15:52:28 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-master/</guid><description>ChubaoFS Master 简介 MetaNode管理 Metanode 是否可写 节点存活（isActive）: 心跳上报时间间隔</description></item><item><title>PromQL查询语言</title><link>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/</link><pubDate>Thu, 25 Nov 2021 15:52:28 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/prometheus/prometheus%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/</guid><description>PromQL查询语言 简介 PromQL（Prometheus Query Language）是 Prometheus 自</description></item><item><title>文件系统测试</title><link>https://justice.bj.cn/post/40.storage/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95/</link><pubDate>Thu, 25 Nov 2021 15:52:28 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/%E5%AD%98%E5%82%A8%E6%B5%8B%E8%AF%95/</guid><description>文件系统测试 简介 1 # 安装mpirun openmpi 安装rsh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description></item><item><title>Systemd</title><link>https://justice.bj.cn/post/70.tool/systemd/</link><pubDate>Sun, 14 Nov 2021 21:52:07 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/systemd/</guid><description>Systemd 简介 用法 1 2 3 4 5 6 7 8 $ systemctl reload $ service &amp;lt;SERVICE_NAME&amp;gt; start # $ journalctl -b -u &amp;lt;SERVICE_NAME&amp;gt;.service 参考</description></item><item><title>Bash基础</title><link>https://justice.bj.cn/post/14.language/shell/bash%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 08 Nov 2021 10:33:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/shell/bash%E5%9F%BA%E7%A1%80/</guid><description>Bash基础 简介 特殊变量 1 2 3 4 5 6 7 $# # 参数个数 $@ # 所有参数, 每个参数分别用&amp;#3</description></item><item><title>Golang BTree</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%B8%B8%E7%94%A8%E5%BA%93/golang-btree.go/</link><pubDate>Wed, 03 Nov 2021 09:41:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%B8%B8%E7%94%A8%E5%BA%93/golang-btree.go/</guid><description>Golang BTree 简介 1</description></item><item><title>Golang context</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%B8%B8%E7%94%A8%E5%BA%93/context/</link><pubDate>Sun, 31 Oct 2021 07:44:24 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%B8%B8%E7%94%A8%E5%BA%93/context/</guid><description>Golang context 简介 context 是 go 1.7 引入，用于在 goroutine之间传递上下文信息，包括：取消信号、超</description></item><item><title>Golang错误处理</title><link>https://justice.bj.cn/post/14.language/golang/golang%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link><pubDate>Fri, 29 Oct 2021 21:50:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid><description>Golang错误处理 简介 参考 https://coolshell.cn/articles/21140.html</description></item><item><title>Rust注释</title><link>https://justice.bj.cn/post/14.language/rust/rust%E6%B3%A8%E9%87%8A/</link><pubDate>Fri, 29 Oct 2021 21:50:00 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E6%B3%A8%E9%87%8A/</guid><description>Rust注释 简介 Rust 里的注释和C语言中的一样，分成两种: 行注释: 以//开头的一行，直到</description></item><item><title>Golang测试</title><link>https://justice.bj.cn/post/14.language/golang/golang%E6%B5%8B%E8%AF%95/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E6%B5%8B%E8%AF%95/</guid><description>Golang测试 简介 单元测试 1 2 3 4 5 ## 执行所有的单元测试 $ go test -v *.go ## 执行指定的单元</description></item><item><title>下降路径最小和 II</title><link>https://justice.bj.cn/post/leetcode/1289.%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C-ii/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1289.%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C-ii/</guid><description>下降路径最小和 II Category Difficulty Likes Dislikes algorithms Hard (60.08%) 25 - Tags Unknown Companies Unknown 给你一个整数方阵 arr ，定义「非零偏移下降路径</description></item><item><title>二叉搜索树的最小绝对差</title><link>https://justice.bj.cn/post/leetcode/530.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/530.%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE/</guid><description>二叉搜索树的最小绝对差 Category Difficulty Likes Dislikes algorithms Easy (55.49%) 99 - Tags tree Companies google 给你一棵所有节点为非负值的二叉搜索树</description></item><item><title>二叉树的直径</title><link>https://justice.bj.cn/post/leetcode/543.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/543.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/</guid><description>二叉树的直径 Category Difficulty Likes Dislikes algorithms Easy (47.16%) 209 - Tags tree Companies facebook | google 给定一棵二叉树，你需要计算它的直径长度。一</description></item><item><title>分隔链表</title><link>https://justice.bj.cn/post/leetcode/86.%E5%88%86%E5%89%B2%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/86.%E5%88%86%E5%89%B2%E9%93%BE%E8%A1%A8/</guid><description>分隔链表 Category Difficulty Likes Dislikes algorithms Medium (55.90%) 158 - Tags linked-list | two-pointers Companies Unknown 给定一个链表和一个特定值* x*，对链表进行分隔</description></item><item><title>删除排序链表中的重复元素 II</title><link>https://justice.bj.cn/post/leetcode/82.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E8%8A%82%E7%82%B9ii/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/82.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E8%8A%82%E7%82%B9ii/</guid><description>删除排序链表中的重复元素 II Category Difficulty Likes Dislikes algorithms Medium (45.93%) 221 - Tags linked-list Companies Unknown 给定一个排序链表，删除所有含有重</description></item><item><title>反转链表</title><link>https://justice.bj.cn/post/leetcode/206.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/206.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid><description>反转链表 Category Difficulty Likes Dislikes algorithms Easy (65.94%) 758 - Tags linked-list Companies adobe | amazon | apple | bloomberg | facebook | microsoft | snapchat | twitter | uber | yahoo | yelp | zenefits 反转一</description></item><item><title>吃掉 N 个橘子的最少天数</title><link>https://justice.bj.cn/post/leetcode/1553.%E5%90%83%E6%8E%89-n-%E4%B8%AA%E6%A9%98%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/1553.%E5%90%83%E6%8E%89-n-%E4%B8%AA%E6%A9%98%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0/</guid><description>吃掉 N 个橘子的最少天数 Category Difficulty Likes Dislikes algorithms Hard (26.35%) 96 - Tags Unknown Companies Unknown 厨房里总共有 n 个橘子，你决定每一天选</description></item><item><title>合并二叉树</title><link>https://justice.bj.cn/post/leetcode/617.%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/617.%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description>合并二叉树 Category Difficulty Likes Dislikes algorithms Easy (74.90%) 358 - Tags tree Companies amazon 给定两个二叉树，想象当你将它们中的一个覆盖到另一</description></item><item><title>完美数</title><link>https://justice.bj.cn/post/leetcode/507.%E5%AE%8C%E7%BE%8E%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/507.%E5%AE%8C%E7%BE%8E%E6%95%B0/</guid><description>完美数 Category Difficulty Likes Dislikes algorithms Easy (37.67%) 51 - Tags math Companies Unknown 对于一个 正整数，如果它和除了它自身以外的所有正因子之</description></item><item><title>旋转链表</title><link>https://justice.bj.cn/post/leetcode/61.%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/61.%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid><description>旋转链表 Category Difficulty Likes Dislikes algorithms Medium (39.96%) 203 - Tags linked-list | two-pointers Companies Unknown 给定一个链表，旋转链表，将链表每个节点向右移动</description></item><item><title>最近的请求次数</title><link>https://justice.bj.cn/post/leetcode/933.%E6%9C%80%E8%BF%91%E7%9A%84%E8%AF%B7%E6%B1%82%E6%AC%A1%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/933.%E6%9C%80%E8%BF%91%E7%9A%84%E8%AF%B7%E6%B1%82%E6%AC%A1%E6%95%B0/</guid><description>最近的请求次数 Category Difficulty Likes Dislikes algorithms Easy (70.12%) 46 - Tags tree | depth-first-search Companies Unknown 写一个 RecentCounter 类来计算最近的请求。 它只有一个方</description></item><item><title>通过删除字母匹配到字典里最长单词</title><link>https://justice.bj.cn/post/leetcode/524.%E9%80%9A%E8%BF%87%E5%88%A0%E9%99%A4%E5%AD%97%E6%AF%8D%E5%8C%B9%E9%85%8D%E5%88%B0%E5%AD%97%E5%85%B8%E9%87%8C%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/524.%E9%80%9A%E8%BF%87%E5%88%A0%E9%99%A4%E5%AD%97%E6%AF%8D%E5%8C%B9%E9%85%8D%E5%88%B0%E5%AD%97%E5%85%B8%E9%87%8C%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D/</guid><description>通过删除字母匹配到字典里最长单词 Category Difficulty Likes Dislikes algorithms Medium (44.88%) 57 - Tags two-pointers | sort Companies google 给定一个字符串和一个字</description></item><item><title>链表的中间结点</title><link>https://justice.bj.cn/post/leetcode/876.%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/leetcode/876.%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9/</guid><description>链表的中间结点 Category Difficulty Likes Dislikes algorithms Easy (63.45%) 144 - Tags ordered-map Companies Unknown 给定一个带有头结点 head 的非空单链表，返回链表的</description></item><item><title>hbase 配额(quota)</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E9%A2%9D/</link><pubDate>Sat, 23 Oct 2021 12:50:07 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E9%A2%9D/</guid><description>hbase 配额(quota) 启用配额 hbase-site.xml”,增加如下配置： 1 2 3 4 5</description></item><item><title>Bash最佳实践</title><link>https://justice.bj.cn/post/14.language/shell/bash%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Sat, 23 Oct 2021 12:37:51 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/shell/bash%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>Bash最佳实践 基本规则 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30</description></item><item><title>Etcd Raft</title><link>https://justice.bj.cn/post/40.storage/etcd-raft/</link><pubDate>Thu, 14 Oct 2021 09:16:36 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/etcd-raft/</guid><description>Etcd Raft 简介 参考 Raft 在 etcd 中的实现 - 喵叔没话说</description></item><item><title>OrientDB</title><link>https://justice.bj.cn/post/30.architech/graphdb/orientdb/</link><pubDate>Sun, 10 Oct 2021 15:57:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/graphdb/orientdb/</guid><description>OrientDB 简介 sql 操作 console cmd 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34</description></item><item><title>protobuf+RPC</title><link>https://justice.bj.cn/post/12.data_struct/protobuf+rpc/</link><pubDate>Sun, 10 Oct 2021 15:57:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/protobuf+rpc/</guid><description>protobuf+RPC 简介 protobuf是是一种google定义的结构化数据格式，与json，XML功</description></item><item><title>JanusGraph</title><link>https://justice.bj.cn/post/30.architech/graphdb/janusgraph/</link><pubDate>Sun, 10 Oct 2021 14:49:06 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/graphdb/janusgraph/</guid><description>JanusGraph 简介 JanusGraph是一个可扩展的图数据库，可以把包含数千亿个顶点和边的图存储</description></item><item><title>BlobFS</title><link>https://justice.bj.cn/post/40.storage/spdk/blobfs%E6%BA%90%E7%A0%81/</link><pubDate>Sun, 10 Oct 2021 14:35:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/spdk/blobfs%E6%BA%90%E7%A0%81/</guid><description>BlobFS 简介 blobfs 是 spdk 中基于 blobstore 块设备实现的一个简易的文件系统。 编译 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description></item><item><title>BlueStore</title><link>https://justice.bj.cn/post/40.storage/ceph/ceph-bluestore/</link><pubDate>Sun, 10 Oct 2021 14:35:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/ceph/ceph-bluestore/</guid><description>BlueStore 简介 Ceph早期的单机对象存储引擎是FileStore，为了维护数据的一致性，写入</description></item><item><title>Ceph基础</title><link>https://justice.bj.cn/post/40.storage/ceph/ceph/</link><pubDate>Sun, 10 Oct 2021 14:35:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/ceph/ceph/</guid><description>Ceph基础 简介 Ceph 最初是一项关于存储系统的 PhD 研究项目，由 Sage Weil 在 University of California, Santa Cruz（UC</description></item><item><title>Germlin</title><link>https://justice.bj.cn/post/30.architech/graphdb/germlin/</link><pubDate>Sun, 10 Oct 2021 14:35:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/graphdb/germlin/</guid><description>Germlin 简介 Gremlin是Apache TinkerPop的图形查询语言，是一种函数式数据</description></item><item><title>Jaeger简介</title><link>https://justice.bj.cn/post/36.monitor/jaeger%E7%AE%80%E4%BB%8B/</link><pubDate>Sun, 10 Oct 2021 14:35:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/jaeger%E7%AE%80%E4%BB%8B/</guid><description>Jaeger简介 简介 Jaeger 是由 Uber 开发的一套全链路追踪方案，符合 Opentracing 协议规范。 Jaeger 的全链路追踪</description></item><item><title>TinkerPop</title><link>https://justice.bj.cn/post/30.architech/graphdb/tinkerpop/</link><pubDate>Sun, 10 Oct 2021 14:35:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/graphdb/tinkerpop/</guid><description>TinkerPop 简介 参考</description></item><item><title>Zipkin分布式追踪系统</title><link>https://justice.bj.cn/post/36.monitor/zipkin/</link><pubDate>Sun, 10 Oct 2021 14:35:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/zipkin/</guid><description>Zipkin分布式追踪系统 前言 传统单机系统在使用过程中，如果某个请求响应过慢或是响应</description></item><item><title>图数据库综述</title><link>https://justice.bj.cn/post/30.architech/graphdb/%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%BC%E8%BF%B0/</link><pubDate>Sun, 10 Oct 2021 14:35:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/graphdb/%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%BC%E8%BF%B0/</guid><description>图数据库综述 简介 图数据库(Graph Database)是一种以图结构进行存储和查询的</description></item><item><title>深入理解大数据之——Lambda架构</title><link>https://justice.bj.cn/post/30.architech/lambda%E6%9E%B6%E6%9E%84/</link><pubDate>Sun, 10 Oct 2021 14:35:02 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/lambda%E6%9E%B6%E6%9E%84/</guid><description>深入理解大数据之——Lambda架构 传统系统的问题 “我们正在从IT时代走向DT时代(</description></item><item><title>Elasticsearch数据模型</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</guid><description>Elasticsearch数据模型 简介 Elasticsearch是一个建立在全文搜索</description></item><item><title>esrally for es on cfs</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/esrally/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/esrally/</guid><description>esrally for es on cfs 简介 esrally 是 elastic 官方开源的一款基于 python3 实现的针对 es 的压测工具，主要功能如下： 自动创</description></item><item><title>ES冷热分离</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%B7%E7%83%AD%E5%88%86%E7%A6%BB/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%86%B7%E7%83%AD%E5%88%86%E7%A6%BB/</guid><description>ES冷热分离 简介 elasticsearch 从6.6版本增加了冷热(hot-warm)特性。 该特性可以将同一个</description></item><item><title>ES存储详解</title><link>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%AD%98%E5%82%A8%E8%AF%A6%E8%A7%A3/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/elasticsearch/es%E5%AD%98%E5%82%A8%E8%AF%A6%E8%A7%A3/</guid><description>ES存储详解 Elasticsearch路径 Elasticsearch配置了多个路径：</description></item><item><title>Middle Wares 注意事项</title><link>https://justice.bj.cn/post/30.architech/middle-ware/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/middle-ware/</guid><description>Middle Wares 注意事项 Redis cpu 使用率问题异常升高，问题，linux kernel 版本 升级到4.3+； ES 存在一定</description></item><item><title>PForDelta算法</title><link>https://justice.bj.cn/post/13.algorithm/pfordelta%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/pfordelta%E7%AE%97%E6%B3%95/</guid><description>PForDelta算法 简介 由于倒排索引文件往往占用巨大的磁盘空间，我们自然想到对数据</description></item><item><title>sklearn</title><link>https://justice.bj.cn/post/50.ml/sklearn/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/sklearn/</guid><description>sklearn 简介 sklearn(SciKit Learn)是机器学习领域当中最知名的 python 模块之一. 在 Sklearn 里面有六大任务模块：分</description></item><item><title>HBase MemStore 分析</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-memstore%E5%88%86%E6%9E%90/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-memstore%E5%88%86%E6%9E%90/</guid><description>HBase MemStore 分析 Memstore Flush触发条件 Memstore级别：当Region中任意一个MemSt</description></item><item><title>HBase Region 自动拆分策略</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase_split_policy/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase_split_policy/</guid><description>HBase Region 自动拆分策略 HBase-2.x支持7种Region自动拆分Region的策略，类</description></item><item><title>HBase RPC</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-rpc/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-rpc/</guid><description>HBase RPC 简介 HBase主要包含Master，RegionServer，Client 3个组</description></item><item><title>Hbase WAL 详解</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-wal/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-wal/</guid><description>Hbase WAL 详解 简介 HBase 为保证写入高速，先往内存 memstore 写数据，当 memstore 到一定大小时，再批量 flush 到 storefile 中进行</description></item><item><title>HBase 安装</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E5%AE%89%E8%A3%85/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E5%AE%89%E8%A3%85/</guid><description>HBase 安装 安装 相关组件 hadoop-2.7.6 (下载) zookeeper-3.4.12 (下载) hbase-2.0.0 (下载) 部署模式 单机模式(standalon</description></item><item><title>hbase 节点宕机处理流程</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81/hbase-rs-crash%E6%B5%81%E7%A8%8B/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81/hbase-rs-crash%E6%B5%81%E7%A8%8B/</guid><description>hbase 节点宕机处理流程 region server宕机后，zk检测到节点超时，将/hbase/rs/对</description></item><item><title>HBase 配置</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E7%BD%AE/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%85%8D%E7%BD%AE/</guid><description>HBase 配置 hbase-env.sh 配置 1 2 3 4 5 6 7 # hbase-env.sh # jvm export HBASE_HEAPSIZE=16G # 堆内存大小，建议为20~24G，太大会导致G</description></item><item><title>HBase二级索引</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E4%BA%8C%E7%BA%A7%E7%B4%A2%E5%BC%95/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E4%BA%8C%E7%BA%A7%E7%B4%A2%E5%BC%95/</guid><description>HBase二级索引 简介 协处理器实现Coprocessor CoProcessor相当于</description></item><item><title>hbase写流程</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81/hbase%E5%86%99%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81/hbase%E5%86%99%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B/</guid><description>hbase写流程 1 2 org.apache.hadoop.hbase.regionserver.HRegion#batchMutate(org.apache.hadoop.hbase.regionserver.HRegion.BatchOperation&amp;lt;?&amp;gt;) org.apache.hadoop.hbase.regionserver.HRegion#doMiniBatchMutate</description></item><item><title>HBase读流程解析</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81/hbase%E8%AF%BB%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81/hbase%E8%AF%BB%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/</guid><description>HBase读流程解析 pread 在Scan中，用户可以设置ReadType: 1 2 3 4 @InterfaceAudience.Public public enum ReadType {</description></item><item><title>minio源码</title><link>https://justice.bj.cn/post/30.architech/minio/minio%E6%BA%90%E7%A0%81/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/minio/minio%E6%BA%90%E7%A0%81/</guid><description>minio源码 结构 http://github.com/minio/minio http://github.com/minio/mc http://github.com/minio/minio-go minio启动 http://github.com/minio/minio 1 2 3 4 5 6 7 8 9 10 11 12 //入口main.g</description></item><item><title>纠删码</title><link>https://justice.bj.cn/post/30.architech/minio/ec/</link><pubDate>Sun, 10 Oct 2021 12:59:52 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/minio/ec/</guid><description>纠删码 参考 https://www.gaccob.com/publish/2017-08-27-reed-solomon.html HDFS-RAID原理和实现 - 吴镝 - 博客园</description></item><item><title>vlang 基础</title><link>https://justice.bj.cn/post/14.language/vlang/vlang%E5%9F%BA%E7%A1%80/</link><pubDate>Sat, 09 Oct 2021 20:12:17 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/vlang/vlang%E5%9F%BA%E7%A1%80/</guid><description>vlang 基础 简介 特点 简单（作者声称可以在不到一小时内学习 V） 快速编译（编译器只有 400kb</description></item><item><title>分布式KV数据库比较</title><link>https://justice.bj.cn/post/30.architech/%E5%88%86%E5%B8%83%E5%BC%8Fkv%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Tue, 05 Oct 2021 20:20:03 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/%E5%88%86%E5%B8%83%E5%BC%8Fkv%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>分布式KV数据库比较 系统名词 扩容设计 内存模型 针对单个Key的一致性策略 针对多个Key</description></item><item><title>分布式系统Quorum机制</title><link>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/quorum%E6%9C%BA%E5%88%B6/</link><pubDate>Tue, 05 Oct 2021 20:20:03 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E4%B8%80%E8%87%B4%E6%80%A7%E7%AE%97%E6%B3%95/quorum%E6%9C%BA%E5%88%B6/</guid><description>分布式系统Quorum机制 简介 分布式系统由于不同节点的存在，分区(Part)不可避免</description></item><item><title>分布式系统一致性</title><link>https://justice.bj.cn/post/31.distribute/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%80%E8%87%B4%E6%80%A7/</link><pubDate>Tue, 05 Oct 2021 20:20:03 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%80%E8%87%B4%E6%80%A7/</guid><description>分布式系统一致性 简介 分布式系统中，为了保障数据的可靠性，需要将数据冗余存储，已保证在</description></item><item><title>链接与装载</title><link>https://justice.bj.cn/post/21.linux/%E9%93%BE%E6%8E%A5%E4%B8%8E%E8%A3%85%E8%BD%BD/</link><pubDate>Tue, 05 Oct 2021 20:20:03 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/%E9%93%BE%E6%8E%A5%E4%B8%8E%E8%A3%85%E8%BD%BD/</guid><description>链接与装载 代码是如何运行起来的 不直接使用机器语言进行应用程序开发是为了提高开发效率，</description></item><item><title>MarkDown</title><link>https://justice.bj.cn/post/70.tool/markdown/</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/markdown/</guid><description>MarkDown 简介 Markdown（标记向下）是一种轻量级标记语言，创始人为约翰·格鲁伯。它允许</description></item><item><title>C++ 队列设计</title><link>https://justice.bj.cn/post/14.language/c++/ulities/current-queue/</link><pubDate>Tue, 28 Sep 2021 23:23:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/ulities/current-queue/</guid><description>C++ 队列设计 简单 Queue 同步 Queue 无锁同步 Queue</description></item><item><title>fastcommon</title><link>https://justice.bj.cn/post/14.language/c++/ulities/fastcommon/</link><pubDate>Tue, 28 Sep 2021 23:23:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/ulities/fastcommon/</guid><description>fastcommon 简介 build error Fixes deprecated syscall issue on macOS 10.12 gettid 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include &amp;lt;pthread.h&amp;gt; pid_t GetCurrentThreadId(){ pid_t tid = 0; #if defined(__linux__) tid = syscall(SYS_gettid); #elif defined(__APPLE__)</description></item><item><title>jsoncpp</title><link>https://justice.bj.cn/post/14.language/c++/ulities/jsoncpp/</link><pubDate>Tue, 28 Sep 2021 23:23:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/ulities/jsoncpp/</guid><description>jsoncpp 简介 用法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // build: -ljson #include &amp;#34;json/json.h&amp;#34; string func() { Json::Value person; person[&amp;#34;ID&amp;#34;] = student.ID; person[&amp;#34;name&amp;#34;] = student.name; person[&amp;#34;age&amp;#34;]=student.age; person[&amp;#34;gender&amp;#34;]=student.gender; person[&amp;#34;major&amp;#34;]=student.major;</description></item><item><title>树(Tree)</title><link>https://justice.bj.cn/post/12.data_struct/05.%E6%A0%91/</link><pubDate>Tue, 28 Sep 2021 23:23:44 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/12.data_struct/05.%E6%A0%91/</guid><description>树(Tree) 简介 二叉树 二叉树直径 平衡二叉树(AVL Tree) 红黑树(RB Tree) B 树 B+树 线段树</description></item><item><title>股票买卖算法</title><link>https://justice.bj.cn/post/13.algorithm/%E8%82%A1%E7%A5%A8%E4%B9%B0%E5%8D%96%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 26 Sep 2021 23:23:46 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/13.algorithm/%E8%82%A1%E7%A5%A8%E4%B9%B0%E5%8D%96%E7%AE%97%E6%B3%95/</guid><description>股票买卖算法 核心代码 1 2 3 4 5 6 for (let i = 1; i &amp;lt; n; i++) { //卖出时利润：求最大值（上次交</description></item><item><title>GDB</title><link>https://justice.bj.cn/post/70.tool/gdb/</link><pubDate>Sun, 26 Sep 2021 22:12:37 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/gdb/</guid><description>GDB 简介 GDB（Gnu Debugger） 用法 屏蔽信号 1 2 3 4 5 # 屏蔽PIPE信号，在接</description></item><item><title>Rsync</title><link>https://justice.bj.cn/post/70.tool/rsync/</link><pubDate>Sun, 26 Sep 2021 22:12:37 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/rsync/</guid><description>Rsync msrsync 1 2 $ wget -O /usr/bin/msrsync https://raw.githubusercontent.com/jbd/msrsync/master/msrsync &amp;amp;&amp;amp; chmod +x /usr/bin/msrsync $ msrsync -P -p 8 --rsync &amp;#34;-auh&amp;#34; src_dir/ dest_dir</description></item><item><title>SQLite</title><link>https://justice.bj.cn/post/70.tool/sqlite/</link><pubDate>Sun, 26 Sep 2021 22:12:37 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/sqlite/</guid><description>SQLite 简介 SQLite是一种开源，零配置，独立的，独立的，事务关系数据库引擎，旨在嵌入到</description></item><item><title>Consul基础</title><link>https://justice.bj.cn/post/30.architech/consul%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 16 Sep 2021 09:46:04 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/consul%E5%9F%BA%E7%A1%80/</guid><description>Consul基础 简介 注册 HTTP API 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 curl -X PUT -d \ &amp;#39;{ &amp;#34;id&amp;#34;: &amp;#34;jetty&amp;#34;,</description></item><item><title>Pebble</title><link>https://justice.bj.cn/post/30.architech/pebble/</link><pubDate>Sun, 12 Sep 2021 13:46:30 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/pebble/</guid><description>Pebble 简介 Pebble是一个使用Go语言开发的KV单机存储引擎。底层数据模型是LSM树，</description></item><item><title>awk</title><link>https://justice.bj.cn/post/14.language/shell/awk/</link><pubDate>Thu, 02 Sep 2021 12:02:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/shell/awk/</guid><description>awk 简介 常用操作 1 2 3 4 5 6 7 8 9 10 ## 打印奇数行 $ awk &amp;#39;NR%2&amp;#39; file ## 打印偶数行 $ awk &amp;#39;!(NR%2)&amp;#39; file $ awk &amp;#39;NR==M, NR==N&amp;#39; filename</description></item><item><title>fio</title><link>https://justice.bj.cn/post/70.tool/fio/</link><pubDate>Thu, 02 Sep 2021 12:02:56 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/fio/</guid><description>fio 简介 FIO（Flexible I/O Tester） 是一款由 Jens Axboe 开发的用于测评和压力/硬件</description></item><item><title>ChubaoFS SaltStack</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-saltstack/</link><pubDate>Sun, 25 Jul 2021 15:12:47 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-saltstack/</guid><description>ChubaoFS SaltStack 简介 配置 Salt Minion端 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # salt-minio-prepeare_one.sh ps -ef | grep salt | grep -v</description></item><item><title>SPDK编程框架</title><link>https://justice.bj.cn/post/40.storage/spdk/spdk%E7%BC%96%E7%A8%8B%E6%A1%86%E6%9E%B6/</link><pubDate>Mon, 21 Jun 2021 09:41:23 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/spdk/spdk%E7%BC%96%E7%A8%8B%E6%A1%86%E6%9E%B6/</guid><description>SPDK编程框架 简介 源码 1 2 3 4 5 6 7 void spdk_app_opts_init(struct spdk_app_opts *opts); //启动spdk 应用框架 //改函数调用</description></item><item><title>CNN</title><link>https://justice.bj.cn/post/50.ml/cnn/</link><pubDate>Fri, 21 May 2021 22:41:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/cnn/</guid><description>CNN 简介 CNN(Convert Nernul Network, 卷积神经网络)是一种使用卷积层的神经网络，基于卷积的数学运算。 Conv层</description></item><item><title>Jupyter Notebook</title><link>https://justice.bj.cn/post/70.tool/jupyter-notebook/</link><pubDate>Fri, 21 May 2021 22:41:05 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/jupyter-notebook/</guid><description>Jupyter Notebook 简介 Jupyter是 Julia、Python 以及 R 语言的组合，是一个开源的Web</description></item><item><title>ChubaoFS 简介</title><link>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E7%AE%80%E4%BB%8B/</link><pubDate>Wed, 19 May 2021 12:44:40 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/chubaofs/chubaofs-%E7%AE%80%E4%BB%8B/</guid><description>ChubaoFS 简介 简介 ChubaoFS是 基本架构 基础概念 卷（Vol）：卷是一个逻辑视图，每个卷由</description></item><item><title>Golang 编程规范</title><link>https://justice.bj.cn/post/14.language/golang/golang%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</link><pubDate>Mon, 17 May 2021 09:27:15 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</guid><description>Golang 编程规范 目录结构 1 2 3 4 5 6 7 8 9 10 11 12 13 14 &amp;lt;GO_PROJECT&amp;gt;/ |--pkg/ # 公有代码目录，其他的项目可以直接</description></item><item><title>Java Annotation</title><link>https://justice.bj.cn/post/14.language/java/java%E6%B3%A8%E8%A7%A3/</link><pubDate>Sun, 11 Apr 2021 16:13:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/java%E6%B3%A8%E8%A7%A3/</guid><description>Java Annotation 简介 Java注解(Annotation)是java 5.0引入的一个语法特性。An</description></item><item><title>TensorFlow基础</title><link>https://justice.bj.cn/post/50.ml/tensorflow/tensorflow%E5%9F%BA%E7%A1%80/</link><pubDate>Sun, 11 Apr 2021 16:13:57 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/tensorflow/tensorflow%E5%9F%BA%E7%A1%80/</guid><description>TensorFlow基础 简介 TensorFlow是Google开源的一个深度学习框架</description></item><item><title>Golang 汇编</title><link>https://justice.bj.cn/post/14.language/golang/golang-asm/</link><pubDate>Tue, 26 Jan 2021 09:49:09 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang-asm/</guid><description>Golang 汇编 简介 golang汇编源于plan9， 参考 https://jiajunhuang.com/articles/2020_04_22-go_asm.md.html golang 汇编 — 源代码 golang-notes/assembly.md at master · cch123/golang-notes · GitHub</description></item><item><title>InfluxDB</title><link>https://justice.bj.cn/post/30.architech/influxdb/</link><pubDate>Tue, 29 Dec 2020 22:14:09 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/influxdb/</guid><description>InfluxDB InfluxDB在DB-Engines的时序数据库类别里排名第一，实至名归，从它的</description></item><item><title>Loki简介</title><link>https://justice.bj.cn/post/36.monitor/loki%E7%AE%80%E4%BB%8B/</link><pubDate>Tue, 29 Dec 2020 22:14:09 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/loki%E7%AE%80%E4%BB%8B/</guid><description>Loki简介 简介 整体架构 Loki的架构如下： 不难看出，Loki的架构非常简单，使用了</description></item><item><title>AI</title><link>https://justice.bj.cn/post/50.ml/ai/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/ai/</guid><description>AI 神经元 $y=sigmod(ax+b)$ 数据挖掘常用算法 模型 常用神经网络 MLP(multi-layer perceptrons): CNN(Convert Nernual Network)：卷积神经网络，包</description></item><item><title>Apache Calcite</title><link>https://justice.bj.cn/post/30.architech/calcite/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/calcite/</guid><description>Apache Calcite 简介 Apache Calcite 是面向 Hadoop 新的查询引擎，它提供了标准的 SQL 语言、多种查询优化和连接各种数据源</description></item><item><title>Apache Drill</title><link>https://justice.bj.cn/post/30.architech/drill/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/drill/</guid><description>Apache Drill 简介 Apache Drill是一个低延迟的分布式海量数据（涵盖结构化、半结构化以及嵌套数据）</description></item><item><title>Apache Ignite</title><link>https://justice.bj.cn/post/30.architech/ignite/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/ignite/</guid><description>Apache Ignite 简介 Apache Ignite 是一个高性能、集成和分布式的内存计算和事务平台(数据网格)，用于大规模的</description></item><item><title>AWS-S3身份和访问管理(IAM)</title><link>https://justice.bj.cn/post/30.architech/aws-s3/aws-s3%E4%BB%8B%E7%BB%8D/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/aws-s3/aws-s3%E4%BB%8B%E7%BB%8D/</guid><description>AWS-S3身份和访问管理(IAM) 介绍 Resource（资源）：存储桶、对象 Sub</description></item><item><title>badger</title><link>https://justice.bj.cn/post/30.architech/badger/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/badger/</guid><description>badger 简介 badger是2016年 dgraph.io基于一篇论文开发的一款基于 LSM tree 的高性</description></item><item><title>C++并发</title><link>https://justice.bj.cn/post/14.language/c++/c++%E5%B9%B6%E5%8F%91/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/c++%E5%B9%B6%E5%8F%91/</guid><description>C++并发 多线程 同步 互斥量(mutex) mutex: lock_guard: 严格基于作用域的互斥体所有权包装器, 通过</description></item><item><title>C++日志</title><link>https://justice.bj.cn/post/14.language/c++/ulities/c++log/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/ulities/c++log/</guid><description>C++日志 muduo-AsyncLog 双缓冲异步日志 双缓冲buffer 优化时间 zlog z-log是一个高性能、线程安</description></item><item><title>c++时钟</title><link>https://justice.bj.cn/post/14.language/c++/c++%E6%97%B6%E9%92%9F/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/c++%E6%97%B6%E9%92%9F/</guid><description>c++时钟 简介 ratio 时间间隔(duration) 时间点(time_point) 时钟(cl</description></item><item><title>CRUSH算法</title><link>https://justice.bj.cn/post/40.storage/ceph/crush/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/ceph/crush/</guid><description>CRUSH算法 简介 CRUSH(Controlled Replication Under Scalable Hashing)即为解决此问题而生，她仅需要一份描述集群物</description></item><item><title>DPDK</title><link>https://justice.bj.cn/post/30.architech/dpdk/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/dpdk/</guid><description>DPDK 简介 全称 Intel Data Plane Development Kit，是intel提供的数据平面开发工具集，为Intel arch</description></item><item><title>Electron</title><link>https://justice.bj.cn/post/70.tool/electron/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/electron/</guid><description>Electron 简介 mark-text 编译 1 $ yarn run dev 签名 mac 下，用electron-builder 打包dmg，关闭签</description></item><item><title>GC</title><link>https://justice.bj.cn/post/14.language/java/gc/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/gc/</guid><description>GC 简介 参考 一文了解JVM全部垃圾回收器，从Serial到ZGC - Zack说码 - SegmentFault 思否</description></item><item><title>Gcc Map文件</title><link>https://justice.bj.cn/post/21.linux/gcc-map%E6%96%87%E4%BB%B6/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/gcc-map%E6%96%87%E4%BB%B6/</guid><description>Gcc Map文件 简介 map文件是通过编译器编译之后，生成的程序、数据及IO空间信息的一种</description></item><item><title>GitHub 相关工具</title><link>https://justice.bj.cn/post/70.tool/github/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/github/</guid><description>GitHub 相关工具 简介 travis-ci(持续集成) codecov(代码测试覆盖率) https://github.com/codecov/example-go</description></item><item><title>Go generate</title><link>https://justice.bj.cn/post/14.language/golang/go-generate/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/go-generate/</guid><description>Go generate 简介 go generate命令是在Go语言 1.4 版本里面新添加的一个命令，当运行该命令时</description></item><item><title>gorilla/mux</title><link>https://justice.bj.cn/post/14.language/golang/golang%E5%B8%B8%E7%94%A8%E5%BA%93/gorilla_mux/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang%E5%B8%B8%E7%94%A8%E5%BA%93/gorilla_mux/</guid><description>gorilla/mux 简介 gorilla/mux是一个强大的路由，小巧但是稳定高效，不仅可以支持正则路由</description></item><item><title>gorocksdb 编译</title><link>https://justice.bj.cn/post/14.language/golang/gorocksdb%E7%BC%96%E8%AF%91/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/gorocksdb%E7%BC%96%E8%AF%91/</guid><description>gorocksdb 编译 简介 编译 1. rocksdb 5.9.2版本的编译(Mac 环境) 1 2 3 4 5 $ git clone http://github.com/homebrew/homebrew-core $ vi homebrew-core/Formula/rocksdb.rb url &amp;#34;https://github.com/facebook/rocksdb/archive/v5.9.2.tar.gz&amp;#34; sha256 &amp;#34;784023d5fea572e860938ec9041e064c9ca529a129574d7fccb74618c7e0dad8&amp;#34;</description></item><item><title>Grafana loki 简介</title><link>https://justice.bj.cn/post/36.monitor/loki%E6%BA%90%E7%A0%81/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/loki%E6%BA%90%E7%A0%81/</guid><description>Grafana loki 简介 Grafana 发布了名为 “loki” 的新项目, 用于解决云原生架构下的日志收集与存储问题.</description></item><item><title>Hadoop</title><link>https://justice.bj.cn/post/30.architech/hadoop/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hadoop/</guid><description>Hadoop 简介 组件 hdfs: 分布式文件存储系统，包含namenode，datanode两个组件， 配置</description></item><item><title>Hadoop-aws</title><link>https://justice.bj.cn/post/30.architech/aws-s3/hadoop-aws/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/aws-s3/hadoop-aws/</guid><description>Hadoop-aws 简介 Hadoop S3A client Hadoop ”S3A“ 客户端提供Amazon S3对象存储的高性能存储兼容实现。 直接</description></item><item><title>HBase Region Split</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-region-split/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-region-split/</guid><description>HBase Region Split 为什么需要 Split HBase 写入region时，先将数据写入region的memstore中</description></item><item><title>Hbase Region Split compaction 过程分析以及调优</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-%E5%86%99%E5%85%A5%E5%8F%8Aflush/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-%E5%86%99%E5%85%A5%E5%8F%8Aflush/</guid><description>Hbase Region Split compaction 过程分析以及调优 Hbase 写入流程 要想了解 hbase 的 Compact 和 Split 功能必须先从 hbase 的写入过程说起，以</description></item><item><title>HBase 启动</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase-master%E5%90%AF%E5%8A%A8/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase-master%E5%90%AF%E5%8A%A8/</guid><description>HBase 启动 启动命令 1 2 $HBASE_HOME/bin/hbase-daemon.sh start master $HBASE_HOME/bin/hbase-daemon.sh start regionserver Master HBase master 源码主要位于hbase-server/org.a</description></item><item><title>HBase 问题总结</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</guid><description>HBase 问题总结 1. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36</description></item><item><title>HBase源码剖析</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/</guid><description>HBase源码剖析 1. 主要数据结构 hbase 内存设计分析 WAL分析 MemStore + HFile 分析 block cache 2. 主要流程 hbase 启</description></item><item><title>HBase资源隔离</title><link>https://justice.bj.cn/post/30.architech/hbase/hbase%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hbase/hbase%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB/</guid><description>HBase资源隔离 1. 概述 2. 分类 hbase设计 用户 用户组 hdfs：单一的hdfs（后端</description></item><item><title>hdfs</title><link>https://justice.bj.cn/post/30.architech/hdfs/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/hdfs/</guid><description>hdfs 简介 hdfs是大名鼎鼎的hadoop的两大基础组件之一：分布式文件系统，为hado</description></item><item><title>hexo</title><link>https://justice.bj.cn/post/70.tool/hexo/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/hexo/</guid><description>hexo 简介 Hexo 是一个快速、简洁且高效的博客markdown博客框架。 基本用法 1 2 3 4 5 6 7</description></item><item><title>Impala</title><link>https://justice.bj.cn/post/30.architech/impala/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/impala/</guid><description>Impala 简介 Impala是用于处理存储在Hadoop集群中的大量数据的MPP（大规模并行处</description></item><item><title>Java常见问题汇总</title><link>https://justice.bj.cn/post/14.language/java/java%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/java%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</guid><description>Java常见问题汇总 编译问题 1. NoClassDefFoundError ClassNotFoundException产生的原</description></item><item><title>Linux HugePage</title><link>https://justice.bj.cn/post/21.linux/linux-hugepage/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-hugepage/</guid><description>Linux HugePage 简介 linux kernel虚拟内存通过多级页表机制来完成虚拟内存到物理内存的映射管理。默</description></item><item><title>LLVM</title><link>https://justice.bj.cn/post/70.tool/llvm/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/llvm/</guid><description>LLVM 简介 To use the bundled libc++ please add the following LDFLAGS: LDFLAGS=&amp;quot;-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib&amp;quot; llvm is keg-only, which means it was not symlinked into /usr/local, because macOS already provides this software and installing another version in parallel can cause all kinds</description></item><item><title>LTP-test</title><link>https://justice.bj.cn/post/70.tool/ltptest/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/ltptest/</guid><description>LTP-test 简介 Linux Test Project，linux测试项目。是linux开源测试工具集。 编译 1 2 mkdir</description></item><item><title>MapR</title><link>https://justice.bj.cn/post/30.architech/mapr/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/mapr/</guid><description>MapR 简介 Hadoop 的 HDFS namenode 存在单点问题，MapR“构建一个HDFS的私有替代品，这个替代品比当前</description></item><item><title>MySQL 高性能存储引擎：TokuDB初探</title><link>https://justice.bj.cn/post/30.architech/mysql/tokudb/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/mysql/tokudb/</guid><description>MySQL 高性能存储引擎：TokuDB初探 什么是TokuDB？ 在MySQL最流行的支持全事务</description></item><item><title>pip</title><link>https://justice.bj.cn/post/70.tool/pip/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/pip/</guid><description>pip python3.6 SSL module is not available pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available. Collecting requests Could not fetch URL https://pypi.python.org/simple/requests/: There was a problem confirming the ssl certificate: Can't connect to</description></item><item><title>Redis</title><link>https://justice.bj.cn/post/30.architech/redis/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/redis/</guid><description>Redis 简介 特点 内存数据库， 基于KV，NoSQL 数据类型 字符串(string) set/get mset/mget 列表(l</description></item><item><title>Rocksdb源码编译</title><link>https://justice.bj.cn/post/30.architech/rocksdb-%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/rocksdb-%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</guid><description>Rocksdb源码编译 编译过程 rocksdb编译由Makefile控制。 Makefile -&amp;gt; build_tools/build_detect_platform build_detect_platform: 检查</description></item><item><title>Rust 函数</title><link>https://justice.bj.cn/post/14.language/rust/rust%E5%87%BD%E6%95%B0/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E5%87%BD%E6%95%B0/</guid><description>Rust 函数 简介 fn 1 2 3 4 // 函数声明 fn func_name(arg1: arg1_type)-&amp;gt; {// func_body } 闭包(closure) rust中closu</description></item><item><title>Rust链表</title><link>https://justice.bj.cn/post/14.language/rust/rust%E9%93%BE%E8%A1%A8/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/rust/rust%E9%93%BE%E8%A1%A8/</guid><description>Rust链表 定义 由于所有权的关系，在rust中实现链表一直是一个比较困难的问题。 1 2</description></item><item><title>Shuffle Map Task运算结果的处理</title><link>https://justice.bj.cn/post/30.architech/spark/spark_suffle_map_task/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark_suffle_map_task/</guid><description>Shuffle Map Task运算结果的处理 这个结果的处理，分为两部分，一个是在Executor端是如</description></item><item><title>sort</title><link>https://justice.bj.cn/post/70.tool/sort/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/70.tool/sort/</guid><description>sort ip排序 1 2 //#1. ip 排序 sort -n -t . -k 1,1 -k 2,2 -k 3,3 -k 4,4</description></item><item><title>Spark Sql</title><link>https://justice.bj.cn/post/30.architech/spark/spark-sql/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark-sql/</guid><description>Spark Sql 简介 参考 http://hbasefly.com/2017/03/01/sparksql-catalyst/ Spark SQL Catalyst优化器 - 简书 https://zhuanlan.zhihu.com/p/50493032 http://www.jasongj.com/spark/adaptive_execution/</description></item><item><title>Spark 存储体系</title><link>https://justice.bj.cn/post/30.architech/spark/spark%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB/</guid><description>Spark 存储体系 简介 参考 https://www.codercto.com/a/85944.html https://www.cnblogs.com/cenglinjinran/p/8476199.html https://juejin.im/post/5bd854955188255ca65da7ed https://blog.guopengfei.top/2019/05/15/Spark%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB%E8%AF%A6%E8%A7%A3/ http://www.linuxboy.net/yunjisuan/51238.html https://blog.csdn.net/anzhsoft/article/details/42519333 Spark源码阅读之存储体系--存储体系概述与shuf</description></item><item><title>Spark-3.0 源码</title><link>https://justice.bj.cn/post/30.architech/spark/spark%E6%BA%90%E7%A0%81/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark%E6%BA%90%E7%A0%81/</guid><description>Spark-3.0 源码 类 DiskBlockManager: 逻辑块和物理磁盘的逻辑映射管理； BlockManager: 1</description></item><item><title>SPDK bdev简介</title><link>https://justice.bj.cn/post/40.storage/spdk/spdk%E5%9D%97%E8%AE%BE%E5%A4%87bdev/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/40.storage/spdk/spdk%E5%9D%97%E8%AE%BE%E5%A4%87bdev/</guid><description>SPDK bdev简介 简介 SPDK块设备层（简称bdev）是一个C库，等同于操作系统块存储层</description></item><item><title>spring</title><link>https://justice.bj.cn/post/14.language/java/spring/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/spring/</guid><description>spring 简介 DAO IOC(控制反转) xml配置文件 注解 DI(依赖注入) AOP(面向切面)</description></item><item><title>su</title><link>https://justice.bj.cn/post/14.language/shell/su/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/shell/su/</guid><description>su 1 $ su - admin -c &amp;#34;ls -l /root&amp;#34; # 以admin用户执行指令</description></item><item><title>Unsafe Pointer</title><link>https://justice.bj.cn/post/14.language/golang/golang-unsafe.pointer/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/golang/golang-unsafe.pointer/</guid><description>Unsafe Pointer 前言 在大家学习 Go 的时候，肯定都学过 “Go 的指针是不支持指针运算和转换” 这个知识点</description></item><item><title>zookeeper</title><link>https://justice.bj.cn/post/30.architech/zookeeper/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/zookeeper/</guid><description>zookeeper 简介 Zookeeper是一个分布式开源框架，提供了协调分布式应用的基本服务，它向外</description></item><item><title>事务</title><link>https://justice.bj.cn/post/30.architech/transaction/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/transaction/</guid><description>事务 事务的属性(ACID) 原子性(Atomicity) 一致性(Consistency</description></item><item><title>五种 IO 模型</title><link>https://justice.bj.cn/post/21.linux/linux-io-%E6%A8%A1%E5%9E%8B/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/21.linux/linux-io-%E6%A8%A1%E5%9E%8B/</guid><description>五种 IO 模型 在 操作系统中，IO 模型有如下五种： 在上文已经说到，其实 IO 操作就是将数据在用</description></item><item><title>使用spring等框架的web程序在Tomcat下的启动顺序及思路理清</title><link>https://justice.bj.cn/post/14.language/java/spring/spring-web/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/java/spring/spring-web/</guid><description>使用spring等框架的web程序在Tomcat下的启动顺序及思路理清 2019-06-18 Web 发表评论 一</description></item><item><title>分布式事务</title><link>https://justice.bj.cn/post/31.distribute/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/31.distribute/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid><description>分布式事务 事务 事务是用来保证一组数据操作的完整性和一致性 满足ACID 具有四种隔离级别</description></item><item><title>分布式文件系统概述</title><link>https://justice.bj.cn/post/30.architech/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</guid><description>分布式文件系统概述 简介 HDFS 组件 namenode： 元数据节点，内存，单机/联邦 datan</description></item><item><title>动态内存管理</title><link>https://justice.bj.cn/post/14.language/c++/%E8%87%AA%E5%8A%A8%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/14.language/c++/%E8%87%AA%E5%8A%A8%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</guid><description>动态内存管理 智能指针 智能指针使得自动、异常安全的对象生存期管理可行。 定义于头文件 &amp;lt;memory&amp;gt; 指</description></item><item><title>概率论与随机过程</title><link>https://justice.bj.cn/post/50.ml/ai_cookbook/math_basic/2_probability/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/ai_cookbook/math_basic/2_probability/</guid><description>概率论与随机过程 一、概率与分布 1.1 条件概率与独立事件 条件概率：已知 事件发生的条件下 发生</description></item><item><title>监控系统介绍</title><link>https://justice.bj.cn/post/36.monitor/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/36.monitor/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D/</guid><description>监控系统介绍 总览 prometheus cortex thano grafan kinaba loki 参考 容器监控实践—Cortex - 叽叽喳喳 - SegmentFault 思否 https://www.infoq.cn/article/thfsXOQwv0lL*5UDAkjF 2018-03 Loki Design</description></item><item><title>管理 Apache Spark 的 Java 和 Scala 依赖项</title><link>https://justice.bj.cn/post/30.architech/spark/spark%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/30.architech/spark/spark%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/</guid><description>管理 Apache Spark 的 Java 和 Scala 依赖项 Spark 应用通常依赖于第三方 Java 或 Scala 库。以下是在向 Cloud Dataproc 集群提交 Spark 作业时</description></item><item><title>线性代数</title><link>https://justice.bj.cn/post/50.ml/ai_cookbook/math_basic/1_algebra/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0800</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/50.ml/ai_cookbook/math_basic/1_algebra/</guid><description>线性代数 一、基本知识 本书中所有的向量都是列向量, 形式为： $$ \overrightarrow{\mathbf{x}} = \left[ \begin{array} {c} {x_{1}} \ {x_{2}} \ {\vdots} \ {x_{n}} \end{array}</description></item><item><title>内存分配器设计</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/11-allocator-designs/</link><pubDate>Wed, 22 Jan 2020 18:31:30 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/11-allocator-designs/</guid><description>这篇文章介绍了如何从头开始实现堆分配器。它提出并讨论了不同的分配器设计，包括Bump分配，基于链表的分配和固定大小的块分配。 对于这三种设计中的每一种，我们将创建一个可用于我们的内核的基本实现。</description></item><item><title>Async/Await</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/12-async-await/</link><pubDate>Sun, 29 Sep 2019 09:45:40 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/12-async-await/</guid><description>在本文中，我们将探讨协作式多任务处理以及Rust的async/await功能。我们详细研究了Rust中async/await的工作方式，包括Future trait的设计，状态机转换和pinning。然后，我们将会通过创建异步键盘任务和基本executor，将对async/await的基本支持添加到内核中。</description></item><item><title>分配堆内存</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/10-heap-allocation/</link><pubDate>Sun, 29 Sep 2019 09:45:40 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/10-heap-allocation/</guid><description>这篇文章为我们的内核增加了对堆分配的支持。 首先，它介绍了动态内存，并展示了借用检查器如何防止常见的分配错误。 然后，它实现Rust的基本分配接口，创建一个堆内存区域，并设置一个分配器crate。 在这篇文章的结尾，内置分配crate的所有分配和收集类型将对我们的内核可用。</description></item><item><title>实现分页</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/09-paging-implementation/</link><pubDate>Wed, 25 Sep 2019 07:43:38 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/09-paging-implementation/</guid><description>这篇文章展示了如何在我们的内核中实现分页支持。 首先探讨了使内核可以访问物理页表帧的各种技术，并讨论了它们各自的优缺点。 然后，它实现了地址转换功能和创建新地址映射的功能。</description></item><item><title>介绍分页</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/08-introduction-to-paging/</link><pubDate>Thu, 31 Jan 2019 18:20:38 +0000</pubDate><author>justice_103@126.com (Justice)</author><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/08-introduction-to-paging/</guid><description>这篇文章介绍了分页，这是一种非常常见的内存管理方案，我们也将将其用于我们的操作系统。 它解释了为什么需要内存隔离，分段如何工作，虚拟内存是什么，以及分页如何解决内存碎片问题。 它还探讨了x86_64架构上多级页表的布局。</description></item></channel></rss>