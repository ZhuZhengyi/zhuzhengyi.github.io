<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Justice的小站</title><link>https://justice.bj.cn/</link><description>Recent content on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 30 Sep 2023 18:21:10 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Justice's Blog</title><link>https://justice.bj.cn/homepage/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/about/</guid><description>&lt;h2 id="self-introduction">Self Introduction&lt;/h2>
&lt;p>Cras ex dui, tristique a libero eget, consectetur semper ligula. Nunc augue arcu, malesuada a nisi et, molestie finibus metus. Sed lacus odio, ultricies a nisl vitae, sollicitudin tempor ipsum. Vivamus quis feugiat arcu. Sed mi nunc, efficitur quis tellus vitae, posuere mattis metus. Phasellus in mattis dui. Nullam blandit, augue non ullamcorper dapibus, lacus dui molestie massa, in iaculis purus lectus eu lectus. Duis hendrerit lacinia tellus, sit amet feugiat dolor placerat id. Aenean ac velit massa. Vivamus feugiat dui at magna viverra, ut dictum nunc rutrum. Duis eget sapien finibus, lobortis orci id, vestibulum tellus. Maecenas lobortis urna libero, quis fermentum lectus lobortis nec. Nullam laoreet volutpat libero, ac mattis magna ullamcorper quis. Duis eget ipsum eu nisi mattis cursus et vitae turpis.&lt;/p>
&lt;p>Aliquam pretium diam eget leo feugiat finibus. Donec malesuada commodo ipsum. Aenean a massa in lacus venenatis vestibulum. Duis vel sem quis elit iaculis consectetur et quis dolor. Morbi eu ipsum hendrerit, malesuada ante sed, dapibus est. Suspendisse feugiat nulla ut gravida convallis. Phasellus id massa posuere, rhoncus justo ut, porttitor dolor. Nulla ultrices malesuada egestas. Nunc fermentum tincidunt sem ac vulputate. Donec mollis sollicitudin justo eget varius. Donec ornare velit et felis blandit, id molestie sapien lobortis. Morbi eget tristique justo. Mauris posuere, nibh eu laoreet ultricies, ligula erat iaculis sapien, vel dapibus lacus libero ut diam. Etiam viverra ante felis, et scelerisque nunc pellentesque vitae. Praesent feugiat dictum molestie.&lt;/p>
&lt;h2 id="details">Details&lt;/h2>
&lt;p>Nunc pellentesque vitae:&lt;/p>
&lt;ul>
&lt;li>Morbi accumsan nibh efficitur diam molestie, non dignissim diam facilisis.&lt;/li>
&lt;li>Donec dignissim leo in mollis faucibus.&lt;/li>
&lt;li>Donec blandit lacus a pellentesque fermentum.&lt;/li>
&lt;/ul>
&lt;p>Donec mollis sollicitudin:&lt;/p>
&lt;ul>
&lt;li>Nunc dictum purus ornare purus consectetur, eu pellentesque massa ullamcorper.&lt;/li>
&lt;li>Aliquam eu leo vitae justo aliquam tincidunt.&lt;/li>
&lt;li>Fusce non massa id augue interdum feugiat sed et nulla.&lt;/li>
&lt;li>Vivamus molestie augue in tristique laoreet.&lt;/li>
&lt;/ul></description></item><item><title>Pages</title><link>https://justice.bj.cn/homepage/pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/pages/</guid><description/></item><item><title>Experiences</title><link>https://justice.bj.cn/homepage/experiences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/experiences/</guid><description/></item><item><title>Vintage</title><link>https://justice.bj.cn/homepage/vintage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/vintage/</guid><description/></item><item><title>Blank</title><link>https://justice.bj.cn/homepage/blank/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://justice.bj.cn/homepage/blank/</guid><description>
&lt;div style="text-align:center">
&lt;p>Write anything you like here!&lt;/p>
&lt;/div></description></item><item><title>AList</title><link>https://justice.bj.cn/post/70.tool/alist/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/alist/</guid><description>&lt;h1 id="alist">AList&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="常用公开alist">常用公开alist&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://dl.jsoo.cc/">https://dl.jsoo.cc/&lt;/a> alist v3&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://archive.etoiles.me/">https://archive.etoiles.me/&lt;/a> alist v3&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://960303.xyz">http://960303.xyz&lt;/a> alist v2&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://ali.i.chuguang.pro">http://ali.i.chuguang.pro&lt;/a> v3&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="参考">参考&lt;/h2></description></item><item><title>B-Tree, B+Tree, B*Tree</title><link>https://justice.bj.cn/post/12.data_struct/tree/b-tree/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/12.data_struct/tree/b-tree/</guid><description>&lt;h1 id="b-tree-btree-btree">B-Tree, B+Tree, B*Tree&lt;/h1>
&lt;h2 id="b树b-tree">B树(B-Tree)&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;code>B-Tree&lt;/code>是1972年由Rudolf Bayer和Ed M. McCreight在Boeing Research Labs发明的一种数据结构；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>B-Tree&lt;/code>是为磁盘等外存储设备设计的一种平衡多路查找树(Balance Multiple Search Tree);&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>B-Tree&lt;/code>不是二叉树(Binary-Tree), 是一种多叉树；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="b树的定义">B树的定义&lt;/h3>
&lt;p>Knuth 的定义，一个 &lt;em>m&lt;/em> 阶的B树是一个有以下属性的树：&lt;/p>
&lt;ol>
&lt;li>每一个节点最多有 &lt;em>m&lt;/em> 个子节点;&lt;/li>
&lt;li>每一个非叶子节点（除根节点）最少有 ⌈&lt;em>m&lt;/em>/2⌉ 个子节点&lt;/li>
&lt;li>如果根节点不是叶子节点，那么它至少有两个子节点&lt;/li>
&lt;li>有 &lt;em>k&lt;/em> 个子节点的非叶子节点拥有 &lt;em>k&lt;/em> − 1 个键&lt;/li>
&lt;li>所有的叶子节点都在同一层;&lt;/li>
&lt;/ol>
&lt;h3 id="b树特点">B树特点&lt;/h3>
&lt;ul>
&lt;li>&lt;code>B树&lt;/code>的每个节点同时包含(K,V);&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2020/11/21-09-56-17-2020-04-21-13-16-05-image.png" alt="">&lt;/p>
&lt;h3 id="b树的操作">B树的操作&lt;/h3>
&lt;h4 id="查找">查找&lt;/h4>
&lt;p>来模拟下查找文件 29 的过程：&lt;/p>
&lt;p>(1) 根据根结点指针找到文件目录的根磁盘块 1，将其中的信息导入内存。【磁盘 IO 操作 1 次】&lt;/p>
&lt;p>(2) 此时内存中有两个文件名 17，35 和三个存储其他磁盘页面地址的数据。根据算法我们发现 17&amp;lt;29&amp;lt;35，因此我们找到指针 p2。&lt;/p>
&lt;p>(3) 根据 p2 指针，我们定位到磁盘块 3，并将其中的信息导入内存。【磁盘 IO 操作 2 次】&lt;/p>
&lt;p>(4) 此时内存中有两个文件名 26，30 和三个存储其他磁盘页面地址的数据。根据算法我们发现 26&amp;lt;29&amp;lt;30，因此我们找到指针 p2。&lt;/p>
&lt;p>(5) 根据 p2 指针，我们定位到磁盘块 8，并将其中的信息导入内存。【磁盘 IO 操作 3 次】&lt;/p>
&lt;p>(6) 此时内存中有两个文件名 28，29。根据算法我们查找到文件 29，并定位了该文件内存的磁盘地址。&lt;/p>
&lt;h4 id="插入">插入&lt;/h4>
&lt;p>针对m阶高度h的B树，插入一个元素时，首先在B树中是否存在，如果不存在，即在叶子结点处结束，然后在叶子结点中插入该新的元素。&lt;/p>
&lt;ul>
&lt;li>若该节点元素个数小于m-1，直接插入；&lt;/li>
&lt;li>若该节点元素个数等于m-1，引起节点分裂；以该节点中间元素为分界，取中间元素（偶数个数，中间两个随机选取）插入到父节点中；&lt;/li>
&lt;li>重复上面动作，直到所有节点符合B树的规则；最坏的情况一直分裂到根节点，生成新的根节点，高度增加1；&lt;/li>
&lt;/ul>
&lt;p>上面三段话为插入动作的核心；&lt;/p>
&lt;h4 id="删除">删除&lt;/h4>
&lt;p>首先查找B树中需删除的元素, 如果该元素在B树中存在，则将该元素在其结点中进行删除；&lt;/p>
&lt;p>删除该元素后，首先判断该元素是否有左右孩子结点，&lt;/p>
&lt;p>如果有，则上移孩子结点中的某相近元素(“左孩子最右边的节点”或“右孩子最左边的节点”)到父节点中，然后是移动之后的情况；&lt;/p>
&lt;p>如果没有，直接删除。&lt;/p>
&lt;ul>
&lt;li>某结点中元素数目小于（m/2）-1,(m/2)向上取整，则需要看其某相邻兄弟结点是否丰满；&lt;/li>
&lt;li>如果丰满（结点中元素个数大于(m/2)-1），则向父节点借一个元素来满足条件；&lt;/li>
&lt;li>如果其相邻兄弟都不丰满，即其结点数目等于(m/2)-1，则该结点与其相邻的某一兄弟结点进行“合并”成一个结点；&lt;/li>
&lt;/ul>
&lt;h2 id="b树btree">B+树(B+Tree)&lt;/h2>
&lt;ul>
&lt;li>&lt;code>B+树&lt;/code>是B-Tree的一种变种，使其更适合实现外存储索引结构；&lt;/li>
&lt;li>&lt;code>B+树&lt;/code>的非叶子节点只包含K, 不包含V，V都位于叶子节点内；&lt;/li>
&lt;li>&lt;code>B+树&lt;/code>的叶子节点按序包含了向后的指针，形成了一个链表，便于范围遍历操作；&lt;/li>
&lt;li>MySQL的InnoDB存储引擎和Mongodb就是用&lt;code>B+Tree&lt;/code>实现其索引结构；&lt;/li>
&lt;/ul>
&lt;h3 id="特点">特点&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>B+&lt;strong>树的层级更少&lt;/strong>：相较于B树B+每个&lt;strong>非叶子&lt;/strong>节点存储的关键字数更多，树的层级更少所以查询数据更快；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>B+&lt;strong>树查询速度更稳定&lt;/strong>：B+所有关键字数据地址都存在&lt;strong>叶子&lt;/strong>节点上，所以每次查找的次数都相同所以查询速度要比B树更稳定;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>B+树天然具备排序功能：&lt;strong>B+树所有的&lt;/strong>叶子节点数据构成了一个有序链表，在查询大小区间的数据时候更方便，数据紧密性很高，缓存的命中率也会比B树高。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>B+树全节点遍历更快：&lt;strong>B+树遍历整棵树只需要遍历所有的&lt;/strong>叶子节点即可，而不需要像B树一样需要对每一层进行遍历，这有利于数据库做全表扫描。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>B树&lt;/strong>相对于&lt;strong>B+树&lt;/strong>的优点是：如果经常访问的数据离根节点很近，而&lt;strong>B树&lt;/strong>的&lt;strong>非叶子&lt;/strong>节点本身存有关键字其数据的地址，所以这种数据检索的时候会要比&lt;strong>B+树&lt;/strong>快。&lt;/p>
&lt;p>&lt;code>B+树&lt;/code>通常用于数据库和操作系统的&lt;code>文件系统&lt;/code>中;&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2022/03/19-11-42-17-2022-03-19-11-42-14-image.png" alt="">&lt;/p>
&lt;h3 id="插入-1">插入&lt;/h3>
&lt;h3 id="删除-1">删除&lt;/h3>
&lt;h2 id="b-tree">B* Tree&lt;/h2>
&lt;p>B*树是B+树的变种，&lt;/p>
&lt;p>相对于B+树他们的不同之处如下：&lt;/p>
&lt;p>（1）首先是关键字个数限制问题，B+树初始化的关键字初始化个数是cei(m/2)，B*树的初始化个数为（cei(2/3*m)）&lt;/p>
&lt;p>（2）B+树节点满时就会分裂，而B*树节点满时会检查兄弟节点是否满（因为每个节点都有指向兄弟的指针），如果兄弟节点未满则向兄弟节点转移key，如果兄弟节点已满，则从当前节点和兄弟节点各拿出1/3的数据创建一个新的节点出来；&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/ZhuZhengyi/notebook-images/master/2022/03/19-11-42-56-2022-03-19-11-42-52-image.png" alt="">&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://zh.wikipedia.org/wiki/B%E6%A0%91">Wiki-B树&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/wardseptember/notes/blob/master/docs/B%E6%A0%91%E5%92%8CB+%E6%A0%91%E8%AF%A6%E8%A7%A3.md">B树和B+树详解&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/julycoding/The-Art-Of-Programming-By-July/blob/master/ebook/zh/03.02.md">The-Art-Of-Programming-By-July/03.02.md at master · julycoding/The-Art-Of-Programming-By-July · GitHub&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/27700617">https://zhuanlan.zhihu.com/p/27700617&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/54102723">https://zhuanlan.zhihu.com/p/54102723&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://draveness.me/whys-the-design-mysql-b-plus-tree/">为什么 MySQL 使用 B+ 树 - 面向信仰编程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ivanzz1001.github.io/records/post/data-structure/2018/06/16/ds-bplustree">B+树详解 | Ivanzz&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://segmentfault.com/a/1190000020416577">https://segmentfault.com/a/1190000020416577&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/wade-luffy/p/6292784.html">B+树介绍 - wade&amp;amp;luffy - 博客园&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ol></description></item><item><title>Bazel</title><link>https://justice.bj.cn/post/70.tool/bazel/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/bazel/</guid><description>&lt;h1 id="bazel">Bazel&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;p>Bazel是Google开源的自动化构建工具，&lt;/p>
&lt;h2 id="特点">特点&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>构建快。支持增量编译。对依赖关系进行了优化，从而支持并发执行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可构建多种语言。bazel可用来构建Java C++ Android ios等很多语言和框架，并支持mac windows linux等不同平台&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可伸缩。可处理任意大小的代码库，可处理多个库，也可以处理单个库&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可扩展。使用bazel扩展语言可支持新语言和新平台。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="项目结构">项目结构&lt;/h2>
&lt;p>bazel顶层，也就是根目录下为工作区workspace，workspace下包含多个package，每个package又包含多个编译目标target。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>workspace&lt;/p>
&lt;p>要进行构建的文件系统，根目录下必须包含一个文件名为WORKSPACE的文件，即使它内容为空。它指明了构建的根目录。文件系统中包括源文件，头文件，输出目录的符号链接等。WORKSPACE采用类似Python的语法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>package&lt;/p>
&lt;p>一个WORKSPACE工作区下可以包括多个包package，每个package可以实现一个子模块，从而让各个模块进行解耦。每个package下必须包含一个BUILD文件，它指定了package的编译构建规则。&lt;/p>
&lt;p>BUILD文件也是采用的类似Python的语法，它定义了编译规则，lib依赖等各项规则。其中有些命令专属于BUILD文件，有些则是bazel语法通用的，如WORKSPACE文件中也可以使用。主要方法调用如下&lt;/p>
&lt;ul>
&lt;li>
&lt;p>tf_cc_binary：目标文件编译规则，为一个二进制可执行文件。name必须唯一，srcs指定了源文件，linkopts指定了链接规则，deps指定了依赖文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>cc_library：库文件编译规则，name指定了编译为库文件后的文件名，srcs和hdrs指定源文件和头文件，deps指定需要依赖的其他文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>tf_cc_test：测试文件规则&lt;/p>
&lt;/li>
&lt;li>
&lt;p>package：通用方法，定义的值会作用到下面的每个子rule中。default_visibility指定了这个包的默认可见规则。可见的情况下才能被其他package调用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>licenses：通用方法，默认的license&lt;/p>
&lt;/li>
&lt;li>
&lt;p>load：通用方法，加载.bzl文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>filegroup：通用方法，为多个编译目标target指定一个名字，glob是一个帮助函数，指定了目录中哪些文件会include，哪些会exclude。visibility指定了target的可见性，也就是可以被哪些package调用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>label&lt;/p>
&lt;p>包的名称叫做标签，用来标识一个包package。标签由两部分组成，一部分为包名my/app/main， 一部分为包构建的目标名app_binary。每个标签用来唯一标示包构建的目标，从而在被其他包使用时可以标识出来。同一个包下，标签可以省略包名部分，如:app_binary表示同一个包下的目标。不同包之间，则千万不能省略包名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>target&lt;/p>
&lt;p>包package是一个容器，组成它的元素称为目标，分为文件和规则。文件分为两种，一种为程序员写的源代码，一种为构建工具生成的文件。规则定义了如何利用输入来构建得到输出，如上面的BUILD。输入一般是源文件，库文件等，输出则一般是生成的构建目标文件。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="命令">命令&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ bazel build //...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>brew</title><link>https://justice.bj.cn/post/70.tool/brew/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/brew/</guid><description>&lt;h1 id="brew">brew&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="操作">操作&lt;/h2>
&lt;ul>
&lt;li>安装指定版本&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ git clone http://github.com/homebrew/homebrew-core
$ vi homebrew-core/Formula/xxxx.rb
$ brew install homebrew-core/Formula/xxxx.rb
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="更换homebrew源">更换Homebrew源&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># 替换brew.git:&lt;/span>
&lt;span class="nb">cd&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>brew --repo&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
git remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git
&lt;span class="c1"># 替换homebrew-core.git:&lt;/span>
&lt;span class="nb">cd&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>brew --repo&lt;span class="k">)&lt;/span>&lt;span class="s2">/Library/Taps/homebrew/homebrew-core&amp;#34;&lt;/span>
git remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git
&lt;span class="c1"># 替换homebrew-bottles:&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;span class="nb">source&lt;/span> ~/.zshrc
&lt;span class="c1"># 替换homebrew-cask.git:&lt;/span>
&lt;span class="nb">cd&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>brew --repo&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>/Library/Taps/homebrew/homebrew-cask
git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>clonezilla</title><link>https://justice.bj.cn/post/70.tool/clonezilla/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/clonezilla/</guid><description>&lt;h1 id="clonezilla">clonezilla&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="1-initrdimg修改">1. initrd.img修改&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">### 解压initrd.img&lt;/span>
$ xz -d initrd.img.xz &lt;span class="c1">#Xz格式&lt;/span>
$ gunzip initrd.img.gz &lt;span class="c1">#Gz格式&lt;/span>
&lt;span class="c1">### 解压cpio&lt;/span>
$ cpio -i -d &amp;lt; initrd.img
&lt;span class="c1">### 打包initrd.img&lt;/span>
$ &lt;span class="nb">cd&lt;/span> initrd &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> find . &lt;span class="p">|&lt;/span> cpio -o -H newc &lt;span class="p">|&lt;/span> gzip &amp;gt; ../initrd.img
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2-filesystemsquashfs修改">2. filesystem.squashfs修改&lt;/h2>
&lt;ul>
&lt;li>解压squashfs&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ unsquashfs filesystem.squashfs
&lt;span class="c1">#或者&lt;/span>
$ mount –t squashfs filesystem.squashfs /mnt/tmp
$ cp –r /mnt/tmp squashfs-root-dir
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3-增加驱动">3. 增加驱动&lt;/h2>
&lt;p>将驱动模块拷贝到相应目录下，更新相关配置信息:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ cp *.ko /lib/modules/&lt;span class="k">$(&lt;/span>uname -r&lt;span class="k">)&lt;/span>/extra/
$ depmod –a
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="4-打包squashfs">4. 打包squashfs&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ mksquashfs squashfs-root-dir filesystem.squashfs –force-uid &lt;span class="m">0&lt;/span> –all-root
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="5-pxelinuxcfgdefault">5. pxelinux.cfg/default&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">LABEL myos
MENU LABEL myos
kernel myos/live/vmlinuz
append initrd=/myos/live/initrd.img boot=live union=overlayfs noswap edd=on nomodeset noprompt config nosplash only-ubiquity ip=frommedia vgz=791 locales=zh_CN.UTF-8 keyboard-layouts=NONE ocs_live_batch=&amp;#34;yes&amp;#34; fetch=tftp://192.18.0.2/myos/live/filesystem.squashfs ocs_premount=&amp;#34;mount -t nfs 192.168.0.2:/tftpboot/myos/home/partimag /home/partimag&amp;#34; ocs_live_run=&amp;#34;ocs-sr -g auto -e1 auto -e2 -c -r -j2 -k1 -p reboot restoredisk ask_user ask_user&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>curl</title><link>https://justice.bj.cn/post/70.tool/curl/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/curl/</guid><description>&lt;h1 id="curl">curl&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h2 id="常用操作">常用操作&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1">## GET&lt;/span>
&lt;span class="c1">## PUT json data&lt;/span>
$ curl -X PUT &lt;span class="nv">$consul_url&lt;/span> -d @- &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;span class="s"> {
&lt;/span>&lt;span class="s"> &amp;#34;id&amp;#34;: &amp;#34;${id}&amp;#34;,
&lt;/span>&lt;span class="s"> &amp;#34;name&amp;#34;: &amp;#34;${name}&amp;#34;,
&lt;/span>&lt;span class="s"> &amp;#34;address&amp;#34;: &amp;#34;${addr}&amp;#34;,
&lt;/span>&lt;span class="s"> &amp;#34;port&amp;#34;: ${port},
&lt;/span>&lt;span class="s"> &amp;#34;tags&amp;#34;: [
&lt;/span>&lt;span class="s"> &amp;#34;role=$role&amp;#34;,
&lt;/span>&lt;span class="s"> &amp;#34;cluster=$cluster&amp;#34;,
&lt;/span>&lt;span class="s"> &amp;#34;env=$env&amp;#34;
&lt;/span>&lt;span class="s"> ]
&lt;/span>&lt;span class="s"> }
&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://www.jianshu.com/p/fc0eb6c60816">https://www.jianshu.com/p/fc0eb6c60816&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>macos日常</title><link>https://justice.bj.cn/post/70.tool/macos/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/macos/</guid><description>&lt;h1 id="macos日常">macos日常&lt;/h1>
&lt;h2 id="samba连接慢">samba连接慢&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>请进入&lt;strong>应用程序&lt;/strong> &amp;gt; &lt;strong>实用工具&lt;/strong>打开&lt;strong>终端机&lt;/strong>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建空文件 &lt;strong>/etc/nsmb.conf&lt;/strong>：&lt;/p>
&lt;p>sudo touch /etc/nsmb.conf&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 vi 打开 &lt;strong>/etc/nsmb.conf&lt;/strong>：&lt;/p>
&lt;p>sudo vi /etc/nsmb.conf&lt;/p>
&lt;/li>
&lt;li>
&lt;p>通过输入以下内容修改 signing_required 的值：&lt;/p>
&lt;p>[default]&lt;br>
signing_required=no&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>为增强安全性，Mac OS X 10.11.5 将默认启用 SMB 客户端签发，从而影响 SMB 文件的传输速度。如果要通过 LAN 执行 SMB 文件传输（出于安全目的，我们建议不要通过 Internet 执行 SMB 文件传输），请进行以下操作以禁用通过 /etc/nsmb.conf 文件从客户端进行 SMB 客户端签发：&lt;/p>
&lt;h2 id="只读">只读&lt;/h2>
&lt;p>首先说一下这是因为苹果新系统升级了根目录的文件权限，变成只读了，这么做对用户来说是友好的，但是对我们开发人员来说简直就是灾难，好多原来的项目都不能运行了。&lt;/p>
&lt;p>解决的办法是：&lt;/p>
&lt;ol>
&lt;li>关掉&lt;code>SIP&lt;/code>（系统安全保护）&lt;/li>
&lt;li>重新挂载根目录&lt;/li>
&lt;li>重新启动项目&lt;/li>
&lt;/ol>
&lt;p>关掉&lt;code>SIP&lt;/code>需要重新启动按住 Command + R 进入 macOS 恢复系统，在实用工具里面点击终端，加上下面这一句代码按下会车，看见&lt;code>successfully...&lt;/code>之后重新启动&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">csrutil disable
sudo mount -uw / &lt;span class="c1">#重新挂载根目录需要在终端输入下面这句代码&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后就可以在根目录创建文件夹了&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">sudo mkdir -p /data/db
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="alfred-文件重复">alfred 文件重复&lt;/h2>
&lt;p>首先，系统中并不存在两个重复的应用。数据卷 &lt;code>Macintosh HD Data&lt;/code> 负责第三方应用的安装，所以 &lt;code>System/volumes/Macintosh/Applications&lt;/code> 才是应用的真实目录，而 &lt;code>Macintosh HD/Applications&lt;/code> 只是它的 firmlink。解决办法也很简单，在 Alfred 中输入 &lt;code>reload&lt;/code> 命令，Alfred 就会恢复正常。&lt;/p>
&lt;h3 id="调整launchpad-启动台">调整Launchpad 启动台&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ defaults write com.apple.dock springboard-columns -int &lt;span class="m">9&lt;/span>
$ defaults write com.apple.dock springboard-rows -int &lt;span class="m">6&lt;/span>
$ defaults write com.apple.dock ResetLaunchPad -bool TRUE
$ killall Dock
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="允许网页下载软件启动">允许网页下载软件启动&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># macosx 10.15&lt;/span>
$ sudo xattr -r -d com.apple.quarantine &amp;lt;/Applications/APPNAME.app/&amp;gt;
&lt;span class="c1"># macosx 10.13， 开启任何来源&lt;/span>
$ sudo spctl --master-disable
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="clang-path">clang path&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">$ clang -E -x c++ - -v &amp;lt; /dev/null
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="收集macos系统信息">收集macos系统信息&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">log show --info --debug --last 1m --predicate &lt;span class="s2">&amp;#34;(subsystem == &amp;#39;com.apple.processmanager&amp;#39;) || (subsystem == &amp;#39;com.apple.launchservices&amp;#39;)&amp;#34;&lt;/span>
launchctl list &lt;span class="p">|&lt;/span> grep -v com.apple
sudo launchctl list &lt;span class="p">|&lt;/span> grep -v com.apple
launchctl print system &lt;span class="p">|&lt;/span> grep -v com.apple
sudo launchctl print user/&lt;span class="sb">`&lt;/span>whoami&lt;span class="sb">`&lt;/span> &lt;span class="p">|&lt;/span> grep -v com.apple
kextstat &lt;span class="p">|&lt;/span> grep -v com.apple
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>允许网页下载软件启动&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1"># macosx 10.15&lt;/span>
$ sudo xattr -r -d com.apple.quarantine &amp;lt;/Applications/APPNAME.app/&amp;gt;
&lt;span class="c1"># macosx 10.13， 开启任何来源&lt;/span>
$ sudo spctl --master-disable
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>调整Launchpad 启动台&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ defaults write com.apple.dock springboard-columns -int &lt;span class="m">9&lt;/span>
$ defaults write com.apple.dock springboard-rows -int &lt;span class="m">6&lt;/span>
$ defaults write com.apple.dock ResetLaunchPad -bool TRUE
$ killall Dock
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>too many openfiles&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">## 修改limit限制&lt;/span>
sudo launchctl limit maxfiles &lt;span class="m">1024&lt;/span> unlimited
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>移动硬盘文件显示灰色&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">/usr/local/bin/xattr -c &amp;lt;filename&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>.DS_store&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">## 关闭.DS_store生成&lt;/span>
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE
&lt;span class="c1">## 恢复.DS_store生成&lt;/span>
defaults delete com.apple.desktopservices DSDontWriteNetworkStores
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>macos卷只读变可写&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">## ln: Headers: Read-only file system
[]$ sudo mount -uw /
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&amp;ldquo;stdlib.h&amp;rdquo; not found&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">sudo ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include /usr/include
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="opencore-patcher">OpenCore-Patcher&lt;/h2>
&lt;h2 id="gameportingtoolkit">GamePortingToolkit&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://download.developer.apple.com/Developer_Tools/Game_porting_toolkit_beta/Game_porting_toolkit_beta.dmg">download dmg&lt;/a>&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;h2 id="参考">参考&lt;/h2></description></item><item><title>Rust交叉编译</title><link>https://justice.bj.cn/post/14.language/rust/rust%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/14.language/rust/rust%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</guid><description>&lt;h1 id="rust交叉编译">Rust交叉编译&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;h3 id="macos平台编译linux">Macos平台编译linux&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">## 1. 安装linux编译工具链&lt;/span>
$ brew install FiloSottile/musl-cross/musl-cross
&lt;span class="c1">## 2. 创建musl-gcc&lt;/span>
$ ln -s /usr/local/bin/x86_64-linux-musl-gcc /usr/local/bin/musl-gcc
&lt;span class="c1">## 3. 添加linux平台目标&lt;/span>
$ rustup target add x86_64-unknown-linux-musl
&lt;span class="c1">## 4. 修改配置文件&lt;/span>
$ cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt; ~/.cargo/config
&lt;/span>&lt;span class="s">[target.x86_64-unknown-linux-musl]
&lt;/span>&lt;span class="s">linker = &amp;#34;x86_64-linux-musl-gcc&amp;#34;
&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;span class="c1">## 5. 编译&lt;/span>
$ cargo build --release --target x86_64-unknown-linux-musl
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="macos平台编译windows">MacOS平台编译windows&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="c1">## 1. 添加windows编译工具链&lt;/span>
$ brew install mingw-w64
&lt;span class="c1">## 2. 添加windows平台目标&lt;/span>
$ rustup target add x86_64-pc-windows-gnu
&lt;span class="c1">## 3. 修改配置文件&lt;/span>
$ cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt;&amp;gt; ~/.cargo/config
&lt;/span>&lt;span class="s">[target.x86_64-pc-windows-gnu]
&lt;/span>&lt;span class="s">linker = &amp;#34;x86_64-w64-mingw32-gcc&amp;#34;
&lt;/span>&lt;span class="s">ar = &amp;#34;x86_64-w64-mingw32-gcc-ar&amp;#34;
&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;span class="c1">## 4. 编译&lt;/span>
$ cargo build --release --target x86_64-unknown-linux-musl
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://tomshine.hashnode.dev/rust-macos-linux-windows">https://tomshine.hashnode.dev/rust-macos-linux-windows&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://rustwiki.org/zh-CN/edition-guide/rust-2018/platform-and-target-support/musl-support-for-fully-static-binaries.html#musl-%E6%94%AF%E6%8C%81%E5%AE%8C%E5%85%A8%E9%9D%99%E6%80%81%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6">https://rustwiki.org/zh-CN/edition-guide/rust-2018/platform-and-target-support/musl-support-for-fully-static-binaries.html#musl-%E6%94%AF%E6%8C%81%E5%AE%8C%E5%85%A8%E9%9D%99%E6%80%81%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>关于数学和人文社科关系的讨论</title><link>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/04.%E5%85%B3%E4%BA%8E%E6%95%B0%E5%AD%A6%E5%92%8C%E4%BA%BA%E6%96%87%E7%A4%BE%E7%A7%91%E5%85%B3%E7%B3%BB%E7%9A%84%E8%AE%A8%E8%AE%BA/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/04.%E5%85%B3%E4%BA%8E%E6%95%B0%E5%AD%A6%E5%92%8C%E4%BA%BA%E6%96%87%E7%A4%BE%E7%A7%91%E5%85%B3%E7%B3%BB%E7%9A%84%E8%AE%A8%E8%AE%BA/</guid><description>&lt;h1 id="关于数学和人文社科关系的讨论">关于数学和人文社科关系的讨论&lt;/h1>
&lt;p>在第2、3章中，我们在用数学工具定义“权力”、“民智”等概念后，通过数学建模的方式，证明了“民智未开时，适当的权威有助于保障民众的自由”和“随着民智的逐渐开化，降低权威才能最大限度保障民众的自由”这两个重要结论。&lt;/p>
&lt;p>但与此同时，这个模型还有很多待完善之处，有些问题甚至会涉及到“数学在人文社科中能够发挥多大作用”这个回答起来并不是那么容易的问题。&lt;/p>
&lt;p>作为本专栏的收尾，第4章将对2、3章的模型未来可能的拓展方向进行讨论，并在由此引发的关于“数学在人文社科中扮演的角色”这个问题，进行深度的讨论&lt;/p>
&lt;h2 id="一关于本模型未来可能的发展方向">一、关于本模型未来可能的发展方向&lt;/h2>
&lt;h3 id="1设置目标函数">1、设置目标函数&lt;/h3>
&lt;p>读过前三章的朋友可能会发现，我在文中并没有针对“制度设计的目的是什么”这个问题进行回答。在第1章中，我举的几个例子蕴含了功利主义的倾向，即以最大化全社会自由之和作为追求目标。而在第3章中，我又表现出了一定的罗尔斯主义的倾向：以弱势者的自由作为评价权力分配格局的标准。&lt;/p>
&lt;p>事实上，在整个政治哲学界，也存在着多种目标导向的社会福利函数形式，每种形式都各有利弊，他们大体可被分为以下两类：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>可加性社会福利函数，即以最大化 $W=U_{1}+U_{2}+…+U_{i}$ 为目标的社会福利函数。这就是典型的功利主义：追求社会整体自由之和的最大化。它的缺点也很明显：没有考虑贫富差距，允许在某一社会成员的自由度是负数的时候取得最大值。如果行动者A是一个虐待狂，可加性社会福利函数允许A通过虐待B使得B获得负的自由度时，达到社会整体自由度W的最大化。对于可加性社会福利函数的公理化证明、拓展形式及有效性的讨论，详见豪尔绍尼（1955&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_1">[1]&lt;/a>、1975&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_2">[2]&lt;/a>）、黄有光（1975&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_3">[3]&lt;/a>、1984&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_4">[4]&lt;/a>）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可乘性社会福利函数，即以最大化 $W=U_{1}\cdot U_{2}\cdot …\cdot U_{i} $为目标的社会福利函数。这种社会福利函数的优点在于考虑了贫富差距：弱势者自由度减半必须靠强势者自由度加倍才能弥补，而就绝对值而言前者远远小于后者，这意味着弱势者轻微的损失都会对总社会福利W产生巨大的影响。但它的缺点在于有时候并不如可加性社会福利函数对现实的解释力度更大：如果贫富差距悬殊，弱势者自由度减1可能需要强势者自由度再增加10000才能维持正义性，这很多时候不符合直觉。对于可乘性社会福利函数的公理化证明、拓展形式和有效性的讨论，详见卢斯和拉法（1957&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_5">[5]&lt;/a>）、德梅耶和普洛特（1971&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_6">[6]&lt;/a>）、金子和中村（1979&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_7">[7]&lt;/a>）&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>本专栏提出的权力-自由模型，亦可以在未来的发展中，加入对目标函数的考量，从而更具有指导实践的价值。至于是选取哪种形式的目标函数，抑或创造新的形式的目标函数，可在未来根据需要进行具体分析。&lt;/p>
&lt;h3 id="2更复杂但贴近现实的收益函数">2、更复杂但贴近现实的收益函数&lt;/h3>
&lt;p>如第2、3章所展示的那样，本专栏提出的权力-自由模型采取的收益函数$U_{A}=(-a(x+y)+b)x$，是较为初级的线性函数：不仅“价格”部分 $p=-a(x+y)+b$ 是简单线性模型的形式，行动者A的收益也被简单地表示为线性的$ U_{A}=px$ 。&lt;/p>
&lt;p>但是，行为经济学家们早已通过对人心理活动的考察，论证了现实中的收益函数不可能是简单的线性函数：它更有可能是非线性的，甚至是不平滑的。典型的例子就是卡尼曼-特沃斯基价值函数（Kahneman-Tversky Value Function）&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_8">[8]&lt;/a>。在这个函数中，收益曲线呈现出一个S型，表明收益呈现出边际效用递减的特点，而这无疑更符合实际：试想，你的总资产只有10万元，和总资产有1000万元的时候，再增加10万元的资产，对你自由度（满足度的数学期望，详见第1章的定义）的提升程度一定是不一样的。&lt;/p>
&lt;p>&lt;img src="https://pic3.zhimg.com/v2-a5de3b540ee1e16d96d029cde315f65e_b.jpg" alt="">&lt;/p>
&lt;p>卡尼曼价值函数：效用不是线性的而是边际递减的&lt;/p>
&lt;p>因此，本专栏提出的权力-自由模型，可以在未来，结合对人的心理行为的考察，采取更符合现实的收益函数，提升模型的有效性。&lt;/p>
&lt;h3 id="3更多的行动者">3、更多的行动者&lt;/h3>
&lt;p>在第2、3章的模型中，行动者被笼统地区分为“强势者”和“弱势者”两方。但在现实中，采取一致行动的社会集体存在很多个，至少存在很多诸如“多个弱势方通过结社联合对抗强势方”、“权力不强不弱的中间方游离于强势方和弱势方中间”等多个行动者的可能。&lt;/p>
&lt;p>在现代微观经济学中，可以通过博弈论模型，来研究不同情况之下多方博弈的结果：包括多方静态博弈、动态博弈、不完全信息博弈，等等。这些模型已经涵盖了多回合较量、非理性乃至不确定对方是否理性等多种情况，具有很高的参考价值。&lt;/p>
&lt;p>本专栏的权力-自由模型，亦可以在未来，通过借鉴博弈论等理论模型，讨论将社会划分为多个行动团体的情况下，权力格局如何设计才最为合理。&lt;/p>
&lt;h3 id="4引入随时间变化的变量">4、引入随时间变化的变量&lt;/h3>
&lt;p>在第3章的最后一节中，通过假定“民智随着时间的推移逐渐开化”，得出了“对强势方的权力制衡应逐渐增大”的结论。&lt;/p>
&lt;p>但是，仔细回顾第3章对“民智”的定义，可以看出，这个模型中的“民智”本质上是“民众对事物观测的偏离程度”。但现实中，这种偏离不一定是民众的思考能力差导致的，还有可能是环境的变化，造成先前的生活经验不适用导致的。远的如明朝末年白银的流入，使得中国历史上第一次面临通货紧缩的问题；近的如新冠疫情，导致人类第一次在拥有成熟的生物学和公共卫生学知识的情况下直面高传染性和致病性的病原体。这些例子都表明，按第3章的定义，“民智”乃至强势方的“官智”，都可能不是随时间逐渐升高的。&lt;/p>
&lt;p>在这种前提下，就必须重新考虑模型中各变量与时间的关系。例如，“民智” t 或许不是像第3章所展示的那样随时间的推移逐渐提高，而更可能是个周期函数：每发生一次环境变化，就会开启一轮由低到高的循环。而权力制衡系数 k 则又很难配合 t 成为周期函数，否则会面临着一次次“开历史倒车”的质疑：凭什么对权力的制衡一会儿低一会儿高的？该低该高究竟谁说了算？在这种条件下，又该如何设计权力分配格局？这是未来的权力-自由模型，所需要探讨的问题。&lt;/p>
&lt;p>在引入随时间变化的变量后，就可以将整个社会的自由的分布视为一个动态的系统。之后，可以通过解关于时间的微分方程、分析李普雅诺夫稳定性等手段，用控制论的方法分析这个动态系统随时间推移的发展方向，进而分析怎样的权力分配才能让系统收敛于最大程度保障自由的状态。&lt;/p>
&lt;p>以上分析出了本专栏的权力-自由模型在未来可能的4种发展方向，但到此为止并没有结束。因为即使按这4种发展方向升级优化了模型，也并没有解决“简单的数学模型与复杂的现实相脱节”这个根本的质疑。接下来本章后半部分的内容，就来探讨数学模型究竟在人文社科的研究中，扮演了怎样的角色。&lt;/p>
&lt;h2 id="二关于数学在人文社科中的角色">二、关于数学在人文社科中的角色&lt;/h2>
&lt;h3 id="0数学模型的局限性">0、数学模型的局限性&lt;/h3>
&lt;p>1894年，诺贝尔物理学奖得主、光速的测量者，阿尔伯特·迈克尔逊宣布：科学的大厦即将建成，人类将解开一切未解之谜。那时的科学家们坚信，自然界和人类社会的一切谜团，都能够用各种数学工具解开，包括微观的、原子化的个体行为是如何引发宏观的系统性行为的。&lt;/p>
&lt;p>但是，随着研究的逐渐深入，科学家们发现，越来越多的现象，几乎不可能用一个简单的数学模型去描述。&lt;/p>
&lt;p>比如：如何预测某地区一个月后的天气？如何预测股市的涨跌？&lt;/p>
&lt;p>过去，科学家们认为，这些现象之所以难以预测，是因为影响变量太多，观测手段难以兼顾导致的。但随着研究的深入，科学家们逐渐发现，即便是非常简单的场景，复杂性和不可预测性也会产生。&lt;strong>最典型的例子就是三体问题&lt;/strong>：三体问题不存在解析解。虽然我们可以用数值方法计算出任意时刻的数值解，但三体本质上是个混沌系统，任何一点轻微的扰动，都将令系统状态变得不可预测。&lt;/p>
&lt;p>即便是存在解析解，能用简洁的初等函数表示，同时也不会导致模型不会过于复杂，也是一种奢望。例如， $\frac{sin(x)}{x}$ 的原函数、一元五次方程的求根公式，这些看似很简单的问题，其答案也已经是无法用初等函数表示得了的了。&lt;/p>
&lt;p>这种复杂性，注定了对于现实中的很多问题，&lt;strong>有解析解是一种偶然，有可用于数学建模的简洁解析解更是偶然中的偶然&lt;/strong>。在第3章中，一个由简单的“古诺模型”发展而来的模型，竟然频繁出现诸如&lt;/p>
&lt;p>$ k&amp;lt;\frac{-13t^2+20t+5+\sqrt{(7t^2+4t+1)(31t^2-92t+73)}}{6(t+1)^2} $&lt;/p>
&lt;p>类似的复杂内容，而这仅仅是添加了“权力”、“民智”这两个新概念、尚且没考虑本章第1节所提的那些拓展因素的结果。这毫无疑问也揭示了，数学模型在面对哲学社会科学问题时，很多时候是孤木难支的。&lt;/p>
&lt;p>但这并不意味着人类面对未知就只能举手投降了。上世纪四五十年代，科学界曾经兴起了一场“控制论”运动，旨在研究微观的个体行为如何影响宏观的集体行为。经过数十年的发展，一场名为“复杂性科学”的思潮已经在整个科学界流行开来。这种专门研究“面对规律的不可预测性，人类应该采取何种应对手段”的思潮，深刻影响了自然科学和社会科学的研究范式。&lt;/p>
&lt;h3 id="1应对方法一放宽研究对象的尺度">1、应对方法一：放宽研究对象的尺度&lt;/h3>
&lt;p>尽管我们无法预测一个月后某个具体日期的天气，但我们至少可以根据气候特点判断当月的天气构成如何；尽管我们无法预测股市的波动，但我们可以从长远的视角研究资本主义的繁荣周期。这无疑向我们揭示了：只要适当放宽解释对象的尺度，那么尽管无法事无巨细地解释每一个细枝末节的现象，但简洁的模型已经足够揭示事物的规律。&lt;/p>
&lt;p>在社会科学中，尺度的增大，意味着模型所需的解释变量的减少。一个个体在某一个时刻的具体行为受太多因素的影响，甚至很多时候可以说是随机的；但一个群体在一个时期内的行为策略已经很有章可循。如果要研究某一种经济现象对一个经济体内某些指标的影响，现代经济学已经有很成熟的理论模型。&lt;/p>
&lt;p>但这里需要注意的是，尽管鼓励为了模型的简洁化而放宽尺度，但宏观的社会系统分析不能忽视其微观的社会成员行为基础，否则就会陷入卢卡斯批判（Lucas Critique）所言的情境：一切试图单纯靠历史数据来推演经济政策的影响都是天真的&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_9">[9]&lt;/a>。在吸取了“滞涨”的教训和卢卡斯批判的精神后，现代宏观经济学已经建立了多套以微观经济学为基础，分析宏观社会系统的理论体系。这也是未来整个社会科学界，想要实现理论的数理化、形式逻辑化，所要发展的方向。&lt;/p>
&lt;h3 id="2应对方法二放宽模型的精确度">2、应对方法二：放宽模型的精确度&lt;/h3>
&lt;p>    前文举过三个例子，来表明现实中简洁的解析解是多么难得：三体问题、$\frac{sin(x)}{x}$的原函数、一元五次方程的求根公式&lt;/p>
&lt;p>    但科学家们并没有因此放弃。如果不追求完美的精度，这几个问题仍然有办法用简洁的模型来解决：三体问题可以把天体的坐标和速度展开为时间的级数形式的近似表达式；$\frac{sin(x)}{x}$也可以通过泰勒展开近似求解原函数；而一元五次方程，可以通过牛顿法等方式，在任意情况下都可以求得近似解。这意味着，如果不追求完全准确的精度，原本复杂甚至不可解的问题，也可以用相对简洁的模型来表示。&lt;/p>
&lt;p>    也正是因为同样的原理，尽管形如 $y=\vec{a}\cdot \vec{x}+b$的简单线性模型看似不符合实际，但在许多场合中其有效性已足以揭示某些规律。19世纪时，高斯就是使用最小二乘法拟合出的线性模型，计算出了一颗小行星的位置，并最终为观测所证实。&lt;/p>
&lt;p>    在方法层面，遇到过于复杂，难以求解出具体形式的概率密度函数，用特征函数来近似在大多数时候都是一种足以满足需要的方法。此外，遇到难以求解的偏微分方程，用变分法等方法求近似解，多数情况下也足够满足需求、指导实践。&lt;/p>
&lt;p>    在当今的社会科学中，面对复杂的人性和社会运行逻辑，牺牲模型的解释精度，换取一个清晰明了的揭示变量之间关系模型的做法已经并不罕见。越来越多的社会科学研究者已经不再单纯用 p 值或 R^2 值来评价模型的价值。&lt;/p>
&lt;h3 id="3应对方法三放宽模型的适用条件">3、应对方法三：放宽模型的适用条件&lt;/h3>
&lt;p>尽管上一节论述了简单线性模型 $y=\vec{a}\cdot \vec{x}+b$ 的合理性，但这个模型毕竟建立在“变量之间的关系是线性的”这一假设之上，而这一严苛的适用条件在很多时候都会影响模型的有效性。&lt;/p>
&lt;p>现实中，存在不少能在不严重牺牲模型的简洁性的基础上，放宽模型适用条件的方法。例如，在建模之前，对变量进行标准化和归一化，就可以消除量级和量纲的影响，放宽变量的正态性假设；而对模型进行一个简单的对数变换（即等式两边同时取对数）就可以令线性假设不那么严格。&lt;/p>
&lt;p>    正是在超越简单线性回归严苛条件的基础上，各种广义线性模型应运而生：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>logistic回归超越了简单线性回归，将分析变量的范围拓展到了定类变量；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>softmax回归又超越了logistic回归，具备了处理多分类问题的能力；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>而在softmax回归的基础上，添加“隐藏层”这一要素，就形成了著名的深度学习神经网络。&lt;/p>
&lt;p>是的，神经网络很复杂，复杂到它的可解释性都已经成了一团谜，但与混沌相比，它依然是简洁的。这种简洁伴随了适用条件的放宽，实现了模型的高度有效性。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="4应对方法四重视经验资料">4、应对方法四：重视经验资料&lt;/h3>
&lt;p>前面三种应对方案，都着眼于如何设计模型。但是，无论模型设计得多么精巧，它的有效性都是需要靠现实世界的数据来验证的。用贝叶斯学派的语言来描述就是：&lt;strong>想要验证一个理论的有效性，那么无论这个理论模型设计得有多精妙，也只能提高理论成立的先验概率。而最终能检验理论的是后验概率，也就是经验资料的验证。&lt;/strong>&lt;/p>
&lt;p>在自然科学中，面对复杂到无法靠建模来求解的问题，通常采取在实验室中做大量实验的方式来求解参数。拿隐形战斗机的设计来举例：战斗机的外形几乎不可能纯粹依靠流体力学模型来求解出最佳答案，必须通过大量的风洞实验来一步步试错，最终筛选出最合适的外形；而隐身涂料的布置方式，必须靠实验室中一次次雷达波的照射，才能试验出最佳的方案。在工程学领域，用类似大量实验的方式来求解参数、研究方案，是很常见的做法。&lt;/p>
&lt;p>但是&lt;strong>在社会科学中，作为基本研究对象的人，和自然科学中的微观粒子有着本质的不同&lt;/strong>：不同人的行为模式是有巨大的差异的，并且这种行为模式不可能像自然科学一样通过在实验室里反复实验探索出来。&lt;/p>
&lt;p>由于研究对象的特殊性，社会科学常常面临着“科学性”不如自然科学的质疑。这对社会科学学者在定量方法的创新上提出了很高的要求，而社会科学在近百年的方法论创新上也取得了很多成果。例如，尽管无法在实验室里控制变量，精确揭示因果关系，但现今的社会科学方法论已经可以通过工具变量、双重差分、断点回归、合成控制等一系列手段进行因果推断，最大限度还原变量间的因果关系。诸如此类的经验资料解读方法上的创新，让社会科学研究者们，在无法像自然科学一样在实验室中做实验的情况下，依然最大程度上保证了学科的科学性。&lt;/p>
&lt;p>而本专栏所讨论的权力、民智与自由的关系的问题，也可以在改进模型的基础上，通过对历史资料的科学分析，结合对现实因素的考察，得出一个相对科学的、能够最大限度保障公民自由的权力分配格局。这种基于逻辑推理和经验观察的分析路径，比“普世价值”之类的辩经式思维方式，要更科学，也更具有指导实践的价值。&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_1_0">^&lt;/a>Harsanyi John C, &amp;ldquo;Cardinal Welfare, Individualistic Ethics, and Interpersonal Comparisons of Utility&amp;rdquo;, Journal of Political Economics 63, 1955, p309-21.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_2_0">^&lt;/a>Harsanyi John C, &amp;ldquo;Nonlinear Social Welfare Functions&amp;rdquo;, Theory and Decision 6,1975 , p311-32&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_3_0">^&lt;/a>Ng Yew-Kwang, &amp;ldquo;Bentham or Bergson? Finite Sensibility, Utility Functions and Social Welfare Functions&amp;rdquo;, Review of Economic Studies 42, 1975, p545-69.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_4_0">^&lt;/a>Ng Yew-Kwang, &amp;ldquo;Expected Subjective Utility: Is the Neumann-Morgenstern Utility the Same as the Neoclassical&amp;rsquo;s?&amp;rdquo;, Social Choice and Welfare1, 1984, p177-86.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_5_0">^&lt;/a>Luce R Duncan and Howard Raiffa, Games and Decisions, New York: Wiley, 1957.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_6_0">^&lt;/a>DeMeyer F and Charles Plott, &amp;ldquo;A Welfare Function Using Relative Intensity of Preference&amp;rdquo;, Quarterly Journal of Economics 85, 1971, p179-86.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_7_0">^&lt;/a>Kaneko Mamoru and Kenjiro Nakamura, &amp;ldquo;The Nash Social Welfare Function&amp;rdquo;, Econometrica 47, 1979, p423-35.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_8_0">^&lt;/a>详见Kahneman Daniel and Tversky Amos, &amp;ldquo;Prospect Theory: An Analysis of Decision under Risk&amp;rdquo;, Econometrica. 47 (2), 1979, p.263–91.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/643807435#ref_9_0">^&lt;/a>这是因为，历史经济数据所对应的社会环境，和当今社会是不同的。这就导致从微观层面看，过去人们在当年的环境下所形成的行为模式未必能和今天的行为模式对应上，在此基础上试图从过去的宏观数据中汇总规律来预测当今的宏观数据毫无意义。详见Lucas Robert, &amp;ldquo;Econometric Policy Evaluation: A Critique&amp;rdquo; . In Brunner, K.; Meltzer, A. (eds.). The Phillips Curve and Labor Markets. Carnegie-Rochester Conference Series on Public Policy. Vol. 1. New York: American Elsevier, 1976, p19–46.&lt;/li>
&lt;/ol></description></item><item><title>导论</title><link>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/01.%E5%AF%BC%E8%AE%BA/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/01.%E5%AF%BC%E8%AE%BA/</guid><description>&lt;h1 id="导论">导论&lt;/h1>
&lt;h2 id="一从新冠疫情说起">一、从新冠疫情说起&lt;/h2>
&lt;p>    2019年年底，新冠疫情最早在中国被发现，随后中国通过封城等一系列手段，将彼时传染性相对尚弱的初代毒株扼杀在了摇篮中。&lt;/p>
&lt;p>    如果故事就此结束，这只是人类现代文明史上并不是很特殊的一页。但就在中国基本控制本土疫情的时候，疫情却在欧美国家迎来了大爆发，让对欧美公共卫生体系充满信心的世界大跌眼镜。随着病毒在无法受控的世界不断内卷进化，传染性已经高得基本没有手段可以阻止其传播。最终，在付出了巨大的代价后，人类被迫接受和新冠病毒的“共存”。&lt;/p>
&lt;p>    新冠疫情是全人类的灾难，我在这里无意指责政治家的具体决策，而是希望从更深层次探讨导致这场灾难在全球大多数国家都无力阻止的原因。诚然，政治家应对疫情政策的短视、优柔寡断是造成疫情在本国蔓延无法阻止的直接原因，但究竟是怎样的现代政治运作逻辑，令这种无能为力的场面在西方国家一次次上演？&lt;/p>
&lt;p>    为了控制疫情的蔓延，纽约等地的政府在一段时期之内出台了强制封锁公共场合、打疫苗、戴口罩的行政命令。但这些强制性的命令在社会内激起了强烈的反抗：很多人都认为自己有进出公共场合、不打疫苗、不戴口罩的自由。这种激烈的反抗也导致了“激进”的防疫措施无法在欧美国家推行下去——尽管这些“激进”的措施可能才是防止病毒蔓延的唯一出路。于是最终，在追求自由的号召下，越来越多的人遭受到了疾病的伤害，失去了自由。&lt;/p>
&lt;p>    这么看来，难道追求自由还会导致侵害自由吗？这正是接下来要讨论的&lt;/p>
&lt;h2 id="二问题的根源自由定义的模糊性">二、问题的根源——“自由”定义的模糊性&lt;/h2>
&lt;p>    无论哪一种自由主义流派，对自由的认识都有一个共识：即无论是出于功利的角度，还是出于达成社会契约的目的，自由都是有范畴的：&lt;strong>当且仅当自己的自由没有侵犯他人的自由时，自由才应当是受保护的“真正的”自由&lt;/strong>。这一点在几乎所有的自由主义政治哲学著作中都有所强调。密尔的“群己权界”&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_1">[1]&lt;/a>、诺齐克的“持有正义”&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_2">[2]&lt;/a>等概念，都是这一共识的延申。正是基于这个共识（后文称为“范畴共识”），自由主义者的各种政治主张才有付诸实践的基础。&lt;/p>
&lt;p>    这个共识有一个容易被忽视的成立条件：为了解释何种情况下才是“侵犯他人的自由”，需要社会成员对自由有一个普遍认可的定义。这意味着，社会成员对于自由的定义，不应该有本质的分歧。&lt;/p>
&lt;p>    自启蒙运动以来，自由的定义问题从未成为过自由主义政治哲学所讨论的核心问题，这是因为在新冠疫情之前，围绕自由的定义所产生的争议从未引发过严重的灾难&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_3">[3]&lt;/a>，因而也就并不是哲学家需要格外关心的问题。在大多数情况下，人们需要面对的自由定义权问题和立法权的归属问题具有高度同一性，可以视作同一个问题：即将自由的定义权赋予立法机构，而立法机构是社会契约下经过了社会成员“普遍同意”的产物，授权国家机关对侵犯他人自由的社会成员施加惩罚。&lt;/p>
&lt;p>    但是，&lt;strong>经历了百年一遇的新冠疫情灾难，自由的定义问题，现在是时候应该重视起来了&lt;/strong>。 因为社会成员的“普遍同意”在此时无法实现了。尽管近代以来，全社会的普遍同意无法达成的情况在历史上比比皆是，但这一次，无法实现的普遍同意引发的效率低下，造成了西方国家的新冠疫情灾难。&lt;/p>
&lt;p>    传统的群己权界理论，将自由的边界划定为“不侵犯他人的自由”。这个定义借用了“侵犯”这个概念，也就造成了问题：究竟哪些行为属于“侵犯”、哪些不属于，传统理论很难做出一个圆满的回答。群己权界的提出者密尔自己的回答是：行动者仅需要考虑自己的行为对他人有无直接伤害，而不必关注间接影响&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_4">[4]&lt;/a>。但究竟如何判定“直接”、“间接”，密尔没有做进一步探讨。这就为整个社会对自由定义的撕裂留下了口子。&lt;/p>
&lt;p>（题外话，这和现今的科学哲学界对波普尔的证伪主义的批判有点相似。波普尔认为，评价一个理论科学与否的划界标准是该理论是否可被证伪。但“证伪”这个概念又该如何定义？法国天文学家布瓦尔计算出天王星的运动轨道不符合牛顿定律，能说他证伪了牛顿定律吗？事实是这是海王星运动干扰的结果。也正因为传统的证伪主义缺乏“证伪”的严格定义，当今学术界对于科学的划界问题进行讨论时，更多的是结合前沿的统计学、数据科学的原理，最后弄得科学哲学越来越不像是哲学的分支了……）&lt;/p>
&lt;p>    1968年，西班牙思想家桑塔亚纳（Santayana）曾对自由定义的模糊性会引发灾难做过一个的预言：他将自由区分为两种自由：生机自由（确定的自由）与虚空自由（未确定的自由），并指责当代自由主义过分强调人的虚空自由：后者认为不应限制任何未确定的可能性，进而将凡是妨碍“虚空自由”的制度全部冠以“专制”之名打倒，最终没有任何权威的存在带来的是社会的混乱无序&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_5">[5]&lt;/a>。&lt;/p>
&lt;p>    50多年后，经历了欧美新冠疫情的灾难，回看桑塔亚纳的这份预言，可谓是一语成谶。因为&lt;strong>恰恰就是围绕“政府为了防控疫情所采取的措施是否侵犯了神圣的自由”引发的争议，导致了整个社会的巨大撕裂&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>支持者认为，为了防控疫情所采取的封锁，是以一时的牺牲规避因感染传染病所带来的自由的损失，因此更多的是保障了自由；如果不打疫苗、不戴口罩，会导致其他人感染疾病的风险增加，侵犯了他人的自由，因而它们也就不是真正的自由。&lt;/li>
&lt;li>反对者则认为，与因感染传染病损失自由的风险相比，戴口罩、禁足、强制打疫苗是对自由更大的侵害，因而拒绝戴口罩、拒绝打疫苗、反抗封锁令，都是人与生俱来的自由权利，毫无疑问是真正的自由。&lt;/li>
&lt;/ul>
&lt;p>    “范畴共识”在这里遭到了破坏，整个社会因对自由定义的分歧，导致疫情防控措施大打折扣，最终造成了疫情在欧美国家的严重蔓延。&lt;/p>
&lt;h2 id="三解决之道自由的严格定义">三、解决之道——“自由”的严格定义&lt;/h2>
&lt;p>为了规避因自然语言的不严谨性造成的对“自由”概念的争议，首先一步是要对“自由”做一个尽量不依赖自然语言、尽量少借助其它概念的定义&lt;/p>
&lt;blockquote>
&lt;p>如无必要，勿增实体 ——奥卡姆剃刀&lt;/p>
&lt;/blockquote>
&lt;p>按照人类的本性，人们最向往的“自由”，毫无疑问是想做什么就做什么的自由。因此，这里先给自由一个最符合人性的自然语言定义：&lt;/p>
&lt;p>&lt;strong>自由，是指随心所欲实现自己愿望的可能性&lt;/strong>&lt;/p>
&lt;p>这就引申出了一个问题，难道杀人放火也在自由的范畴内吗？要知道群己权界的概念就是为了解决这个问题才诞生的&lt;/p>
&lt;p>是的，按照这个定义，杀人放火的自由确实也是自由。这里为了规避群己权界理论中因借用了“侵犯”的概念导致自由定义模糊的问题，姑且将杀人放火也纳入了自由的范围内。别急，如何处理侵犯自由的问题，我们放到后面再讨论&lt;/p>
&lt;p>到这里还没有结束，因为这个粗糙的定义仍然借助了不少其它概念：“随心所欲”、“实现愿望”、“可能性”，这都是需要进一步定义的概念&lt;/p>
&lt;p>为了衡量“随心所欲实现自己愿望的可能性”，我们假设存在一个可量化的“满足度”的概念，再将“自由”定义为“&lt;strong>愿望的满足度的数学期望&lt;/strong>”&lt;/p>
&lt;p>到此为止，我们会发现这个概念已经清晰多了：“数学期望”是有明确数学定义的概念，“愿望”是什么意思也不会有什么大的争议。接下来只要解决“满足度”的量化问题，就能彻底得出一个清晰的，没有因表意模糊引发争议的“自由”的定义了。&lt;/p>
&lt;p>这里首先介绍一个心理学领域的测量方法：二等分系统测量法。它能够将人的主观心理感受转化为定距变量。&lt;/p>
&lt;p>&lt;img src="https://pic3.zhimg.com/v2-57efd76f05263cc2cd1794c7a772b412_b.jpg" alt="">&lt;/p>
&lt;p>二等分系统图示&lt;/p>
&lt;p>二等分系统的量度化方法是给予受测者两个不同的物理刺激（x1，x2），让受测者产生两种对应的心理感受（y1，y2）。之后，在介于x1和x2之间不断变换不同强度的刺激，要求受测者凭主观感受确定一个x3的位置，使x3引发的刺激y3正好位于y1和y2的正中间。之后再在x1、x3和x3、x2之间不断重复这一步骤，最终建立一个心理反应值y和客观物理值x的函数关系。&lt;/p>
&lt;p>早在1875年，德国实验心理学家费希纳（Fechner）就总结了物理量与心理量之间的关系，他认为二者之间是一种对数关系，即$y=klog(x)$，该定律被称为“费希纳定理”。1968年，奥地利数学家普凡扎格（Pfanzagl）用公理化系统发展了二等分测量理论&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_6">[6]&lt;/a>。&lt;/p>
&lt;p>参照费希纳定理和二等分测量理论，我们可以将单独一个事件的满足度予以量化。那么下一个问题便是如何量化“愿望的满足度的数学期望”&lt;/p>
&lt;p>数学期望的概念众所周知：$ E(x)=\sum_{}^{}{}xP(x)$ ，其中P(x)为事件x的概率。在这里，P(x)代表愿望的满足度为x时的概率。&lt;/p>
&lt;p>假如某一行动者A只有两种愿望：吃和玩。这种情况下，假设吃一顿龙虾和玩一次ps4的满足度都是10，能成功吃到龙虾的概率为20%（考虑到龙虾的价格、龙虾店的距离、自己的时间空闲度等因素）、能成功玩到ps4的概率为30%（同样考虑各种因素）。那么此时A能够获得10满足度的概率 $P(x=10)=1-(1-0.2)\times(1-0.3)=0.44$ ，即A有44%的概率能够获得10满足度。用这种方法再计算出A获得其他满足度的概率，就能按照期望公式衡量出A的自由程度了。&lt;/p>
&lt;p>但是这还没有完。对A而言，吃半斤龙虾和吃一斤龙虾的满足度是不一样的，吃福岛龙虾和吃澳洲龙虾的满足度显然也是不一样的。因此一般情况下不存在一个固定的满足度能衡量“吃龙虾”这个愿望，必须将这个愿望不断精细化，但这个过程不是无限的（这也就是为什么前面引用的数学期望公式是离散的求和形式而不是连续的积分形式）。对于A而言，“在晚上6:30吃500克前天下午在悉尼捕捞上来的龙虾”和“在晚上6:35吃505克前天中午在墨尔本捕捞上来的龙虾”这两个事件的满足度是没有区别的。因此，理想情况下，应当将愿望细分到没有满足度的差异为止，用这些子类别一一计算满足度乘以概率，再予以加总，计算满足度的期望。&lt;/p>
&lt;p>但至此仍然没有结束。假如我们通过不断细分，识别出了A所有满足度对应的具体愿望，但同一个愿望对不同时候的A的满足度也是不同的。假如A正在减肥，但此时此刻龙虾的诱惑让A控制不住自己。那么现在吃龙虾这个事件，对此时的A的满足度是10，但是对第二天懊悔不已的A的满足度可能是-10。这种时候，就要考虑贴现的问题。假如控制不住诱惑的A只看重当下的满足，那么此刻的满足的权重可能达到0.9，未来的满足的权重只有0.1。此时，吃龙虾这个事件的对于A的满足度变成了 $10\times0.9+(-10)\times0.1=8$ 。在此基础上计算出的满足度，才可以用上面的步骤，真正用来衡量A的自由程度&lt;/p>
&lt;p>经过以上步骤，现在我们已经可以根据新的“自由”定义，&lt;strong>量化一个人的自由程度&lt;/strong>了&lt;/p>
&lt;p>这个定义很自然而然地会招致一种批评：这种量化的自由，现实中怎么可能算得出来？&lt;/p>
&lt;p>且不说会不会有人愿意配合测量，就算所有人都愿意测量，每个人都有那么多种愿望、每种愿望有那么多种细分的子类别、需要计算贴现的时间节点又那么多，并且最关键的是，某一事件发生的概率到底怎么计算？&lt;/p>
&lt;p>哪怕只是估算，一个人的自由程度恐怕也是难以在现实中量化的。&lt;/p>
&lt;p>是的，难以计算的缺陷是客观存在的。但是，&lt;strong>这个定义最大的价值不是计算，而是比较&lt;/strong>&lt;/p>
&lt;p>就像一个机器学习建立的模型，其中蕴含的变量可能数以万计。但面对A、B两个输入值，如果这1万个变量中有9999个变量都是一致的，只有一个正相关的变量值A&amp;gt;B，即使我们无法计算A和B具体的输出值，我们也可以肯定：A的输出值大于B。如果A和B是两个行动者，尽管我们没法精确计算A和B的自由程度，但依然可以通过比较A和B的部分变量，判断出A和B谁更自由。同样的，我们还可以比较出若发生了某个事件，未来的A和现在的A相比，自由程度会如何变化。这种比较，将在2、3章的数学模型部分得到很具体的体现。&lt;/p>
&lt;p>现在，我们可以回来讨论“杀人放火”的问题了&lt;/p>
&lt;p>如前所述，按照现在这个“自由”的定义，杀人放火的自由仍然在自由的范围内，但这不意味着鼓励为了追寻自由而杀人放火，因为杀人放火降低了其他人的自由值，即，杀人放火侵犯了他人的自由。&lt;/p>
&lt;p>可以看出，借用“自由”的定义，我们还可以为“侵犯”做一个新的定义：&lt;strong>只要降低了目标对象的自由值，都属于侵犯&lt;/strong>。杀人放火侵犯了其他人正常行动的自由；我站在这个空间里，实际上也侵犯了其他人站在这个空间的自由；哪怕你在旅行APP上订购了一张机票，也因为消耗了一张机票的库存，降低了其他人购得这张机票的概率，侵犯了其他人买这张机票的自由。只要有行为，就有侵犯，&lt;strong>侵犯无处不在&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>毛细血管式的权力无处不在 ——米歇尔·福柯&lt;/p>
&lt;/blockquote>
&lt;p>因此，为了保障社会成员整体的自由，我们需要做的，不是机械地识别哪一些具体行为属于“侵犯”、哪一些不属于，而是&lt;strong>衡量比较不同行为对社会成员自由的提升程度和降低程度&lt;/strong>。杀人放火仅仅有限地提升了自己的满足度，严重降低甚至消灭了其他人的自由；而订购机票对其他人自由的降低几乎可以忽略不计，但对自己满足度的提升是显著的，甚至还因为贡献了收入而提高了旅游从业者的满足度。如果禁止订购机票，对自由的侵犯远远大于它所保护的自由。因此杀人放火必须禁止，而订购机票是被允许的。&lt;/p>
&lt;p>至于衡量后具体方式的正当性划界标准，是功利主义式的将全社会自由进行加总比较，还是罗尔斯式的优先考虑最弱势群体的自由，这是另外一个话题，我们放到第4章再说。&lt;/p>
&lt;h2 id="四自由定义精确化的优势">四、“自由”定义精确化的优势&lt;/h2>
&lt;h3 id="1对行为的正义性进行更清晰的衡量">1、对行为的正义性进行更清晰的衡量&lt;/h3>
&lt;p>    传统政治哲学对自由的划界，造成的学术传统是将较多的精力集中在了分析“公权力”对自由的侵犯上，较少关注公权力之外其它权力相互之间对自由的侵犯。从知识社会学的角度看，这与启蒙思想的历史沿革有关：它的诞生与传承伴随着资本主义的逐利天性对公权力的反抗，而且在长期以来的人类文明史中，对资源的垄断往往也是由公权力完成的。&lt;/p>
&lt;p>    但如今，随着政治哲学理论的不断完善，对限制公权力的研究成果接近饱和。这些研究成果转化为宪法，使得公权力之外的其它权力得以摆脱桎梏、自由发展。&lt;strong>这些“私权力”对自由的侵犯是这个时代需要引起关注的新问题&lt;/strong>。罗尔斯在其代表作《正义论》中，曾论述过没有公权力的保护，保守宗教团体对信仰自由可能造成的危害&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_7">[7]&lt;/a>。在如今这个时代，油管、推特等具有垄断地位的社交媒体封锁某人的账号是不是正义的？传统的自由主义者可能会认为，私营公司封锁社交账号只是经营者对私产的处置，不涉及公权力，因而也就无所谓侵犯自由。但正如当代左翼政治哲学家哈特（Hardt)、内戈雷（Negri）所指出的那样：在如今这个全球化时代，具有垄断地位的跨国公司已经在自身依靠的公权力的庇护下，甚至能够超越传统民族国家的主权而行使令后者屈从的巨大权力&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_8">[8]&lt;/a>。&lt;/p>
&lt;p>    &lt;strong>与其花费时间去争论权力的类别属性，按权力的分类去判定行为的正义性，不如直接衡量权力对自由的侵犯程度&lt;/strong>。在油管、推特的例子中，由于二者是垄断地位的社交媒体平台，封锁某人的账号会令被封锁的人难以寻求其它替代品，对其自由的侵犯程度是较大的，以至于可以和公权力对自由的侵犯相比较。在民主化和信息化的时代，对资源的垄断越来越多地可以不以公权力的形式实现。将“自由”的定义严格化，更有利于厘清“侵犯自由”主体的本质。&lt;/p>
&lt;p>    如果将对社会自由的提升程度作为衡量文明的标准的话，我们甚至可以利用新的“自由”定义，对废除死刑等争议现象是否代表文明进行商榷。&lt;strong>衡量废除死刑是否是文明进步的标志，不是看有多少外国废除了死刑，而是比较废除死刑对社会成员自由的影响&lt;/strong>。至少在中国，大部分社会成员都承认死刑是高于终生监禁的最残酷的刑罚。这就意味着如果废除了死刑，会降低罪犯进行恶劣犯罪的期望成本，极大概率会导致恶性犯罪发生率的提高，进而降低大部分社会成员的自由。因此，如果以上推理成立，那么至少在当今中国，废除死刑反而才是文明倒退的表现。&lt;/p>
&lt;p>    类似地，在美国，LGBT、黑命贵等运动被过度政治正确化，出现了“黑美人鱼”、“伊丽莎黑女王”等严重影响观众观感的视听作品，甚至有人仅仅因为少数群体的身份就挤占了正常人的就业、升学机会，这同样也降低了大部分社会成员的自由。可见，虽然保护少数弱势群体的权益是提高社会自由、彰显文明进步的表现，但过度的政治正确，影响到了每个公民的正常生活，同样也可能降低社会成员的自由，变成文明倒退的标志。&lt;/p>
&lt;p>    老生常谈的“言论自由的边界在哪里的问题”，这里也可以提供解答思路：比较不同的言论对社会成员自由的降低程度。骂某人是傻X，可能仅仅降低了一个社会成员1单位的满足度（一个满足度为-1的事件发生率变成了100%）；但若开地图炮发表仇恨言论，可能会大范围降低很多社会成员的满足度，侵犯了很多人不想听到仇恨言论的自由。相比之下，后者的言论对社会自由的破坏是巨大的，应当予以禁止。&lt;/p>
&lt;p>可以看出，新的“自由”定义，&lt;strong>不仅规避了群己权界理论的缺陷，而且保留了它的价值&lt;/strong>：它仍然可以用来对社会行为进行划界&lt;/p>
&lt;h3 id="2更有效地解释人的行为">2、更有效地解释人的行为&lt;/h3>
&lt;p>    除此之外，这个定义还有一个优势：它令“自由”这个概念成为了一个保留了大量信息，可以解释几乎一切人类行为动机的工具变量，&lt;strong>避免了传统解释人类行为模型中自变量过多，导致“多重共线性”的问题&lt;/strong>。&lt;/p>
&lt;p>    统计学中，有一个概念叫做“多重共线性”，指的是一个模型中，自变量较多，有些自变量携带的信息相互重叠，导致模型额外设置了很多不必设置的自变量，使得模型因为自变量过多而学习了干扰信息。例如，某模型认为，人的某种行为受收入影响度为a、受职业类型影响度为b、受交际圈影响度为c。但实际上，一个人的职业类型、交际圈大概率本就和收入是相关的。这就意味着，该模型的三个自变量携带了重叠的信息，不需要这么多自变量也能够得到一个有效的模型，设置这么多自变量反而意味着模型太复杂，容易学习到噪声。&lt;/p>
&lt;p>    在统计学中，面对多重共线性，研究者可以采用岭回归、因子分析降维等多种方法。但若模型简单，直接简单粗暴地砍掉携带重叠信息的自变量，也能保留大部分信息，保障模型仍然具有足够的有效性。在刚刚的例子中，砍掉职业类型、交际圈这两个自变量，只用收入来解释行为，并不会对模型的拟合优度带来太大的损失。&lt;/p>
&lt;p>    在以往的政治哲学传统中，包括罗尔斯在内的学者，倾向于用多个变量解释人的行为，并将追寻自由视为其中一种变量&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_9">[9]&lt;/a>。在“有的人追求自由、有的人追求财富、有的人追求爱情等等”这个前提的基础上，得出“制度的设计只能用来保障自由，不能用来保障其它。追求财富或其它会牺牲自由”的结论，将自由和财富等其他追求视为两种对立的行为目标。&lt;/p>
&lt;p>&lt;strong>这，本质上是一种多重共线&lt;/strong>。追求财富、追求爱情，难道本质上不也是希望自由自在地实现自己的愿望吗？&lt;/p>
&lt;p>    套用我们新的“自由”定义，我们就会发现，追求财富和爱情，本质上就是追求自由的形式之一。财富的增加提高了实现高满足度愿望的概率，爱情的获取更是直接大幅提高了满足度。这些行为，无一例外不是在提高“愿望满足度的数学期望”。&lt;/p>
&lt;p>从这个定义中也可以看出，无论政治环境、社会环境如何，&lt;strong>发展经济本质上也是在提高自由&lt;/strong>。经济发展了，国民收入增加了，社会成员们就有资源去进行获得更高满足度的行为了。因此，我们大可不必将发展经济和追寻自由作为矛盾对立的两方面，得出“牺牲自由而发展经济”之类的论断。只要提高了社会成员满足度的期望值，就可以肯定地说，这就是提高自由的举措&lt;/p>
&lt;h2 id="五更多讨论">五、更多讨论&lt;/h2>
&lt;p>    至此，我们已经得出了一个相对严格、没有什么模糊歧义的新的“自由”定义。但问题到此仍然没有得到解决：自由的定义是有了，但按照这个定义去比较自由的比法和比较结论，可以保证全社会都统一吗？凭什么认为只要全社会都接受了这个定义，对于该不该强制打疫苗、戴口罩，就不会有分歧了？&lt;/p>
&lt;p>    是的，新的“自由”定义只能解决传统理论中自由定义模糊性引发的争议，但这已经是一种进步了。由于自然语言的模糊性，在传统的理论框架下，争论“疫情之下人们拒绝打疫苗、戴口罩的自由是否属于真正的自由，是否侵犯了他人的自由”是很难争论出具体的结果的。但只要先承认“自由是无处不在的，侵犯也是无处不在的”，之后抛弃价值观的分歧，客观比较打疫苗、戴口罩对社会成员自由的保障和侵犯程度，尽管不能完全解决分歧，但至少提高了沟通效率，更容易达成“普遍同意”。&lt;/p>
&lt;p>    更重要的是，&lt;strong>严格的定义，是数学建模的基础。而数学模型因为其严谨性，可以承担自然语言难以胜任的推理任务&lt;/strong>。在接下来的章节中，我将在新的“自由”定义的基础上，基于人追求自由的本性，建立一个模拟人的行为决策的数学模型，并用该模型推导出“&lt;strong>为了保障自由，在民智未开时可以适当加强权威&lt;/strong>”和“&lt;strong>随着民智的逐渐开化，权威应逐渐降低才能持续保障自由&lt;/strong>”这两个结论，以论证权威的合法性来源，以及面对无法消解的社会分歧时的态度。&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_1_0">^&lt;/a>John Stuart Mill, On Liberty, Harvard University, 1869, p25-27.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_2_0">^&lt;/a>Robert Nozick, Anarchy, State, and Utopia, Oxford: Blackwell, 1974, p151-153.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_3_0">^&lt;/a>当然，如果一定要深究的话，纳粹等极权主义带来的灾难可以追究到对卢梭“公意”（general will）定义的争论，阿伦特（1965）和施特劳斯（1962）对此有过很精彩的论述。但这个例子仅仅表现的是围绕卢梭一家之言的争议带来的灾难，而不是整个自由主义哲学无法回避的“自由定义模糊”问题引发的&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_4_0">^&lt;/a>John Stuart Mill, On Liberty, Harvard University, 1869, p26.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_5_0">^&lt;/a>George Santayana, Birth of Reason, New York: Columbia University Press, 1968, p.109&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_6_0">^&lt;/a>J. Pfanzagl, Theory of Measurement, Hoboken: Wiley, 1968&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_7_0">^&lt;/a>John Rawls, A Theory of Justice , Harvard University Press , 2005 , p211-212.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_8_0">^&lt;/a>Michael Hardt, Antonio Negri, Empire, Harvard University Press, 2001, p310.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/634485718#ref_9_0">^&lt;/a>参见罗尔斯对“自由权优先”的相关论述：John Rawls, A Theory of Justice , Harvard University Press , 2005 , p542-543.&lt;/li>
&lt;/ol></description></item><item><title>模型介绍</title><link>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/02.%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/02.%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D/</guid><description>&lt;h1 id="模型介绍">模型介绍&lt;/h1>
&lt;h2 id="0模型的基本元素">0、模型的基本元素&lt;/h2>
&lt;p>    在初级经济学中，用 $U_{A}=(p-c)x$ 来表示行动者A的收益，其中: x为A的投入，p为价格，c为单位投入成本&lt;/p>
&lt;p>若市场中有两个竞争者A和B，则A的收益可表示为 $U_{A}=(-a(x+y)+d)x-cx$ ，其中a、d均大于0，$ (-a(x+y)+d)$代表价格p，表明市场价格与A、B的总和投入量负相关。&lt;/p>
&lt;p>cx 可以与前面的部分合并同类项，即 $U_{A}=-a(x+y)x+(d-c)x$ 。为了简洁起见，可直接将 d-c 用一个常数项b表示，即 $U_{A}=(-a(x+y)+b)x$。由于现实中不可能出现 d&amp;lt;c 的情况（否则只要有投入就是亏本），因此此时仍然可以认为a、b均大于0&lt;/p>
&lt;p>$U_{A}=(-a(x+y)+b)x$，这个简洁的公式看似只能用来表示市场竞争，但现代经济学早已发展到可以将货币的价值尺度属性拓展到方方面面。在高级微观经济学中，“效用币值”（Money Metric Utility）的概念能让我们通过识别出满足相同级别效用的商品的参考价格，将经济学中的“效用”转化为货币单位&lt;a href="https://zhuanlan.zhihu.com/p/640962547#ref_1">[1]&lt;/a>；“微死亡”（Micromort）理论甚至能够允许将人的生命价值货币化，为保险业、医疗业乃至交通运输业的发展提供参考&lt;a href="https://zhuanlan.zhihu.com/p/640962547#ref_2">[2]&lt;/a>&lt;/p>
&lt;p>    经济学中可以将分析的变量用货币衡量，而根据第1章的“自由”定义，&lt;strong>自由同样可以作为衡量人的行为的投入产出的尺度&lt;/strong>，继而套用上面的公式。例如，某人为了能考取好学校（在未来因获得能力认可而获得更大的自由），选择牺牲娱乐时间强迫自己学习（将现在的自由作为资本投入进去），但若与此同时竞争对手们也在做同样的事（“市场”上有很多自由），显然对于最后收获的自由就会降低（概率下降导致满足度的数学期望降低。详见第1章）。在其他场景中，均可以将行动者的投入和收益，转化为用“自由”衡量&lt;/p>
&lt;p>    在经济学中，研究者可以通过模型考察技术、资本、劳务等生产要素对效用的影响。在这个政治哲学专栏中，我将通过模型考察权力、民智等政治要素对自由的影响&lt;/p>
&lt;h2 id="一不考虑权力和民智的情况">一、不考虑“权力”和“民智”的情况&lt;/h2>
&lt;p>（注：该部分是最初级的模型，与经济学中的“古诺模型”十分相似，具有相关知识基础的读者可跳过本节，直接从第二节“考虑‘权力’的情况”开始阅读）&lt;/p>
&lt;p>设博弈双方A和B的收益函数如下：&lt;/p>
&lt;p>$$
\begin{cases}
U_{A}=(-a(x+y)+b)x \&lt;br>
U_{B}=(-a(x+y)+b)y
\end{cases}
$$&lt;/p>
&lt;p>其中: x为以自由衡量的A的付出量，y为B的付出量，U为A和B获取的自由，a、b为大于0的常数&lt;/p>
&lt;p>A和B各自的收益最大化方案为：&lt;/p>
&lt;p>$$
\begin{cases}
\frac {\partial U_{A}} {\partial x} = -2ax-ay+b=0 \
\frac {\partial U_{B}} {\partial y} = -2ay-ax+b=0
\end{cases}
$$&lt;/p>
&lt;p>解得， $x=y=\frac{b}{3a}$，此时 $U_{A}=U_{B}=\frac{b^2}{9a}$&lt;/p>
&lt;p>若将行动者的收益和最优化策略用图像表示（以B为例），可将$U_{B}$表示为“收益曲面”，$ \frac{\partial U_{B}}{\partial y}=0$ 表示为“行动曲线”，如下图：&lt;/p>
&lt;p>&lt;img src="https://pic1.zhimg.com/v2-bb02ddaf72aaea32ccf72eda01004a60_b.jpg" alt="">&lt;/p>
&lt;p>蓝色曲面为B的收益曲面 $U_{B}$ ，红色曲线为B的行动曲线&lt;/p>
&lt;h2 id="二考虑权力的情况">二、考虑“权力”的情况&lt;/h2>
&lt;p>    通过前面的模型，我们已经了解到，最终决定A与B采用何种模型行动的，是各自的收益函数$ U_{A}$ 、$U_{B}$关于各自的行动变量 x 、 y 的偏导数为0的行动曲线的交点。&lt;/p>
&lt;p>    假如A握有足以影响B的行为的权力，那么对于占据优势权力地位的A而言，这个交点获得的收益往往并不是他所能获取到的最高收益。此时的A会想到，可以动用手中的权力，令B的行动曲线发生形变，使之与A的行动曲线的交点能令A获得更高的收益。&lt;/p>
&lt;p>    但这毫无疑问会侵犯B的自由，而根据第1章中的定义，侵犯自由会付出代价。即，若A动用权力，将会导致A的收益曲面整体向下平移。&lt;/p>
&lt;p>    此时一个问题摆在了A眼前：有没有一种可能，可以令改变B的行动曲线带来的收益增加，抵消掉收益曲面下降带来的收益减少？如果有，那毫无疑问A会施加自己的权力，侵犯B的自由。&lt;/p>
&lt;p>这正是接下来这个模型要讨论的&lt;/p>
&lt;h3 id="1如何形变">1、如何形变&lt;/h3>
&lt;p>假设A行使权力后，强令B的自由付出量为p（即y=p）&lt;/p>
&lt;p>现实中，博弈的两种行动者A和B不太可能知道彼此收益曲面的形状，因而A对B的行动曲线形变前后的形状是不存在预期的，A知道的只有形变之后，B的行动曲线与自己的行动曲线的交点处，y的取值为p。&lt;/p>
&lt;p>A期望B用y=p的行为模式行动，就会发出声明：如果B不按 y=p 行动，就会付出XXX的代价。对于B而言，这份声明意味着：对于A任意的行动x，所有令B的收益$ U_{B} &amp;gt; y, (y=p)$时的收益的y值，都将被打压。&lt;/p>
&lt;p>例如，A希望通过动用权力，令B的自由付出量为150（即p=150）。如果不动用权力的情况下的，存在 $x_{n}$ 使得$U_{B}(x=x_{n},y=160)&amp;gt;U_{B}(x=x_{n},y=150)$，则被A动用的权力，将会令 $U_{B}(x=x_{n},y=160)$ 下降至$ U_{B}(x=x_{n},y=150)$以下，其它情况下的U_{B}以此类推。最终的结果是，B的收益曲面将会被A的权力“削”掉一部分，如图所示：&lt;/p>
&lt;p>&lt;img src="https://pic3.zhimg.com/v2-144e4b0eb476e9cb206141c5c522d30a_b.jpg" alt="">&lt;/p>
&lt;p>B的收益曲面变化&lt;/p>
&lt;p>黄色的部分即是被A的权力削掉的部分，该部分的$ U_{B}$值被削至小于对同一x， y=150 时的$U_{B}$值。此时，在这个被权力形塑的新的收益曲面上， y=150 成为了B新的行动曲线，因为对于任何x，y=150 时的$U_{B}$值均大于y等于其他值时。&lt;/p>
&lt;p>（这里之所以不采用“y=150成为了新的偏导数为0的曲线”的说法，是因为权力的形塑极有可能是不平滑的，这会令U_{B}变得不可导，因而也就不会存在“偏导数为0”的概念）&lt;/p>
&lt;p>至于被削到了什么程度呢？由于侵犯B的自由越多，A付出的代价也会越大，因此A为了收益最大化，会尽可能少地侵犯B得自由。因此对于同一个水平的x，A需要将侵犯的自由控制在【恰好令y等于其他值时的$U_{B}$，微微小于 y=150时的$U_{B}$】，以刚刚好保证B会选择y=150的行动&lt;/p>
&lt;p>记此时两种$U_{B}$的差值为 o(x) 。在博弈场景中，行动者A通过和B多个回合的相互试探，会逐渐试探出一个削减量，令o(x)控制在一个极小的水平&lt;/p>
&lt;h3 id="2付出了什么代价">2、付出了什么代价&lt;/h3>
&lt;p>$U_{B}$介绍完了，那么作为权力的施加者，A的收益曲面 $U_{A}$又会有什么变化呢？&lt;/p>
&lt;p>$U_{A}$的变化意味着A施加权力的行为造成了代价，那么首先第一步就是要衡量A究竟是加了多大的权力&lt;/p>
&lt;p>这里采取的方式是&lt;strong>比较施加权力前后，被施加者B的收益的期望&lt;/strong>，即B的行动曲线在$U_{B}$上的第一类曲线积分÷B的行动曲线的长度（此处设为s），即$E[U_{B}]=\frac{\oint_{L}U_{B}{d}s}{s}$&lt;/p>
&lt;p>这种衡量权力的方式可能会招来两种替代方案的质疑：&lt;/p>
&lt;p>1、为什么不直接比较施加权力前后B的收益？即直接比较$ U_{B权力前}$ 和$ U_{B权力后}$？&lt;/p>
&lt;p>这是因为，这种比较方式属于事后解释，也就是要A和B的博弈行为完成之后，才能观测到 U_{B权力后} 。但**只要以指导人类的行为为目的，任何一门学科都不应只着眼于事后解释，而应服务于事前预测的目的**。政治哲学也是如此，它不应只在造成侵犯自由的后果后，才来判定行为的正义性，而应在行为发生之前，就对行为可能导致的后果进行预判。&lt;/p>
&lt;p>在这个模型中，虽然我们站在上帝视角，可以清晰地分析A、B实施权力前后的收益。但站在弱势的B的视角来看，在博弈进行之前，他不知道A的收益曲面、行动曲线是什么，不知道A会采取什么样的行动，他唯一知道的是A对自己发出了权力声明：如果自己不按A说的行动，就会付出代价。因此，B能做的，只有对A的权力影响之下的自己的收益做一个预期：A可能会怎么做？（A会令x等于几？）如果A这么做了我的收益会是什么样？这些预期的集合，就是自己收益的期望。&lt;/p>
&lt;p>2、为什么不直接比较施加权力前后B的行动曲线的顶点？非要用复杂的曲线积分？&lt;/p>
&lt;p>这种替代方案虽然没有局限于事后解释，但是从数据科学的角度来看，行动曲线的顶点并没有携带足够的信息量，可以严格按照第1章的定义，来代表B的自由（收益的期望）。尽管通常情况下，最大可能收益（即行动曲线顶点）降低幅度和平均收益降低幅度的确是相关的，甚至现实中直接比较弱势方的最大可能收益，大多数时候已经足够构成一个估计强势方权力大小的方法。但在理论角度，只要信息量没有被100%利用，就无法避免特殊反例的存在影响理论的成立。&lt;/p>
&lt;p>例如，如果本来B可以凭自己的付出不受干扰地获得51万元，但此时A动用了权力，宣称只有B为他打工要他满意，才能拿到这51万。尽管施加权力前后，B的最大可能收益都是51万，但施加权力前的可能性是100%，施加权力后变成了只有给A打工让其满意才可以。显然，尽管B的最大可能收益没有变，但A的权力毫无疑问影响了B的收益预期。&lt;/p>
&lt;p>这就是用曲线积分衡量收益预期这个方法的意义。&lt;/p>
&lt;p>我们回过头来，继续比较施加权力前后，B的收益期望&lt;/p>
&lt;p>首先计算权力施加前，$U_{B}$的期望。根据上一节，在未施加权力时，B的行动曲线为$ \frac{\partial U_{B权力前}}{\partial y}=-2ay-ax+b=0$&lt;/p>
&lt;p>得出 $x=-2y+\frac{b}{a}$ ，$U_{B权力前}=(-a(x+y)+b)y=ay^{2}$&lt;/p>
&lt;p>由$\begin{cases} x&amp;gt;0 \ y&amp;gt;0 \end{cases}$，得 $0&amp;lt;y&amp;lt;\frac{b}{2a}$&lt;/p>
&lt;p>综上，&lt;/p>
&lt;p>$$
\oint_{L}U_{B权力前}{d}s=\int_{0}^{\frac{b}{2a}}ay^{2}\cdot \sqrt{1+(\frac{dx}{dy})^{2}}dy= \sqrt{5}\int_{0}^{\frac{b}{2a}}ay^{2}dy=\frac{\sqrt{5}b^{3}}{24a^{2}}
$$&lt;/p>
&lt;p>$$
s=\int_{0}^{\frac{b}{2a}}\sqrt{1+(\frac{dx}{dy})^{2}}dy=\int_{0}^{\frac{b}{2a}}\sqrt{5}dy=\frac{\sqrt{5}b}{2a}
$$&lt;/p>
&lt;p>相除可得 $E[U_{B权力前}]=\frac{b^{2}}{12a}$&lt;/p>
&lt;p>接下来分析施加权力后的情况&lt;/p>
&lt;p>显而易见，B的行动曲线一定在上图中的黄色区域内，因为行动曲线的定位就是对于同一个x，此时的y对应的$U_{B}$高于其他的y对应的$U_{B}$，因而也必然高于或等于 y=p （上文中的例子为 y=150 ）时的$U_{B}$。故行动曲线一定在被A的权力所削的范围内&lt;/p>
&lt;p>根据前面的分析，此时的U_{B}较 y=p 时少了 o(x) 。故施加权力后，行动曲线所对应的 U_{B} 变成了：&lt;/p>
&lt;p>$U_{B权力后}=(-a(x+p)+b)p-o(x)$&lt;/p>
&lt;p>由于 o(x) 极小，可忽略，此时 $U_{B权力后}=(-a(x+p)+b)p$&lt;/p>
&lt;p>仿照前文的思路，可计算出：&lt;/p>
&lt;p>$$
\oint_{L}U_{B权力后}{d}s= \sqrt{5}\int_{0}^{\frac{b}{2a}}(2apy-ap^{2})dy=\sqrt{5}p(\frac{b^{2}}{4a}-\frac{bp}{2})
$$&lt;/p>
&lt;p>s不变，依旧是 $\frac{\sqrt{5}b}{2a}$&lt;/p>
&lt;p>相除可得 $E[U_{B权力后}]=\frac{bp}{2}-ap^{2}$&lt;/p>
&lt;p>权力前后的B的期望收益之差 $ E[U_{B权力前}]-E[U_{B权力后}]=\frac{b^{2}}{12a}-\frac{bp}{2}+ap^{2} $&lt;/p>
&lt;p>&lt;strong>这个数值，就可以作为A施加了多少权力的衡量标准&lt;/strong>&lt;/p>
&lt;p>A付出的代价，可以视为和A施加的权力线性相关的。记线性相关系数为k，即&lt;/p>
&lt;p>$A付出的成本=k(\frac{b^{2}}{12a}-\frac{bp}{2}+ap^{2})$&lt;/p>
&lt;p>施加权力后，A的收益曲面 U_{A} 整体便向下平移了该数值，如图所示&lt;/p>
&lt;p>&lt;img src="https://pic3.zhimg.com/v2-123b6e01a5bf3b8c3655ea724847930e_b.jpg" alt="">&lt;/p>
&lt;p>A的收益曲面变化&lt;/p>
&lt;p>显然，k的值越大，A侵犯B的自由所付出的代价越大。因此，&lt;strong>k可被视为B对A的权力制衡系数&lt;/strong>&lt;/p>
&lt;h3 id="3该如何行动">3、该如何行动&lt;/h3>
&lt;p>分析完了A行使权力的成本，下一步就是计算A的收益，以及在此基础上分析A的行动了&lt;/p>
&lt;p>行使权力之后，y的值被强行变成了p，同时A还付出了上述的代价。此时双方的收益为：&lt;/p>
&lt;p>$$
\begin{cases} U_{A权力后}=(-a(x+p)+b)x-k(\frac{b^{2}}{12a}-\frac{bp}{2}+ap^{2}) \ U_{B权力后}=(-a(x+p)+b)p \end{cases}
$$&lt;/p>
&lt;p>由于A是权力的施加者，x与p的取值都由A来决定，因此这里只需考虑A的收益。令 U_{A权力后} 对x和p的偏导数均为0，可解得令A收益最大化的解为：&lt;/p>
&lt;p>$$
\begin{cases} x=\frac{3bk}{2a(4k-1)} \ p=\frac{b(k-1)}{a(4k-1)} \end{cases}
$$&lt;/p>
&lt;p>若 k\leq1 ，此时 p\leq0 ，超出了定义域的范围。这意味着A的权力已经大到可以将 U_{B} 设置为0都不会付出太大的代价，即A可以随心所欲任意设置B的收益。这显然在A期望的范围之内。下面继续讨论 k&amp;gt;1 时的情况&lt;/p>
&lt;p>带入得出，A的收益最大化的情况下，双方的收益为&lt;/p>
&lt;p>$$
\begin{cases} U_{A权力后}=\frac{b^{2}k(7-k)}{12a(4k-1)} \ U_{B权力后}=\frac{3b^{2}k(k-1)}{2a(4k-1)^{2}} \end{cases}
$$&lt;/p>
&lt;p>A行使权力的目的就是为了获得相较于不行使权力时，更高的收益。根据第1节的分析， $U_{A}权力前=\frac{b^{2}}{9a}$&lt;/p>
&lt;p>将权力前后的 $U_{A}$相减，可得$\Delta U_{A}= U_{A权力后}-U_{A权力前}=-\frac{b^{2}(3k^{2}-5k-4)}{36a(4k-1)}$，此时A为了能让权力发挥作用，必须令 $\Delta U_{A}&amp;gt;0$ 。求解可得 1&amp;lt;k&amp;lt;2.26&lt;/p>
&lt;p>结合之前的分析，$k\leq1$依然在A的期望范围内。考虑到A付出的代价不可能为负，因而k不可能小于0。故得出结论：&lt;strong>当B对A的权力制衡系数k大于0但小于2.26时，由于B对A的权力没有足够的制衡，A将施加权力侵犯B的自由&lt;/strong>&lt;/p>
&lt;p>此时相较施加权力前，B被侵犯的自由 $\Delta U_{B}= U_{B权力后}-U_{B权力前}=-\frac{b^{2}(5k^{2}+11k+2)}{18a(4k-1)^{2}}$&lt;/p>
&lt;p>从这个表达式中也可以看出， $\Delta U_{B}$ 不可能大于0（因为a和k一定大于0，前面又多了个负号），也就是说弱势方B不可能在A的权力作用下获得更多的自由。这就意味着，在目前的假设条件下，**施加权力不可能是帕累托改进**&lt;/p>
&lt;p>那么有没有可能存在某种条件，可以令A出于自利的目的对B施加权力，可以引发帕累托改进？&lt;/p>
&lt;p>这正是接下来的第3章内容要讨论的&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/640962547#ref_1_0">^&lt;/a>具体可参考David Donaldson, Money metric utility: A harmless normalization, Journal of Economic Theory 46 (1988), p120-129.&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/640962547#ref_2_0">^&lt;/a>Howard, R. A. (1989). &amp;ldquo;Microrisks for Medical Decision Analysis&amp;rdquo;. International Journal of Technology Assessment in Health Care. 5 (3): 357–370.&lt;/li>
&lt;/ol></description></item><item><title>模型拓展</title><link>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/03.%E6%A8%A1%E5%9E%8B%E6%8B%93%E5%B1%95/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E8%87%AA%E7%94%B1%E5%93%B2%E5%AD%A6%E7%9A%84%E6%95%B0%E5%AD%A6%E5%8E%9F%E7%90%86/03.%E6%A8%A1%E5%9E%8B%E6%8B%93%E5%B1%95/</guid><description>&lt;h1 id="模型拓展">模型拓展&lt;/h1>
&lt;p>在上一章的结尾，我们已经通过数学的方式，证明了“&lt;strong>只要博弈双方都是理性的，那么权力的存在必然会损害弱势方的自由&lt;/strong>”这个结论。但现实中，不但非理性的情况比比皆是，博弈双方理性程度存在明显差距的情况也不罕见。本章就来讨论，一旦引入非理性因素，对自由又会造成什么样的结果，是否存在帕累托改进的可能。&lt;/p>
&lt;p>由于本章内容是上一章内容的延续拓展，因此本章章节标题序号衔接自上一章&lt;/p>
&lt;h2 id="三考虑民智的情况">三、考虑“民智”的情况&lt;/h2>
&lt;p>这里，我们假设弱势方B是非理性的（为了模型的简洁，这里不再假设A也是非理性的。事实上只要A的非理性程度远小于B，本章的数学结论依然成立，此处不再额外赘述），其对自己收益函数的观测存在误差，导致对 b 的观测有一定偏离。设偏离程度为 $b_{2}$ 。（同样为了模型的简洁，这里不再讨论对 a 偏离的情况。对 a 的偏离不影响本章的数学结论）&lt;/p>
&lt;p>现在我们有三种施加权力前的收益函数了：&lt;/p>
&lt;p>A的收益函数: $U_{A权力前}=(-a(x+y)+b)x$&lt;/p>
&lt;p>B观测到的自己的收益函数: $U_{B观权力前}=(-a(x+y)+(b+b_{2}))y$&lt;/p>
&lt;p>B实际的收益函数: $U_{B实权力前}=(-a(x+y)+b)y$&lt;/p>
&lt;p>仿照第一节的步骤（注意，此时指导B行为的收益函数要以 $U_{B观权力前}$ 为准），可以算出A施加权力前，均衡解为：&lt;/p>
&lt;p>$$
\begin{cases}
x=\frac{b-b_{2}}{3a} \
y=\frac{b+2b_{2}}{3a}
\end{cases}
$$&lt;/p>
&lt;p>&lt;img src="https://pic3.zhimg.com/v2-876701138d18316cbc373bfabb8f7836_b.jpg" alt="">&lt;/p>
&lt;p>上面的土黄色曲面为B观测到的自己的收益曲面，下面的蓝色曲面是B真正的收益曲面。红色的线为B的行动曲线&lt;/p>
&lt;p>设 $t=\frac{b_{2}}{b}$ ，**代表行动者B的“愚蠢程度”**&lt;/p>
&lt;h3 id="1t1的情况">1、t≤1的情况&lt;/h3>
&lt;p>可以看出，为了令x落在定义域之内，这里必须假设$ t\leq1$。若 t&amp;gt;1 ，意味着B已经蠢到了不需要A付出任何自由（即x到达定义域的边界：0），自己就会主动当韭菜贡献出大量自己的自由，此时A付出一丁点自由都是亏本。这种情况放到后面再讨论，这里先讨论 $t\leq1$的情况&lt;/p>
&lt;p>带入计算可得：&lt;/p>
&lt;p>$$
\begin{cases}
U_{A权力前}=\frac{(b-b_{2})^{2}}{9a} \
U_{B观权力前}=\frac{(b+2b_{2})^{2}}{9a} \
U_{B实权力前}=\frac{(b-b_{2})(b+2b_{2})}{9a}
\end{cases}
$$&lt;/p>
&lt;p>在现实中，弱势方对强势方的权力制衡，显然应与弱势方观测到的自己的收益期望相关，因此，A因权力制衡付出的成本应以$ U_{B观}$重新计算。解得&lt;/p>
&lt;p>$$
E[U_{B观权力前}]-E[U_{B观权力后}]=\frac{(b+b_{2})^{2}}{12a}-\frac{(b+b_{2})p}{2}+ap^{2}
$$&lt;/p>
&lt;p>此时，施加权力后的收益函数变成了这三种：&lt;/p>
&lt;p>$$
\begin{cases}
U_{A权力后}=(-a(x+p)+b)x-k(\frac{(b+b_{2})^{2}}{12a}-\frac{(b+b_{2})p}{2}+ap^{2})\
U_{B观权力后}=(-a(x+p)+(b+b_{2}))p \
U_{B实权力后}=(-a(x+p)+b)p
\end{cases}
$$&lt;/p>
&lt;p>仿照第二节的步骤，解得令权力施加者A的收益最大化的解为：&lt;/p>
&lt;p>$$
\begin{cases} x=\frac{(3b-b_{2})k}{2a(4k-1)} \ p=\frac{k(b+b{2})-b}{a(4k-1)} \end{cases}
$$&lt;/p>
&lt;p>假设分母大于0，即 $k&amp;gt;\frac{1}{4}$ 。由于此处已规定$ t\leq1$ ，因此$ (3b-b_{2})k$必大于等于0，不必担心x因小于0而落入定义域之外。但对于p，需额外假设$ k\geq\frac{1}{1+t}$ ，以保证 $p\geq0$&lt;/p>
&lt;p>（事实上，若$ k&amp;gt;\frac{1}{4}$的假设不满足，则帕累托改进是无解的，这个也很容易猜到：对权力的制衡越小，意味着强势方越能侵犯自由而不付出多大代价，小到一定程度就不可能令弱势方拥有多少自由；$t\leq1$ 时，若$k&amp;gt;\frac{1}{1+t}$的假设不满足，帕累托改进同样无解。这两部分详细的证明我会放在附录中，以备读者查验）。带入计算可得&lt;/p>
&lt;p>$$
\begin{cases}
U_{A权力后}=\frac{(7b^{2}-4bb_{2}+b_{2}^{2})k-(b+b_{2})^{2}k^{2}}{12a(4k-1)} \
U_{B观权力后}=\frac{(7b^{2}+10bb_{2}+3b_{2}^{2})k^{2}-(2b^{2}+9bb_{2}+3b_{2}^{2})k+2bb_{2}}{2a(4k-1)^{2}} \
U_{B实权力后}=\frac{(3b-b_{2})(bk+b_{2}k-b)k}{2a(4k-1)^{2}}
\end{cases}
$$&lt;/p>
&lt;p>下面，重点来了：&lt;/p>
&lt;p>和上一节一样，由于A需要保证施加权力的行为对自己造成了正向的收益，因此A必须令$ \Delta U_{A}&amp;gt;0$。此时的&lt;/p>
&lt;p>$\Delta U_{A}=U_{A权力后}-U_{A权力前}=\frac{-b^{2}[3(t+1)^2k^{2}+(13t^2-20t-5)k-4(t-1)^2]}{36a(4k-1)}$&lt;/p>
&lt;p>解得，若令$\Delta U_{A}&amp;gt;0$，则k需满足 $k&amp;lt;\frac{-13t^2+20t+5+\sqrt{(7t^2+4t+1)(31t^2-92t+73)}}{6(t+1)^2}$ ①&lt;/p>
&lt;p>如果要实现帕累托改进，则需要B的实际收益 $\Delta U_{B实}&amp;gt;0$。此时的$\Delta U_{B实}=U_{B实权力后}-U_{B实权力前}=\frac{b^{2}[(55t^2-14t-5)k^2-(32t^2-25t+11)k+4t^2-2t-2]}{18a(4k-1)^2}$&lt;/p>
&lt;p>解得，若令$\Delta U_{B实}&amp;gt;0$，则k需满足$k&amp;gt;\frac{32t^2-25t+11-3(3-t)(4t-1)}{2(55t^2-14t-5)}$ ②&lt;/p>
&lt;p>（注：此处略有跳步，事实上k仍有其它解集，但其它解集均不能令$k&amp;gt;\frac{1}{4}$ 且$ k&amp;gt;\frac{1}{1+t}$成立，故此处省略其它解集，仅保留②式）&lt;/p>
&lt;p>将①与②联立，求得当 t&amp;gt;0.57 时，①&amp;gt;②，k存在实数解。当 $t\leq0.57$ 时，由于B足够聪明，仅靠自己就可以赚得足够的实际收益，因而A施展权力的自私行为只会损害B的自由。但当 t&amp;gt;0.57 时，B的愚蠢已经不可忽视，&lt;strong>A出于自利目的强迫B反而可能导致B的收益比自己行动时更高，实现了帕累托改进&lt;/strong>。&lt;/p>
&lt;h3 id="21t3的情况">2、1&amp;lt;t≤3的情况&lt;/h3>
&lt;p>t&amp;gt;1 意味着权力前的均衡解 x&amp;lt;0 ，落在了定义域之外；t\leq3 意味着权力后的均衡解x仍落在定义域之内。此时权力前的最值解落在了定义域边缘，即x=0的位置。此时：&lt;/p>
&lt;p>$$
\begin{cases}
x=0 \
y=\frac{b+b_{2}}{2a}
\end{cases}
$$&lt;/p>
&lt;p>代入计算可得&lt;/p>
&lt;p>$$
\begin{cases}
U_{A权力前}=0 \
U_{B观权力前}=\frac{(b+b_{2})^{2}}{4a} \
U_{B实权力前}=\frac{(b^2-b_{2}^2)}{4a}
\end{cases}
$$&lt;/p>
&lt;p>权力后的三种收益函数较$ t\leq1$ 时不变。此时：&lt;/p>
&lt;p>$$
\Delta U_{A}=U_{A权力后}-U_{A权力前}=\frac{-b^{2}k[(t+1)^2k-(t^2-4t+7)]}{36a(4k-1)}
$$&lt;/p>
&lt;p>令$\Delta U_{A}&amp;gt;0$，解得 $k&amp;lt;\frac{t^2-4t+7}{(1+t)^2}$ ①&lt;/p>
&lt;p>$$
\Delta U_{B实}=U_{B实权力后}-U_{B实权力前}=\frac{b^{2}[(14t^2+4t-10)k^2-(8t^2-2t-2)k+t^2-1]}{4a(4k-1)^2}
$$&lt;/p>
&lt;p>解得，若令$\Delta U_{B实}&amp;gt;0$，则k需满足$k&amp;gt;\frac{8t^2-2t-2+3(3-t)\sqrt{2t^2-1}}{2(14t^2+4t-10)}$ ②&lt;/p>
&lt;p>联立①和②，解得，当 t&amp;lt;2.51 时，①&amp;gt;②，k存在实数解&lt;/p>
&lt;p>综上，当 $t\geq2.51$ 时，由于B过于愚蠢，收益太低，必须有极高的权力制衡系数k来增加B的收益，才可以令B权力之后的自由大过权力之前，但这势必将损害A的自由，导致A拒绝施展权力。但当 t&amp;lt;2.51 时，B已经不那么愚蠢，&lt;strong>B在权力之下弥补因自己的愚蠢造成的损失同时也会令A享受权力带来的额外收益，实现了帕累托改进&lt;/strong>。&lt;/p>
&lt;p>但到此为止还没完，由于需要令p落入定义域内，因此前文规定了$k&amp;gt;\frac{1}{1+t}$③&lt;/p>
&lt;p>联立①和③，解得，当 t&amp;lt;2 时，①&amp;gt;③，k存在实数解&lt;/p>
&lt;p>（$ k\leq\frac{1}{1+t}$的情况对本章结论无重要影响，我将放到附录再讨论）&lt;/p>
&lt;h3 id="3t3的情况">3、t＞3的情况&lt;/h3>
&lt;p>t&amp;gt;3 意味着权力之后的x仍然落在定义域之外，此时A最好的策略就是令x=0，&lt;strong>和权力前一模一样&lt;/strong>。这就是说B已经愚蠢到不需要A动用任何权力，就能令A不劳而获，且这种不劳而获就是最优的状态。这种情况显然不属于帕累托改进，因而无需过多讨论&lt;/p>
&lt;h3 id="4结论">4、结论&lt;/h3>
&lt;p>结合1、2、3节的结论，可以得出：&lt;strong>当B的“愚蠢程度”t满足 0.57&amp;lt;t&amp;lt;2 时，存在权力制衡系数k，使得A出于自利目的施展权力的行为同时也能令B获益，从而实现帕累托改进&lt;/strong>&lt;/p>
&lt;p>这条结论，可以为部分现实中的政治现象提供合法性支持&lt;/p>
&lt;p>例如，施加权力制止极端环保主义或恐怖主义的宣传流入民间，封禁他们的宣传路径，乃至在民众面前编造一些他们实际并未干过的恶行，是否正义？&lt;/p>
&lt;p>这种行为明面上看侵犯了民众的知情权，但若民众缺乏足够的判断力，受到了蛊惑后认可了这些宣传，他们反而会做一些最终看来会侵犯自己自由的行为。因而，动用权力来“侵犯”民众知情的自由，反而可能会更多地保护他们的自由&lt;/p>
&lt;h2 id="四考虑民智的进步的情况">四、考虑“民智的进步”的情况&lt;/h2>
&lt;p>如果本专栏仅仅到第三节为止，那么这个理论很有可能被专制主义利用，为专制的合法性作辩护：你看，既然民智未开的时候，对他们施加权力也能对他们有好处，那这种时候当然保持我的威权体制就好了。&lt;/p>
&lt;p>可现实真是如此吗？别忘了，在持续多回合的博弈后，民智是会在不断学习、总结经验中进步的，即B的“愚蠢程度”t会随着时间的推移变得越来越小。这种情况下，权力制衡系数k应当如何变化才更合理？&lt;/p>
&lt;p>在这里，我们采取一种罗尔斯主义的分析导向：&lt;strong>以最大化弱势方B的利益为目标&lt;/strong>，分析k应如何变化&lt;/p>
&lt;p>首先从B较为“愚蠢”的时间点开始分析，即t较大时。&lt;/p>
&lt;h3 id="11t2时">1、1&amp;lt;t&amp;lt;2时&lt;/h3>
&lt;p>根据上一节，此时 U_{B实权力后}（后文简写为U_{B}）=\frac{(3b-b_{2})(bk+b_{2}k-b)k}{2a(4k-1)^{2}}&lt;/p>
&lt;p>分别对k和t求偏导，可得&lt;/p>
&lt;p>$$
\begin{cases}
\frac{\partial U_{B}}{\partial t}=\frac{-b^2k[2k(t-1)-1]}{2a(4k-1)^2} \
\frac{\partial U_{B}}{\partial k}=\frac{b^2(t-3)[2k(t-1)-1]}{2a(4k-1)^3}
\end{cases}
$$&lt;/p>
&lt;p>令二者等于0，可求得 k^*=\frac{1}{2(t-1)} 。带入可求得此时 U_{B^*}=\frac{b^2}{8a}&lt;/p>
&lt;p>&lt;img src="https://pic4.zhimg.com/v2-27d4a0a7feeed279554894818bb6eaaf_b.jpg" alt="">&lt;/p>
&lt;p>UB、t、k关系图。蓝色曲线即为$k*=1/[2(t-1)]$&lt;/p>
&lt;p>显然，k&lt;em>与t成反比。若维持 $k^&lt;/em>=\frac{1}{2(t-1)}$ 的关系，需要在t减少时，k*增加。&lt;/p>
&lt;p>因此，只需要证明 $U_{B^*}$是极大值，就能得出结论：随着t的减少，维持B的最大利益的k*值越大&lt;/p>
&lt;p>通过求二阶偏导，可得海森矩阵：&lt;/p>
&lt;p>$$
H=\begin{pmatrix} \frac{b(3-t)[8k(t-1)+t-7]}{a(4k-1)^4}&amp;amp;\frac{b^2[4k(t-2)-1]}{2a(4k-1)^3}\ \frac{b^2[4k(t-2)-1]}{2a(4k-1)^3}&amp;amp;\frac{-b^2k^2}{a(4k-1)^2}\ \end{pmatrix}
$$&lt;/p>
&lt;p>其行列式&lt;/p>
&lt;p>$$
\left| H \right|=\frac{b^4[2k(t-1)-1][16k^2(t-3)-2k(3t-7)+1]}{4a^2(4k-1)^6}
$$&lt;/p>
&lt;p>不幸的是，将$k^*=\frac{1}{2(t-1)}$ 带入$ \left| H \right|$ ，得出$ \left| H \right|=0$ 。也就是说，我们无法通过传统的通过海森矩阵行列式判定$ U_{B^*}$ 是否是极大值&lt;/p>
&lt;p>但此时仍然有简便方法：只需证明“$ k^*=\frac{1}{2(t-1)}$上的点，若向不同方向变化，则无论什么方向， $U_{B}$均会降低”即可&lt;/p>
&lt;p>&lt;img src="https://pic4.zhimg.com/v2-82c92b23efad5c2d81c3ef2235761433_b.jpg" alt="">&lt;/p>
&lt;p>若曲线$k^*=\frac{1}{2(t-1)}$上的点M1欲向①方向移动（即t不变，k上升）。此时 $k&amp;gt;\frac{1}{2(t-1)}$ ，解得$ \frac{\partial U_{B}}{\partial k}&amp;lt;0$，即随着k的增加， $U_{B}$将降低。故①方向上$U_{B}$将减少&lt;/p>
&lt;p>若曲线$ k^*=\frac{1}{2(t-1)} $上的点M1欲向②方向移动（即t不变，k下降）。此时 $k&amp;lt;\frac{1}{2(t-1)}$，解得$ \frac{\partial U_{B}}{\partial k}&amp;gt;0 $ ，即随着k的降低， $U_{B}$ 将降低。故②方向上$U_{B}$将减少&lt;/p>
&lt;p>若曲线$k^*=\frac{1}{2(t-1)}$上的点M1欲向N点所在的③方向移动（即t、k均移动）。此时可过N点做一条铅垂线，与曲线交于M2点。通过重复以上步骤，可知N点的U_{B}必小于M2点。由于曲线上的$U_{B}\equiv\frac{b^2}{8a}$，M2点与M1点U_{B}值相同，故③方向上的$U_{B}$仍将减少&lt;/p>
&lt;p>综上，曲线$k^*=\frac{1}{2(t-1)}$是$U_{B}$的极大值线&lt;/p>
&lt;p>现在，我们可以得出结论：当 1&amp;lt;t&amp;lt;2 时随着t的减少，维持B的最大利益的k&lt;em>值越大。并且由于$ t\rightarrow1$ 时，$k^&lt;/em>=\frac{1}{2(t-1)}\rightarrow+\infty $，因此对于任意$ k_{0}$ ，必存在 k'&amp;gt;k_{0} ，使得随着t的持续降低， $ U_{B}(k=k')&amp;gt;U_{B}(k=k_{0}) $&lt;/p>
&lt;p>综上所述，当B的“愚蠢程度”t在 (1,2) 时，随着民智的开化，对强势者A的权力制衡越强，越能保护弱势者B的利益&lt;/p>
&lt;h3 id="2057t1时">2、0.57&amp;lt;t≤1时&lt;/h3>
&lt;p>由于$ t\leq1$ ，此时可轻易算出：&lt;/p>
&lt;p>$$
\begin{cases}
\frac{\partial U_{B}}{\partial t}&amp;gt;0 \
\frac{\partial U_{B}}{\partial k}&amp;gt;0
\end{cases}
$$&lt;/p>
&lt;p>故随着民智的开化（t越来越低），$U_{B}$将越来越低。此时唯有提高对A的权力制衡（即提高k），才能维持B的利益&lt;/p>
&lt;h3 id="3结论">3、结论&lt;/h3>
&lt;p>由于t在 $(0.57,1]\cup(1,2)$上的结论相同，且$U_{B}$在该区间内连续。故可以得出以下结论：&lt;/p>
&lt;p>尽管民智未开时，适度的权威有助于保障民众的自由。&lt;strong>但随着民智的逐渐开化，应逐渐降低权威，才能最大限度保障人民的自由&lt;/strong>&lt;/p>
&lt;p>这个模型的数学部分到此基本结束。显然，它还有很多不完美的地方：比如它和古诺模型中的“企业”概念一样，将“强势方”、“弱势方”视作了有统一集体行动的主体；比如它只分析了两方博弈的场景；比如它简单地假设民智是线性成长的，等等。它有创新的地方、也有明显的局限性，因而必须谨慎地看待它的价值。关于这个模型的价值、不完善的方面以及未来可能的发展方向，我将放在第4章进行统一讨论。&lt;/p></description></item><item><title>终端</title><link>https://justice.bj.cn/post/70.tool/console/</link><pubDate>Sat, 30 Sep 2023 18:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/70.tool/console/</guid><description>&lt;h1 id="终端">终端&lt;/h1>
&lt;h2 id="终端常用快捷键">终端常用快捷键&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>移到行首: ctrl + a&lt;/p>
&lt;/li>
&lt;li>
&lt;p>移到行尾: ctrl + e&lt;/p>
&lt;/li>
&lt;li>
&lt;p>向右移动一个字符: ctrl + f&lt;/p>
&lt;/li>
&lt;li>
&lt;p>向左移动一个字符: ctrl + b&lt;/p>
&lt;/li>
&lt;li>
&lt;p>向右移动一个单词: alt + -&amp;gt;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>向左移动一个字符: alt + &amp;lt;-&lt;/p>
&lt;/li>
&lt;li>
&lt;p>上翻记录: ctrl + p&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下翻记录: ctrl + n&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除字符: ctrl + d&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除光标到行首: ctrl + u&lt;/p>
&lt;/li>
&lt;li>
&lt;p>清除单词: ctrl + w&lt;/p>
&lt;/li>
&lt;li>
&lt;p>粘贴最后一次被删除的单词&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>索引处的解码字符串</title><link>https://justice.bj.cn/post/leetcode/880.%E7%B4%A2%E5%BC%95%E5%A4%84%E7%9A%84%E8%A7%A3%E7%A0%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Mon, 18 Sep 2023 17:34:04 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/880.%E7%B4%A2%E5%BC%95%E5%A4%84%E7%9A%84%E8%A7%A3%E7%A0%81%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>&lt;h1 id="索引处的解码字符串httpsleetcodecnproblemsdecoded-string-at-indexdescription-httpsleetcodecnproblemsdecoded-string-at-indexdescription">&lt;a href="https://leetcode.cn/problems/decoded-string-at-index/description/" title="https://leetcode.cn/problems/decoded-string-at-index/description/">索引处的解码字符串&lt;/a>&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Category&lt;/th>
&lt;th>Difficulty&lt;/th>
&lt;th>Likes&lt;/th>
&lt;th>Dislikes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>algorithms&lt;/td>
&lt;td>Medium (27.00%)&lt;/td>
&lt;td>181&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Tags&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/tag/segment-tree" title="https://leetcode.com/tag/segment-tree">&lt;code>segment-tree&lt;/code>&lt;/a> | &lt;a href="https://leetcode.com/tag/line-sweep" title="https://leetcode.com/tag/line-sweep">&lt;code>line-sweep&lt;/code>&lt;/a>&lt;/p>
&lt;p>&lt;strong>Companies&lt;/strong>&lt;/p>
&lt;p>&lt;code>Unknown&lt;/code>&lt;/p>
&lt;p>给定一个编码字符串 &lt;code>S&lt;/code>。请你找出 &lt;strong>解码字符串&lt;/strong> 并将其写入磁带。解码时，从编码字符串中 &lt;strong>每次读取一个字符&lt;/strong> ，并采取以下步骤：&lt;/p>
&lt;ul>
&lt;li>如果所读的字符是字母，则将该字母写在磁带上。&lt;/li>
&lt;li>如果所读的字符是数字（例如 &lt;code>d&lt;/code>），则整个当前磁带总共会被重复写 &lt;code>d-1&lt;/code> 次。&lt;/li>
&lt;/ul>
&lt;p>现在，对于给定的编码字符串 &lt;code>S&lt;/code> 和索引 &lt;code>K&lt;/code>，查找并返回解码字符串中的第 &lt;code>K&lt;/code> 个字母。&lt;/p>
&lt;p>&lt;strong>示例 1：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：S = &amp;#34;leet2code3&amp;#34;, K = 10
输出：&amp;#34;o&amp;#34;
解释：
解码后的字符串为 &amp;#34;leetleetcodeleetleetcodeleetleetcode&amp;#34;。
字符串中的第 10 个字母是 &amp;#34;o&amp;#34;。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 2：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：S = &amp;#34;ha22&amp;#34;, K = 5
输出：&amp;#34;h&amp;#34;
解释：
解码后的字符串为 &amp;#34;hahahaha&amp;#34;。第 5 个字母是 &amp;#34;h&amp;#34;。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>示例 3：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">输入：S = &amp;#34;a2345678999999999999999&amp;#34;, K = 1
输出：&amp;#34;a&amp;#34;
解释：
解码后的字符串为 &amp;#34;a&amp;#34; 重复 8301530446056247680 次。第 1 个字母是 &amp;#34;a&amp;#34;。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>2 &amp;lt;= S.length &amp;lt;= 100&lt;/code>&lt;/li>
&lt;li>&lt;code>S&lt;/code> 只包含小写字母与数字 &lt;code>2&lt;/code> 到 &lt;code>9&lt;/code> 。&lt;/li>
&lt;li>&lt;code>S&lt;/code> 以字母开头。&lt;/li>
&lt;li>&lt;code>1 &amp;lt;= K &amp;lt;= 10^9&lt;/code>&lt;/li>
&lt;li>题目保证 &lt;code>K&lt;/code> 小于或等于解码字符串的长度。&lt;/li>
&lt;li>解码后的字符串保证少于 &lt;code>2^63&lt;/code> 个字母。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://leetcode.cn/problems/decoded-string-at-index/comments/" title="https://leetcode.cn/problems/decoded-string-at-index/comments/">Discussion&lt;/a> | &lt;a href="https://leetcode.cn/problems/decoded-string-at-index/solution/" title="https://leetcode.cn/problems/decoded-string-at-index/solution/">Solution&lt;/a>&lt;/p>
&lt;h2 id="解法">解法&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="c1">// @lc code=start
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">impl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Solution&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// ## 解题思路
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 1. 编码字符串 &amp;#34;apple6&amp;#34;中的第24个元素和第4个元素相同,
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 即 k(24) % l(5);
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 2. 先正向遍历编码字符串,计算解码字符串有效长度`decode_len`, 长度只用计算到&amp;gt;=k时为止;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 3. 从有效长度的编码字符串下标开始, 逆序遍历待解码字符串, 反向更新解码字符串长度,
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 此时如果为重复数字, 可根据1中的原理, 缩小k % l;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sd">/// 4. 如果k % 解码字符串长度==0, 则当前字符为第k个字符;
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">pub&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">decode_at_index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>: &lt;span class="nb">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="nb">String&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sb&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">as_bytes&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decode_len&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//解码字符串的长度
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 正向遍历编码字符串,计算有效的解码字符串长度
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">mut&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">off&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">off&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sb&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">len&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sb&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">off&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">is_ascii_digit&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decode_len&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">b&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decode_len&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decode_len&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decode_len&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">char&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">off&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//逆序求取第k个解码字符
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sb&lt;/span>&lt;span class="p">[..&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">off&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">iter&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">rev&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">%=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decode_len&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">is_ascii_alphabetic&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">char&lt;/span>::&lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">is_ascii_digit&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">b&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">usize&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decode_len&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">decode_len&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c1">// @lc code=end
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>专题：二分查找</title><link>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Sun, 17 Sep 2023 09:23:03 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/%E4%B8%93%E9%A2%98/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>&lt;h1 id="专题二分查找">专题：二分查找&lt;/h1>
&lt;h2 id="简介">简介&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>二分查找法是一种高效的查找方法, 其拥有$log(n)$的时间复杂度.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>其前置条件只有一个:有序数组.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在处理有序数组时, 可以优先考虑二分法来降低时间复杂度&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="算法模板">算法模板&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="sd">/// 二分查找算法
&lt;/span>&lt;span class="sd">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">binary_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sorted_nums&lt;/span>: &lt;span class="nb">Vec&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">i32&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">target&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">usize&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="相关题目">相关题目&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>题目&lt;/th>
&lt;th>难度&lt;/th>
&lt;th>解题思路&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="../../4.%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0">4.两个有序数组的中位数&lt;/a>&lt;/td>
&lt;td>***&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../../33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84">33.搜索旋转排序数组&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../../69.x%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9">69.x 的平方根&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../../153.%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC">153.寻找旋转排序数组中的最小值&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../../300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97">300.最长递增子序列&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../../2594.%E4%BF%AE%E8%BD%A6%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4">2594.修车的最少时间&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="../../1818.%E7%BB%9D%E5%AF%B9%E5%B7%AE%E5%80%BC%E5%92%8C">1818.绝对差值和&lt;/a>&lt;/td>
&lt;td>**&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="参考">参考&lt;/h2></description></item></channel></rss>