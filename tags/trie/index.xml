<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>trie on Justice的小站</title><link>https://justice.bj.cn/tags/trie/</link><description>Recent content in trie on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 23 Oct 2021 20:27:22 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/trie/index.xml" rel="self" type="application/rss+xml"/><item><title>实现 Trie (前缀树)</title><link>https://justice.bj.cn/post/leetcode/doc/208.%E5%AE%9E%E7%8E%B0trie/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/208.%E5%AE%9E%E7%8E%B0trie/</guid><description>实现 Trie (前缀树) Category Difficulty Likes Dislikes algorithms Medium (64.69%) 210 - Tags design | trie Companies bloomberg | facebook | google | microsoft | twitter | uber 实现一个 Trie (前缀树)，包含 insert, search, 和 startsWith 这三个操作。 示例: 1 2 3 4 5 6 7 8 Trie trie =</description></item><item><title>添加与搜索单词 - 数据结构设计</title><link>https://justice.bj.cn/post/leetcode/doc/211.%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/211.%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid><description>添加与搜索单词 - 数据结构设计 Category Difficulty Likes Dislikes algorithms Medium (42.92%) 92 - Tags backtracking | design | trie Companies facebook 设计一个支持以下两种操作的数据结构： 1 2 void addWord(word) bool search(word) search(word) 可以搜索文字或正则表达式字符</description></item></channel></rss>