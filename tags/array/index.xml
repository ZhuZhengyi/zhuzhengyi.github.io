<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>array on Justice的小站</title><link>https://justice.bj.cn/tags/array/</link><description>Recent content in array on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 07 Jul 2023 21:53:58 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/array/index.xml" rel="self" type="application/rss+xml"/><item><title>搜索旋转排序数组</title><link>https://justice.bj.cn/post/leetcode/doc/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</link><pubDate>Fri, 07 Jul 2023 21:53:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</guid><description>搜索旋转排序数组 Category Difficulty Likes Dislikes algorithms Medium (42.99%) 1743 - Tags array | binary-search Companies bloomberg | facebook | linkedin | microsoft | uber 整数数组 nums 按升序排列，数组中的值 互不相同 。 在传递给函数之前，nums 在预先未知</description></item><item><title>子集</title><link>https://justice.bj.cn/post/leetcode/doc/78.%E5%AD%90%E9%9B%86/</link><pubDate>Thu, 06 Jul 2023 07:56:41 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/78.%E5%AD%90%E9%9B%86/</guid><description>子集 Category Difficulty Likes Dislikes algorithms Medium (80.45%) 1604 - Tags array | backtracking | bit-manipulation Companies amazon | bloomberg | facebook | uber 给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。 解集 不能 包含重</description></item><item><title>子集 II</title><link>https://justice.bj.cn/post/leetcode/doc/90.%E5%AD%90%E9%9B%86ii/</link><pubDate>Thu, 06 Jul 2023 07:56:41 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/90.%E5%AD%90%E9%9B%86ii/</guid><description>子集 II Category Difficulty Likes Dislikes algorithms Medium (63.44%) 811 - Tags array | backtracking Companies facebook 给你一个整数数组 nums ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。 解集 不能 包含重复的子集。</description></item><item><title>最小路径和</title><link>https://justice.bj.cn/post/leetcode/doc/64.%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/</link><pubDate>Sat, 13 May 2023 21:42:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/64.%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/</guid><description>最小路径和 Category Difficulty Likes Dislikes algorithms Medium (63.17%) 337 - Tags array | dynamic-programming Companies 给定一个包含非负整数的 m x n 网格，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。 **说</description></item><item><title>不同路径</title><link>https://justice.bj.cn/post/leetcode/doc/62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/</link><pubDate>Sat, 13 May 2023 20:58:13 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/</guid><description>不同路径 Category Difficulty Likes Dislikes algorithms Medium (66.84%) 1361 - Tags array | dynamic-programming Companies bloomberg 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向右</description></item><item><title>不同路径 II</title><link>https://justice.bj.cn/post/leetcode/doc/63.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84-ii/</link><pubDate>Sat, 13 May 2023 20:58:13 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/63.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84-ii/</guid><description>不同路径 II Category Difficulty Likes Dislikes algorithms Medium (39.93%) 766 - Tags array | dynamic-programming Companies bloomberg 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向</description></item><item><title>螺旋矩阵 II</title><link>https://justice.bj.cn/post/leetcode/doc/59.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5ii/</link><pubDate>Sat, 13 May 2023 13:57:48 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/59.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5ii/</guid><description>螺旋矩阵 II Category Difficulty Likes Dislikes algorithms Medium (76.50%) 696 - Tags array Companies Unknown 给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix 。 示例 1： 1</description></item><item><title>螺旋矩阵</title><link>https://justice.bj.cn/post/leetcode/doc/54.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</link><pubDate>Sat, 13 May 2023 13:48:07 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/54.%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</guid><description>螺旋矩阵 Category Difficulty Likes Dislikes algorithms Medium (48.67%) 1079 - Tags array Companies google | microsoft | uber 给你一个 m 行 n 列的矩阵 matrix ，请按照 顺时针螺旋顺序 ，返回矩阵中的所有元素。 示例 1： 1 2 输入：matri</description></item><item><title>合并区间</title><link>https://justice.bj.cn/post/leetcode/doc/56.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</link><pubDate>Sat, 13 May 2023 12:48:21 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/56.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</guid><description>合并区间 Category Difficulty Likes Dislikes algorithms Medium (49.30%) 1896 - Tags array | sort Companies bloomberg | facebook | google | linkedin | microsoft | twitter | yelp 以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，</description></item><item><title>插入区间</title><link>https://justice.bj.cn/post/leetcode/doc/57.%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4/</link><pubDate>Sat, 13 May 2023 12:48:21 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/57.%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4/</guid><description>插入区间 Category Difficulty Likes Dislikes algorithms Medium (41.90%) 704 - Tags array | sort Companies facebook | google | linkedin 给你一个 无重叠的 ，按照区间起始端点排序的区间列表。 在列表中插入一个新的区间，你需要确保列表中的</description></item><item><title>最大子序和</title><link>https://justice.bj.cn/post/leetcode/doc/53.%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C/</link><pubDate>Sun, 07 May 2023 18:53:12 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/53.%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C/</guid><description>最大子序和 Category Difficulty Likes Dislikes algorithms Easy (48.34%) 1430 - Tags array | divide-and-conquer | dynamic-programming Companies bloomberg | linkedin | microsoft 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大</description></item><item><title>旋转图像</title><link>https://justice.bj.cn/post/leetcode/doc/48.%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/</link><pubDate>Fri, 21 Apr 2023 17:05:07 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/48.%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/</guid><description>旋转图像 Category Difficulty Likes Dislikes algorithms Medium (74.04%) 1268 - Tags array Companies amazon | apple | microsoft 给定一个 n × n 的二维矩阵 matrix 表示一个图像。请你将图像顺时针旋转 90 度。 你必须在 原地 旋转图像，这意味着你</description></item><item><title>跳跃游戏 II</title><link>https://justice.bj.cn/post/leetcode/doc/45.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8Fii/</link><pubDate>Fri, 21 Apr 2023 17:05:07 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/45.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8Fii/</guid><description>跳跃游戏 II Category Difficulty Likes Dislikes algorithms Medium (43.11%) 1270 - Tags array | greedy Companies Unknown 给你一个非负整数数组 nums ，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度</description></item><item><title>接雨水</title><link>https://justice.bj.cn/post/leetcode/doc/42.%E6%8E%A5%E9%9B%A8%E6%B0%B4/</link><pubDate>Sat, 15 Apr 2023 14:21:10 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/42.%E6%8E%A5%E9%9B%A8%E6%B0%B4/</guid><description>接雨水 Category Difficulty Likes Dislikes algorithms Hard (58.97%) 2959 - Tags array | two-pointers | stack Companies amazon | apple | bloomberg | google | twitter | zenefits 给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接</description></item><item><title>缺失的第一个正数</title><link>https://justice.bj.cn/post/leetcode/doc/41.%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</link><pubDate>Wed, 12 Apr 2023 17:10:45 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/41.%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</guid><description>缺失的第一个正数 Category Difficulty Likes Dislikes algorithms Hard (42.50%) 1461 - Tags array Companies Unknown 给你一个未排序的整数数组 nums ，请你找出其中没有出现的最小的正整数。 请你实现时间复杂度为 O(n) 并且只使用常</description></item><item><title>在排序数组中查找元素的第一个和最后一个位置</title><link>https://justice.bj.cn/post/leetcode/doc/34.%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</link><pubDate>Wed, 05 Apr 2023 19:09:32 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/34.%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</guid><description>在排序数组中查找元素的第一个和最后一个位置 Category Difficulty Likes Dislikes algorithms Medium (42.36%) 2235 - Tags array | binary-search Companies linkedin 给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 targe</description></item><item><title>搜索插入位置</title><link>https://justice.bj.cn/post/leetcode/doc/35.%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</link><pubDate>Wed, 05 Apr 2023 19:09:32 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/35.%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</guid><description>搜索插入位置 Category Difficulty Likes Dislikes algorithms Easy (45.04%) 1970 - Tags array | binary-search Companies Unknown 给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将</description></item><item><title>最长等差数列</title><link>https://justice.bj.cn/post/leetcode/doc/1027.%E6%9C%80%E9%95%BF%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97/</link><pubDate>Mon, 27 Mar 2023 12:56:45 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/1027.%E6%9C%80%E9%95%BF%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97/</guid><description>最长等差数列 Category Difficulty Likes Dislikes algorithms Medium (44.08%) 223 - Tags array Companies Unknown 给你一个整数数组 nums，返回 nums 中最长等差子序列的长度。 回想一下，nums 的子序列是一个列表 nums[i1], nums[i2], ..., nums[ik] ，</description></item><item><title>下一个排列</title><link>https://justice.bj.cn/post/leetcode/doc/31.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</link><pubDate>Sun, 26 Mar 2023 16:40:54 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/31.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/</guid><description>下一个排列 Category Difficulty Likes Dislikes algorithms Medium (38.23%) 2117 - Tags array Companies google 整数数组的一个 排列 就是将其所有成员以序列或线性顺序排列。 例如，arr = [1,2,3] ，以下这些都可以视作 arr 的排列：[</description></item><item><title>最长连续序列</title><link>https://justice.bj.cn/post/leetcode/doc/128.%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</link><pubDate>Fri, 24 Mar 2023 20:03:34 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/128.%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</guid><description>最长连续序列 Category Difficulty Likes Dislikes algorithms Medium (55.14%) 1567 - Tags array | union-find Companies facebook | google 给定一个未排序的整数数组 nums ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。 请你</description></item></channel></rss>