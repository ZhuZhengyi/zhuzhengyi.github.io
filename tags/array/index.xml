<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>array on Justice的小站</title><link>https://justice.bj.cn/tags/array/</link><description>Recent content in array on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 30 Apr 2022 21:01:56 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/array/index.xml" rel="self" type="application/rss+xml"/><item><title>旋转图像</title><link>https://justice.bj.cn/post/leetcode/doc/48.%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/</link><pubDate>Sat, 30 Apr 2022 21:01:56 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/48.%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/</guid><description>旋转图像 Category Difficulty Likes Dislikes algorithms Medium (74.04%) 1268 - Tags array Companies amazon | apple | microsoft 给定一个 n × n 的二维矩阵 matrix 表示一个图像。请你将图像顺时针旋转 90 度。 你必须在 原地 旋转图像，这意味着你</description></item><item><title>寻找两个有序数组的中位数</title><link>https://justice.bj.cn/post/leetcode/doc/4.%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link><pubDate>Thu, 28 Apr 2022 09:42:17 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/4.%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid><description>寻找两个有序数组的中位数 Category Difficulty Likes Dislikes algorithms Hard (36.85%) 2222 - Tags array | binary-search | divide-and-conquer Companies adobe | apple | dropbox | google | microsoft | yahoo | zenefits 给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。 请你找出这两</description></item><item><title>买卖股票的最佳时机 II</title><link>https://justice.bj.cn/post/leetcode/doc/122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA-ii/</link><pubDate>Wed, 27 Apr 2022 18:50:41 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/122.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA-ii/</guid><description>买卖股票的最佳时机 II Category Difficulty Likes Dislikes algorithms Easy (57.53%) 613 - Tags array | greedy Companies bloomberg 给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。 设计一个算法来计算你所能获取的最大</description></item><item><title>子集 II</title><link>https://justice.bj.cn/post/leetcode/doc/90.%E5%AD%90%E9%9B%86ii/</link><pubDate>Wed, 27 Apr 2022 18:50:41 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/90.%E5%AD%90%E9%9B%86ii/</guid><description>子集 II Category Difficulty Likes Dislikes algorithms Medium (63.44%) 811 - Tags array | backtracking Companies facebook 给你一个整数数组 nums ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。 解集 不能 包含重复的子集。</description></item><item><title>组合总和 III</title><link>https://justice.bj.cn/post/leetcode/doc/216.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Ciii/</link><pubDate>Wed, 27 Apr 2022 18:50:41 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/216.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8Ciii/</guid><description>组合总和 III Category Difficulty Likes Dislikes algorithms Medium (72.79%) 461 - Tags array | backtracking Companies Unknown 找出所有相加之和为 n 的 k 个数的组合，且满足下列条件： 只使用数字1到9 每个数字 最多使用一次 返回 所有可能</description></item><item><title>组合总和</title><link>https://justice.bj.cn/post/leetcode/doc/39.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/</link><pubDate>Wed, 27 Apr 2022 17:06:06 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/39.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/</guid><description>组合总和 Category Difficulty Likes Dislikes algorithms Medium (72.75%) 1922 - Tags array | backtracking Companies snapchat | uber 给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有 不同组合 ，并以</description></item><item><title>组合总和 II</title><link>https://justice.bj.cn/post/leetcode/doc/40.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-ii/</link><pubDate>Wed, 27 Apr 2022 17:06:06 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/40.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C-ii/</guid><description>组合总和 II Category Difficulty Likes Dislikes algorithms Medium (62.12%) 737 - Tags array | backtracking Companies snapchat 给定一个数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。 candidates 中的每个数字在每个组合中只能使用</description></item><item><title>子集</title><link>https://justice.bj.cn/post/leetcode/doc/78.%E5%AD%90%E9%9B%86/</link><pubDate>Wed, 27 Apr 2022 14:43:08 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/78.%E5%AD%90%E9%9B%86/</guid><description>子集 Category Difficulty Likes Dislikes algorithms Medium (80.45%) 1604 - Tags array | backtracking | bit-manipulation Companies amazon | bloomberg | facebook | uber 给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。 解集 不能 包含重</description></item><item><title>轮转数组</title><link>https://justice.bj.cn/post/leetcode/doc/189.%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/</link><pubDate>Sun, 24 Apr 2022 22:41:20 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/189.%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/</guid><description>轮转数组 Category Difficulty Likes Dislikes algorithms Medium (44.34%) 1453 - Tags array Companies amazon | bloomberg | microsoft 给你一个数组，将数组中的元素向右轮转 k 个位置，其中 k 是非负数。 示例 1: 1 2 3 4 5 6 输入: nums = [1,2,3,4,5,6,7], k = 3</description></item><item><title>不同路径</title><link>https://justice.bj.cn/post/leetcode/doc/62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/</link><pubDate>Sun, 10 Apr 2022 16:43:03 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/</guid><description>不同路径 Category Difficulty Likes Dislikes algorithms Medium (66.84%) 1361 - Tags array | dynamic-programming Companies bloomberg 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向右</description></item><item><title>不同路径 II</title><link>https://justice.bj.cn/post/leetcode/doc/63.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84-ii/</link><pubDate>Sun, 10 Apr 2022 16:43:03 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/63.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84-ii/</guid><description>不同路径 II Category Difficulty Likes Dislikes algorithms Medium (39.93%) 766 - Tags array | dynamic-programming Companies bloomberg 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。 机器人每次只能向下或者向</description></item><item><title>三数之和</title><link>https://justice.bj.cn/post/leetcode/doc/15.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/15.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid><description>三数之和 Category Difficulty Likes Dislikes algorithms Medium (25.59%) 1827 - Tags array | two-pointers Companies adobe | amazon | bloomberg | facebook | microsoft 给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 *a，b，c ，*使得 *a + b</description></item><item><title>杨辉三角</title><link>https://justice.bj.cn/post/leetcode/doc/118.%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/118.%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/</guid><description>杨辉三角 Category Difficulty Likes Dislikes algorithms Easy (74.15%) 708 - Tags array Companies apple | twitter 给定一个非负整数 *numRows，*生成「杨辉三角」的前 numRows 行。 在「杨辉三角」中，每个数是它左上方和右上</description></item><item><title>盛最多水的容器</title><link>https://justice.bj.cn/post/leetcode/doc/11.%E7%9B%9B%E6%B0%B4%E6%9C%80%E5%A4%A7%E5%AE%B9%E5%99%A8/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/11.%E7%9B%9B%E6%B0%B4%E6%9C%80%E5%A4%A7%E5%AE%B9%E5%99%A8/</guid><description>盛最多水的容器 Category Difficulty Likes Dislikes algorithms Medium (61.40%) 1147 - Tags array | two-pointers Companies bloomberg 给定 n 个非负整数 a1，a2，&amp;hellip;，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条</description></item><item><title>种花问题</title><link>https://justice.bj.cn/post/leetcode/doc/605.%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/605.%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98/</guid><description>种花问题 Category Difficulty Likes Dislikes algorithms Easy (33.16%) 435 - Tags array Companies linkedin 假设有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花不能种植在相邻的地块上，它们会争夺水源，</description></item><item><title>环形数组是否存在循环</title><link>https://justice.bj.cn/post/leetcode/doc/457.%E7%8E%AF%E5%BD%A2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%BE%AA%E7%8E%AF/</link><pubDate>Sat, 22 Jan 2022 21:40:05 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/457.%E7%8E%AF%E5%BD%A2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%BE%AA%E7%8E%AF/</guid><description>环形数组是否存在循环 Category Difficulty Likes Dislikes algorithms Medium (43.55%) 174 - Tags array | two-pointers Companies Unknown 存在一个不含 0 的 环形 数组 nums ，每个 nums[i] 都表示位于下标 i 的角色应该向前或向后移动的下标个数： 如果</description></item><item><title>接雨水</title><link>https://justice.bj.cn/post/leetcode/doc/42.%E6%8E%A5%E9%9B%A8%E6%B0%B4/</link><pubDate>Wed, 19 Jan 2022 09:23:34 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/42.%E6%8E%A5%E9%9B%A8%E6%B0%B4/</guid><description>接雨水 Category Difficulty Likes Dislikes algorithms Hard (58.97%) 2959 - Tags array | two-pointers | stack Companies amazon | apple | bloomberg | google | twitter | zenefits 给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接</description></item><item><title>搜索旋转排序数组</title><link>https://justice.bj.cn/post/leetcode/doc/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</link><pubDate>Wed, 19 Jan 2022 09:23:34 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</guid><description>搜索旋转排序数组 Category Difficulty Likes Dislikes algorithms Medium (42.99%) 1743 - Tags array | binary-search Companies bloomberg | facebook | linkedin | microsoft | uber 整数数组 nums 按升序排列，数组中的值 互不相同 。 在传递给函数之前，nums 在预先未知</description></item><item><title>缺失的第一个正数</title><link>https://justice.bj.cn/post/leetcode/doc/41.%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</link><pubDate>Wed, 19 Jan 2022 09:23:34 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/41.%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</guid><description>缺失的第一个正数 Category Difficulty Likes Dislikes algorithms Hard (42.06%) 1315 - Tags array Companies Unknown 给你一个未排序的整数数组 nums ，请你找出其中没有出现的最小的正整数。 请你实现时间复杂度为 O(n) 并且只使用常</description></item><item><title>跳跃游戏</title><link>https://justice.bj.cn/post/leetcode/doc/55.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link><pubDate>Wed, 22 Dec 2021 10:04:41 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/55.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid><description>跳跃游戏 Category Difficulty Likes Dislikes algorithms Medium (38.11%) 469 - Tags array | greedy Companies microsoft 给定一个非负整数数组，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 判</description></item></channel></rss>