<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cloudnaive on Justice的小站</title><link>https://justice.bj.cn/tags/cloudnaive/</link><description>Recent content in cloudnaive on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 23 Oct 2021 12:50:07 +0000</lastBuildDate><atom:link href="https://justice.bj.cn/tags/cloudnaive/index.xml" rel="self" type="application/rss+xml"/><item><title>详解 Kubernetes Volume 的实现原理</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s-volume/</link><pubDate>Sat, 23 Oct 2021 12:50:07 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s-volume/</guid><description>详解 Kubernetes Volume 的实现原理 在 Kubernetes 集群中，虽然无状态的服务非常常见，但是在实际的生产中仍然会需要在集群中部署一些有状态的节点，比如一些存储中间件、消息队</description></item><item><title>Docker</title><link>https://justice.bj.cn/post/32.cloudnaive/docker%E7%AE%80%E4%BB%8B/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/docker%E7%AE%80%E4%BB%8B/</guid><description>Docker 简介 docker是一个开源的应用容器引擎，基于go语言开发并遵循了apache2.0协议开源。 docker可以让开发者打包他们的应用以及依</description></item><item><title>K8S Pod</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes-pod-%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes-pod-%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</guid><description>K8S Pod Pod、Service、Volume 和 Namespace 是 Kubernetes 集群中四大基本对象，它们能够表示系统中部署的应用、工作负载、网络和磁盘资源，共同定义了集群的</description></item><item><title>K8S-持久化容器存储</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes-csi%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96%E5%AE%B9%E5%99%A8%E5%AD%98%E5%82%A8/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes-csi%E7%9A%84%E6%8C%81%E4%B9%85%E5%8C%96%E5%AE%B9%E5%99%A8%E5%AD%98%E5%82%A8/</guid><description>K8S:持久化容器存储 ​《如何为容器提供持久化存储？》文章中我们已经介绍了Kubernetes存储系统的一些核心概念，其中包括： StorageClass (SC)：</description></item><item><title>K8S存储体系架构</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes-%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84%E5%8F%8A%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes-%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84%E5%8F%8A%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/</guid><description>K8S存储体系架构 引例： 在 Kubernetes 中挂载一个 Volume 如下图所示，左边的 YAML 模板定义了一个 StatefulSet 的一个应用，其中定义了一个名为 disk-pvc 的 volume，挂载到 Pod 内部的目</description></item><item><title>K8S存储原理</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/</guid><description>K8S存储原理 Kubernetes 默认情况下就提供了主流的存储卷接入方案，我们可以执行命令 kubectl explain pod.spec.volumes 查看到支持的各种存储卷，另外也提供了插件机制，允许其他类型的存</description></item><item><title>KNative</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/knative/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/knative/</guid><description>KNative 简介 Knative 是 Google 2018 年 在Google Cloud Next 2018 上发布的基于 Kubernetes 的 Serverless 解决方案，旨在标准化 Serverless，简化其学习成本。 其将重点放在三个关键组件上：</description></item><item><title>Kubernates</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/k8s/</guid><description>Kubernates 简介 Kubernetes（k8s）是自动化容器操作的开源平台，这些操作包括部署，调度和节点集群间扩展。如果你曾经用过Docker容器技术部</description></item><item><title>Kubernetes</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes/</guid><description>Kubernetes 简介 kubernetes(简称k8s)是google 2015年开源的一个容器编排方案，是google内部使用的大规模集群管理系统Borg的</description></item><item><title>Kubernetes Volume 的实现原理</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes-volume-%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes-volume-%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</guid><description>Kubernetes Volume 的实现原理 在 Kubernetes 集群中，虽然无状态的服务非常常见，但是在实际的生产中仍然会需要在集群中部署一些有状态的节点，比如一些存储中间件、消息队列等</description></item><item><title>kubernetes中informer机制基础设计原理</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes%E4%B8%ADinformer%E6%9C%BA%E5%88%B6/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes%E4%B8%ADinformer%E6%9C%BA%E5%88%B6/</guid><description>kubernetes中informer机制基础设计原理 kubernetes中的informer机制可能是实现集群控制模块的最核心的设计之一了</description></item><item><title>Istio</title><link>https://justice.bj.cn/post/32.cloudnaive/istio/</link><pubDate>Sat, 22 May 2021 19:36:24 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/istio/</guid><description>Istio 简介 Istio为希腊文，意思是“启航”，和“kubernetes（舵手）”遥相呼应，是一个开源的微服务管理、保护、监控的基础设施。Isti</description></item><item><title>Kubernetes网络模型</title><link>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</link><pubDate>Sat, 22 May 2021 19:36:24 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/k8s/kubernetes%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/</guid><description>Kubernetes网络模型 简介 Kubernetes 要求所有的网络插件实现必须满足如下要求： 所有的 Pod 可以与任何其他 Pod 直接通信，无需使用 NAT 映射（network address</description></item><item><title>Unikernel</title><link>https://justice.bj.cn/post/32.cloudnaive/unikernel/</link><pubDate>Sat, 22 May 2021 19:36:24 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/unikernel/</guid><description>Unikernel 简介 Unikernel 是专用的，单地址空间的，使用 library OS 构建出来的镜像。 Unikernel没有用户空间与内核空间之分，只有一个连续的地址空间。这样使得 Unikernel 中只</description></item><item><title>Helm</title><link>https://justice.bj.cn/post/32.cloudnaive/helm/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/helm/</guid><description>Helm 简介 Helm是 k8s 的一个管理工具，用来简化 k8s 应用的部署和管理，类似于 Ubuntu 中的 APT 或 CentOS 中的 YUM。Helm 提供以下能力： 创建新的 charts 将 charts 打包成 tgz 文</description></item><item><title>Rook</title><link>https://justice.bj.cn/post/32.cloudnaive/rook/</link><pubDate>Fri, 25 Dec 2020 10:57:29 +0000</pubDate><guid>https://justice.bj.cn/post/32.cloudnaive/rook/</guid><description>Rook 简介 架构 组件 Rook Volume Plugin：扩展了 K8S 的存储系统，使用 Kubelet 代理程序 Pod 可以挂载 Rook 管理的块设备和文件系统。 Rook Operator： 负责启动并监控整个</description></item></channel></rss>