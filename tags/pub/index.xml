<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pub on Justice的小站</title><link>https://justice.bj.cn/tags/pub/</link><description>Recent content in pub on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 07 Mar 2024 11:58:54 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/pub/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/3.%E5%A4%8D%E6%9D%82%E6%80%A7/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/3.%E5%A4%8D%E6%9D%82%E6%80%A7/</guid><description/></item><item><title/><link>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/4.%E6%B3%9B%E5%8C%96%E7%95%8C/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/4.%E6%B3%9B%E5%8C%96%E7%95%8C/</guid><description/></item><item><title/><link>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/5.%E7%A8%B3%E5%AE%9A%E6%80%A7/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/5.%E7%A8%B3%E5%AE%9A%E6%80%A7/</guid><description/></item><item><title/><link>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/6.%E4%B8%80%E8%87%B4%E6%80%A7/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/6.%E4%B8%80%E8%87%B4%E6%80%A7/</guid><description/></item><item><title/><link>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/7.%E6%94%B6%E6%95%9B%E7%8E%87/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/7.%E6%94%B6%E6%95%9B%E7%8E%87/</guid><description/></item><item><title/><link>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/8.%E9%81%97%E6%86%BE%E7%95%8C/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/8.%E9%81%97%E6%86%BE%E7%95%8C/</guid><description/></item><item><title>CPU异常</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/05-cpu-exceptions/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/05-cpu-exceptions/</guid><description>CPU异常 原文：https://os.phil-opp.com/cpu-exceptions/ 原作者：@phil-opp 译者：倪广野 触发CP</description></item><item><title>使用Rust编写操作系统（一）：独立式可执行程序</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/01-freestanding-rust-binary/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/01-freestanding-rust-binary/</guid><description>使用Rust编写操作系统（一）：独立式可执行程序 我们的第一步，是在不连接标准库的前提下，创建独立的Rust可执行文件。无需底层操作系统的支撑</description></item><item><title>使用Rust编写操作系统（七）：硬件中断</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/07-hardware-interrupts/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/07-hardware-interrupts/</guid><description>使用Rust编写操作系统（七）：硬件中断 在这一章中，我们将会学习如何设置可编程中断控制器（Programmable Interrupt Controller，P</description></item><item><title>使用Rust编写操作系统（三）：VGA字符模式</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/03-vga-text-mode/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/03-vga-text-mode/</guid><description>使用Rust编写操作系统（三）：VGA字符模式 VGA字符模式（VGA text mode）是打印字符到屏幕的一种简单方式。在这篇文章中，为了包装这个模</description></item><item><title>使用Rust编写操作系统（二）：最小化内核</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/02-minimal-rust-kernel/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/02-minimal-rust-kernel/</guid><description>使用Rust编写操作系统（二）：最小化内核 这篇文章将基于x86架构（the x86 architecture）；我们是试着使用Rust语言，编写一个</description></item><item><title>使用Rust编写操作系统（四）：内核测试</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/04-testing/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/04-testing/</guid><description>使用Rust编写操作系统（四）：内核测试 本文主要讲述了在no_std环境下进行单元测试和集成测试的方法。我们将通过Rust的自定义测试框架来</description></item><item><title>使用Rust编写操作系统（附录一）：链接器参数</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-a-linker-arguments/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-a-linker-arguments/</guid><description>使用Rust编写操作系统（附录一）：链接器参数 用Rust编写操作系统时，我们可能遇到一些链接器错误。这篇文章中，我们不将更换编译目标，而传送</description></item><item><title>使用Rust编写操作系统（附录三）：禁用SIMD</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-c-disable-simd/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-c-disable-simd/</guid><description>使用Rust编写操作系统（附录三）：禁用SIMD 单指令多数据流（Single Instruction Multiple Data，SIMD）指令能够同时对多个数据字（data wor</description></item><item><title>使用Rust编写操作系统（附录二）：禁用红区</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-b-red-zone/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/appendix-b-red-zone/</guid><description>使用Rust编写操作系统（附录二）：禁用红区 红区（redzone）是System V ABI提供的一种优化的产物，它允许函数无需调整栈指针（st</description></item><item><title>双重异常</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/06-double-fault-exceptions/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/06-double-fault-exceptions/</guid><description>双重异常 原文：https://os.phil-opp.com/double-fault-exceptions/ 原作者：@phil-opp 译者</description></item><item><title>第0章：序言</title><link>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/0.%E5%BA%8F%E8%A8%80/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/0.%E5%BA%8F%E8%A8%80/</guid><description>第0章：序言 Edit: Hao ZHAN 1.关于《机器学习理论导引》 近年来，机器学习备受关注，机器学习的相关课程与教材可谓汗牛充栋。就国内教材而言，周志华的**《</description></item><item><title>第1章：预备知识</title><link>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/1.%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/1.%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/</guid><description>第1章：预备知识 Edit: J. Hu, 李一飞, 赵志民 强大数定律表明：在样本数量足够多时，样本均值以概率1收敛于总体的期望值。集中不等式主要量化地研究随机变量</description></item><item><title>译名表</title><link>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/translation-table/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/writing-an-os-in-rust/translation-table/</guid><description>译名表 收录书中涉及专有名词的英文单词、短语，给出本书的中文译名。 采纳惯用译名为主。没有合适译名的，尽量做到信、达、雅的前提下，给出新翻译。 英</description></item><item><title>钥匙书KeyBook</title><link>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/2.%E5%8F%AF%E5%AD%A6%E6%80%A7/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/09.pub/%E9%92%A5%E5%8C%99%E4%B9%A6keybook/2.%E5%8F%AF%E5%AD%A6%E6%80%A7/</guid><description>钥匙书KeyBook 第0章 序言 第1章 预备知识 第2章 可学性 1.【证明补充】经验误差的期望等于其泛化误差 2.【概念补充】假设空间的可分与不可分 3</description></item></channel></rss>