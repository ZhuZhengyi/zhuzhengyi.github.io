<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>math on Justice的小站</title><link>https://justice.bj.cn/tags/math/</link><description>Recent content in math on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 02 May 2022 14:53:34 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/math/index.xml" rel="self" type="application/rss+xml"/><item><title>有效数字</title><link>https://justice.bj.cn/post/leetcode/doc/65.%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97/</link><pubDate>Mon, 02 May 2022 14:53:34 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/65.%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97/</guid><description>有效数字 Category Difficulty Likes Dislikes algorithms Hard (27.34%) 310 - Tags math | string Companies linkedin 有效数字（按顺序）可以分成以下几个部分： 一个 小数 或者 整数 （可选）一个 'e' 或 'E' ，后面跟着一个 整数 小数（按顺</description></item><item><title>Pow(x, n)</title><link>https://justice.bj.cn/post/leetcode/doc/50.pow/</link><pubDate>Sun, 01 May 2022 18:25:57 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/50.pow/</guid><description>Pow(x, n) Category Difficulty Likes Dislikes algorithms Medium (37.83%) 944 - Tags math | binary-search Companies bloomberg | facebook | google | linkedin 实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn ）。 示例 1： 1 2 输入：x = 2.00000, n = 10 输出：1024.00</description></item><item><title>排列序列</title><link>https://justice.bj.cn/post/leetcode/doc/60.%E6%8E%92%E5%88%97%E5%BA%8F%E5%88%97/</link><pubDate>Wed, 27 Apr 2022 10:48:27 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/60.%E6%8E%92%E5%88%97%E5%BA%8F%E5%88%97/</guid><description>排列序列 Category Difficulty Likes Dislikes algorithms Hard (52.96%) 659 - Tags math | backtracking Companies twitter 给出集合 [1,2,3,...,n]，其所有元素共有 n! 种排列。 按大小顺序列出所有排列情况，并一一标记，当</description></item><item><title>字符串相乘</title><link>https://justice.bj.cn/post/leetcode/doc/43.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/</link><pubDate>Fri, 25 Feb 2022 11:34:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/43.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/</guid><description>字符串相乘 Category Difficulty Likes Dislikes algorithms Medium (44.98%) 838 - Tags math | string Companies facebook | twitter 给定两个以字符串形式表示的非负整数 num1 和 num2，返回 num1 和 num2 的乘积，它们的乘积也表示为字符串形式。</description></item><item><title>回文数</title><link>https://justice.bj.cn/post/leetcode/doc/9.%E5%9B%9E%E6%96%87%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/9.%E5%9B%9E%E6%96%87%E6%95%B0/</guid><description>回文数 Category Difficulty Likes Dislikes algorithms Easy (57.09%) 946 - Tags math Companies Unknown 判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。 示例 1: 1 2 输入: 121 输</description></item><item><title>字符串转换整数 (atoi)</title><link>https://justice.bj.cn/post/leetcode/doc/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</guid><description>字符串转换整数 (atoi) Category Difficulty Likes Dislikes algorithms Medium (19.14%) 561 - Tags math | string Companies amazon | bloomberg | microsoft | uber 请你来实现一个 atoi 函数，使其能将字符串转换成整数。 首先，该函数会根据需要丢弃无用的开</description></item><item><title>字符串转换整数 (atoi)</title><link>https://justice.bj.cn/post/leetcode/doc/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</guid><description>字符串转换整数 (atoi) Category Difficulty Likes Dislikes algorithms Medium (19.14%) 561 - Tags math | string Companies amazon | bloomberg | microsoft | uber 请你来实现一个 atoi 函数，使其能将字符串转换成整数。 首先，该函数会根据需要丢弃无用的开</description></item><item><title>完美数</title><link>https://justice.bj.cn/post/leetcode/doc/507.%E5%AE%8C%E7%BE%8E%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/507.%E5%AE%8C%E7%BE%8E%E6%95%B0/</guid><description>完美数 Category Difficulty Likes Dislikes algorithms Easy (37.67%) 51 - Tags math Companies Unknown 对于一个 正整数，如果它和除了它自身以外的所有正因子之和相等，我们称它为“完美数”。 给定一个 整数n， 如果他是完</description></item><item><title>整数反转</title><link>https://justice.bj.cn/post/leetcode/doc/7.%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/7.%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</guid><description>整数反转 Category Difficulty Likes Dislikes algorithms Easy (33.66%) 1720 - Tags math Companies apple | bloomberg 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。 示例 1: 1 2 输入: 123 输出: 321 ** 示例 2:** 1</description></item></channel></rss>