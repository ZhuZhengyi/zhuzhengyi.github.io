<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linked-list on Justice的小站</title><link>https://justice.bj.cn/tags/linked-list/</link><description>Recent content in linked-list on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 22 Mar 2023 20:21:16 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/linked-list/index.xml" rel="self" type="application/rss+xml"/><item><title>排序链表</title><link>https://justice.bj.cn/post/leetcode/doc/148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Wed, 22 Mar 2023 20:21:16 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>排序链表 Category Difficulty Likes Dislikes algorithms Medium (65.90%) 1948 - Tags linked-list | sort Companies Unknown 给你链表的头结点 head ，请将其按 升序 排列并返回 排序后的链表 。 示例 1： 1 2 输入：head = [4,2,1,3] 输出：[1,2,</description></item><item><title>移除链表元素</title><link>https://justice.bj.cn/post/leetcode/doc/203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/</link><pubDate>Wed, 22 Mar 2023 17:12:00 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/203.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/</guid><description>移除链表元素 Category Difficulty Likes Dislikes algorithms Easy (54.76%) 1199 - Tags linked-list Companies Unknown 给你一个链表的头节点 head 和一个整数 val ，请你删除链表中所有满足 Node.val == val 的节点，并返回 新的头节点 。 示例 1： 1 2</description></item><item><title>有序链表转换二叉搜索树</title><link>https://justice.bj.cn/post/leetcode/doc/109.%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link><pubDate>Sun, 01 May 2022 21:13:29 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/109.%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid><description>有序链表转换二叉搜索树 Category Difficulty Likes Dislikes algorithms Medium (76.22%) 659 - Tags linked-list | depth-first-search Companies zenefits 给定一个单链表，其中的元素按升序排序，将其转换为高度平衡的二叉搜索树。 本题中，一个高度平</description></item><item><title>环形链表</title><link>https://justice.bj.cn/post/leetcode/doc/141.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 01 May 2022 10:53:18 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/141.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</guid><description>环形链表 Category Difficulty Likes Dislikes algorithms Easy (51.39%) 1476 - Tags linked-list | two-pointers Companies amazon | bloomberg | microsoft | yahoo 给你一个链表的头节点 head ，判断链表中是否有环。 如果链表中有某个节点，可以通过连续跟踪 next 指针再</description></item><item><title>回文链表</title><link>https://justice.bj.cn/post/leetcode/doc/234.%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</link><pubDate>Sun, 01 May 2022 10:38:59 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/234.%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8/</guid><description>回文链表 Category Difficulty Likes Dislikes algorithms Easy (51.35%) 1365 - Tags linked-list | two-pointers Companies amazon | facebook 给你一个单链表的头节点 head ，请你判断该链表是否为回文链表。如果是，返回 true ；否则，返回 false 。 示例 1： 1 2</description></item><item><title>重排链表</title><link>https://justice.bj.cn/post/leetcode/doc/143.%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/143.%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/</guid><description>重排链表 Category Difficulty Likes Dislikes algorithms Medium (54.54%) 158 - Tags linked-list Companies Unknown 给定一个单链表 L：L0→L1→…→L**n-1→Ln ， 将其重新排列后变为： L0→L**n→L1→L**n-</description></item><item><title>删除链表中的节点</title><link>https://justice.bj.cn/post/leetcode/doc/237.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link><pubDate>Tue, 25 Jan 2022 09:54:18 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/237.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid><description>删除链表中的节点 Category Difficulty Likes Dislikes algorithms Easy (85.71%) 1086 - Tags linked-list Companies adobe | apple | microsoft 请编写一个函数，用于 删除单链表中某个特定节点 。在设计函数时需要注意，你无法访问链表的头节点</description></item><item><title>两两交换链表中的节点</title><link>https://justice.bj.cn/post/leetcode/doc/24.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/24.%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid><description>两两交换链表中的节点 Category Difficulty Likes Dislikes algorithms Medium (63.29%) 359 - Tags linked-list Companies bloomberg | microsoft | uber 给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。 你不能只是单纯的改变节点内部</description></item><item><title>分隔链表</title><link>https://justice.bj.cn/post/leetcode/doc/86.%E5%88%86%E5%89%B2%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/86.%E5%88%86%E5%89%B2%E9%93%BE%E8%A1%A8/</guid><description>分隔链表 Category Difficulty Likes Dislikes algorithms Medium (55.90%) 158 - Tags linked-list | two-pointers Companies Unknown 给定一个链表和一个特定值* x*，对链表进行分隔，使得所有小于 *x* 的节点都在大于或等于 *x* 的节点之前。 你应当</description></item><item><title>删除排序链表中的重复元素</title><link>https://justice.bj.cn/post/leetcode/doc/83.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0i/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/83.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0i/</guid><description>删除排序链表中的重复元素 Category Difficulty Likes Dislikes algorithms Easy (49.10%) 260 - Tags linked-list Companies Unknown 给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。 示例 1: 1 2 输入: 1-&amp;gt;1-&amp;gt;2 输出: 1-&amp;gt;2 示</description></item><item><title>删除排序链表中的重复元素 II</title><link>https://justice.bj.cn/post/leetcode/doc/82.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E8%8A%82%E7%82%B9ii/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/82.%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E8%8A%82%E7%82%B9ii/</guid><description>删除排序链表中的重复元素 II Category Difficulty Likes Dislikes algorithms Medium (45.93%) 221 - Tags linked-list Companies Unknown 给定一个排序链表，删除所有含有重复数字的节点，只保留原始链表中 *没有重复出现 *的数字。 示</description></item><item><title>反转链表</title><link>https://justice.bj.cn/post/leetcode/doc/206.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/206.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid><description>反转链表 Category Difficulty Likes Dislikes algorithms Easy (65.94%) 758 - Tags linked-list Companies adobe | amazon | apple | bloomberg | facebook | microsoft | snapchat | twitter | uber | yahoo | yelp | zenefits 反转一个单链表。 示例: 1 2 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL 输出: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL 进阶: 你可以迭代或递</description></item><item><title>反转链表 II</title><link>https://justice.bj.cn/post/leetcode/doc/92.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8ii/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/92.%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8ii/</guid><description>反转链表 II Category Difficulty Likes Dislikes algorithms Medium (49.10%) 304 - Tags linked-list Companies Unknown 反转从位置 m 到 n 的链表。请使用一趟扫描完成反转。 说明: 1 ≤ m ≤ n ≤ 链表长度。 示例: 1 2 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL, m = 2, n =</description></item><item><title>旋转链表</title><link>https://justice.bj.cn/post/leetcode/doc/61.%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/61.%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid><description>旋转链表 Category Difficulty Likes Dislikes algorithms Medium (39.96%) 203 - Tags linked-list | two-pointers Companies Unknown 给定一个链表，旋转链表，将链表每个节点向右移动 *k *个位置，其中 *k *是非负数。 示例 1: 1 2 3 4 5 输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL, k</description></item></channel></rss>