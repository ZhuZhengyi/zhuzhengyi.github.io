<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>binary-search on Justice的小站</title><link>https://justice.bj.cn/tags/binary-search/</link><description>Recent content in binary-search on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 07 Jul 2023 21:53:58 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/binary-search/index.xml" rel="self" type="application/rss+xml"/><item><title>搜索旋转排序数组</title><link>https://justice.bj.cn/post/leetcode/doc/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</link><pubDate>Fri, 07 Jul 2023 21:53:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</guid><description>搜索旋转排序数组 Category Difficulty Likes Dislikes algorithms Medium (42.99%) 1743 - Tags array | binary-search Companies bloomberg | facebook | linkedin | microsoft | uber 整数数组 nums 按升序排列，数组中的值 互不相同 。 在传递给函数之前，nums 在预先未知</description></item><item><title>在排序数组中查找元素的第一个和最后一个位置</title><link>https://justice.bj.cn/post/leetcode/doc/34.%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</link><pubDate>Wed, 05 Apr 2023 19:09:32 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/34.%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</guid><description>在排序数组中查找元素的第一个和最后一个位置 Category Difficulty Likes Dislikes algorithms Medium (42.36%) 2235 - Tags array | binary-search Companies linkedin 给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 targe</description></item><item><title>搜索插入位置</title><link>https://justice.bj.cn/post/leetcode/doc/35.%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</link><pubDate>Wed, 05 Apr 2023 19:09:32 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/35.%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</guid><description>搜索插入位置 Category Difficulty Likes Dislikes algorithms Easy (45.04%) 1970 - Tags array | binary-search Companies Unknown 给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将</description></item><item><title>寻找重复数</title><link>https://justice.bj.cn/post/leetcode/doc/287.%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0/</link><pubDate>Tue, 21 Mar 2023 15:31:13 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/287.%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0/</guid><description>寻找重复数 Category Difficulty Likes Dislikes algorithms Medium (64.44%) 2089 - Tags array | two-pointers | binary-search Companies bloomberg 给定一个包含 n + 1 个整数的数组 nums ，其数字都在 [1, n] 范围内（包括 1 和 n），可知至少存在一个重复的整数</description></item><item><title>排列硬币</title><link>https://justice.bj.cn/post/leetcode/doc/441.%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/441.%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81/</guid><description>排列硬币 Category Difficulty Likes Dislikes algorithms Easy (45.46%) 262 - Tags math | binary-search Companies Unknown 你总共有 n 枚硬币，并计划将它们按阶梯状排列。对于一个由 k 行组成的阶梯，其第 i 行必须正好有 i 枚硬币。阶梯</description></item><item><title>最长递增子序列</title><link>https://justice.bj.cn/post/leetcode/doc/300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</link><pubDate>Fri, 03 Mar 2023 14:04:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/300.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97/</guid><description>最长递增子序列 Category Difficulty Likes Dislikes algorithms Medium (51.75%) 1963 - Tags binary-search | dynamic-programming Companies microsoft 给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。 子序列是由数组派生而来的序列，删除（或不删</description></item><item><title>三数之和的多种可能</title><link>https://justice.bj.cn/post/leetcode/doc/923.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%8F%AF%E8%83%BD/</link><pubDate>Sun, 12 Feb 2023 18:40:04 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/923.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%8F%AF%E8%83%BD/</guid><description>三数之和的多种可能 Category Difficulty Likes Dislikes algorithms Medium (36.28%) 111 - Tags math | binary-search | dynamic-programming Companies Unknown 给定一个整数数组 arr ，以及一个整数 target 作为目标值，返回满足 i &amp;lt; j &amp;lt; k 且 arr[i] + arr[j] + arr[k] == target 的元组 i,</description></item><item><title>寻找两个有序数组的中位数</title><link>https://justice.bj.cn/post/leetcode/doc/4.%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link><pubDate>Sat, 15 Oct 2022 10:14:04 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/4.%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid><description>寻找两个有序数组的中位数 Category Difficulty Likes Dislikes algorithms Hard (36.85%) 2222 - Tags array | binary-search | divide-and-conquer Companies adobe | apple | dropbox | google | microsoft | yahoo | zenefits 给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。 请你找出这两</description></item><item><title>Pow(x, n)</title><link>https://justice.bj.cn/post/leetcode/doc/50.pow/</link><pubDate>Sun, 01 May 2022 18:25:57 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/50.pow/</guid><description>Pow(x, n) Category Difficulty Likes Dislikes algorithms Medium (37.83%) 944 - Tags math | binary-search Companies bloomberg | facebook | google | linkedin 实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn ）。 示例 1： 1 2 输入：x = 2.00000, n = 10 输出：1024.00</description></item><item><title>第一个错误的版本</title><link>https://justice.bj.cn/post/leetcode/doc/278.%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC/</link><pubDate>Sun, 01 May 2022 13:13:08 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/278.%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC/</guid><description>第一个错误的版本 Category Difficulty Likes Dislikes algorithms Easy (45.15%) 673 - Tags binary-search Companies facebook 你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于</description></item></channel></rss>