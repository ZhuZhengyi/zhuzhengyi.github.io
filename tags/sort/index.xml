<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sort on Justice的小站</title><link>https://justice.bj.cn/tags/sort/</link><description>Recent content in sort on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 11 Sep 2023 10:17:31 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/sort/index.xml" rel="self" type="application/rss+xml"/><item><title>最大数</title><link>https://justice.bj.cn/post/leetcode/179.%E6%9C%80%E5%A4%A7%E6%95%B0/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/179.%E6%9C%80%E5%A4%A7%E6%95%B0/</guid><description>最大数 Category Difficulty Likes Dislikes algorithms Medium (40.98%) 1185 - Tags sort Companies Unknown 给定一组非负整数 nums，重新排列每个数的顺序（每个数不可拆分）使之组成一个最大的整数。 **注意：**输出结</description></item><item><title>翻转对</title><link>https://justice.bj.cn/post/leetcode/493.%E7%BF%BB%E8%BD%AC%E5%AF%B9/</link><pubDate>Mon, 11 Sep 2023 10:17:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/493.%E7%BF%BB%E8%BD%AC%E5%AF%B9/</guid><description>翻转对 Category Difficulty Likes Dislikes algorithms Hard (36.60%) 418 - Tags binary-search | divide-and-conquer | sort | binary-indexed-tree | segment-tree Companies google 给定一个数组 nums ，如果 i &amp;lt; j 且 nums[i] &amp;gt; 2*nums[j] 我们就将 (i, j) 称作一个重要翻转对。 你需要返回给定数组中的重要</description></item><item><title>计算右侧小于当前元素的个数</title><link>https://justice.bj.cn/post/leetcode/315.%E8%AE%A1%E7%AE%97%E5%8F%B3%E4%BE%A7%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%AA%E6%95%B0/</link><pubDate>Sun, 10 Sep 2023 17:31:20 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/315.%E8%AE%A1%E7%AE%97%E5%8F%B3%E4%BE%A7%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%AA%E6%95%B0/</guid><description>计算右侧小于当前元素的个数 Category Difficulty Likes Dislikes algorithms Hard (43.45%) 1009 - Tags binary-search | divide-and-conquer | sort | binary-indexed-tree | segment-tree Companies google 给你一个整数数组 nums ，按要求返回一个新数组 counts 。数组 counts 有该性质： counts[i] 的值是 nums[i] 右</description></item><item><title>区间和的个数</title><link>https://justice.bj.cn/post/leetcode/327.%E5%8C%BA%E9%97%B4%E5%92%8C%E7%9A%84%E4%B8%AA%E6%95%B0/</link><pubDate>Sat, 09 Sep 2023 18:46:13 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/327.%E5%8C%BA%E9%97%B4%E5%92%8C%E7%9A%84%E4%B8%AA%E6%95%B0/</guid><description>区间和的个数 Category Difficulty Likes Dislikes algorithms Hard (40.58%) 557 - Tags binary-search | divide-and-conquer | sort | binary-indexed-tree | segment-tree Companies google 给你一个整数数组 nums 以及两个整数 lower 和 upper 。求数组中，值位于范围 [lower, upper] （包含 lower 和 upper）之</description></item><item><title>合并区间</title><link>https://justice.bj.cn/post/leetcode/56.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</link><pubDate>Sat, 13 May 2023 12:48:21 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/56.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/</guid><description>合并区间 Category Difficulty Likes Dislikes algorithms Medium (49.30%) 1896 - Tags array | sort Companies bloomberg | facebook | google | linkedin | microsoft | twitter | yelp 以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，</description></item><item><title>插入区间</title><link>https://justice.bj.cn/post/leetcode/57.%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4/</link><pubDate>Sat, 13 May 2023 12:48:21 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/57.%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4/</guid><description>插入区间 Category Difficulty Likes Dislikes algorithms Medium (41.90%) 704 - Tags array | sort Companies facebook | google | linkedin 给你一个 无重叠的 ，按照区间起始端点排序的区间列表。 在列表中插入一个新的区间，你需要确保列表中的</description></item><item><title>对链表进行插入排序</title><link>https://justice.bj.cn/post/leetcode/147.%E5%AF%B9%E9%93%BE%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</link><pubDate>Fri, 24 Mar 2023 09:49:39 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/147.%E5%AF%B9%E9%93%BE%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</guid><description>对链表进行插入排序 Category Difficulty Likes Dislikes algorithms Medium (69.50%) 600 - Tags linked-list | sort Companies Unknown 给定单个链表的头 head ，使用 插入排序 对链表进行排序，并返回 排序后链表的头 。 插入排序 算法的步骤: 插</description></item><item><title>排序链表</title><link>https://justice.bj.cn/post/leetcode/148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</link><pubDate>Thu, 23 Mar 2023 08:08:31 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/148.%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/</guid><description>排序链表 Category Difficulty Likes Dislikes algorithms Medium (65.90%) 1948 - Tags linked-list | sort Companies Unknown 给你链表的头结点 head ，请将其按 升序 排列并返回 排序后的链表 。 示例 1： 1 2 输入：head = [4,2,1,3] 输出：[1,2,</description></item><item><title>最大间距</title><link>https://justice.bj.cn/post/leetcode/164.%E6%9C%80%E5%A4%A7%E9%97%B4%E8%B7%9D/</link><pubDate>Sat, 10 Dec 2022 15:56:56 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/164.%E6%9C%80%E5%A4%A7%E9%97%B4%E8%B7%9D/</guid><description>最大间距 Category Difficulty Likes Dislikes algorithms Hard (60.44%) 530 - Tags sort Companies Unknown 给定一个无序的数组 nums，返回 数组在排序之后，相邻元素之间最大的差值 。如果数组元素个数小于 2，则返回 0 。</description></item><item><title>有效的字母异位词</title><link>https://justice.bj.cn/post/leetcode/242.%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/</link><pubDate>Sat, 30 Apr 2022 19:58:18 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/242.%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/</guid><description>有效的字母异位词 Category Difficulty Likes Dislikes algorithms Easy (65.23%) 565 - Tags hash-table | sort Companies amazon | uber | yelp 给定两个字符串 *s* 和 *t* ，编写一个函数来判断 *t* 是否是 *s* 的字母异位词。 **注意：**若 *s* 和 *t*</description></item><item><title>通过删除字母匹配到字典里最长单词</title><link>https://justice.bj.cn/post/leetcode/524.%E9%80%9A%E8%BF%87%E5%88%A0%E9%99%A4%E5%AD%97%E6%AF%8D%E5%8C%B9%E9%85%8D%E5%88%B0%E5%AD%97%E5%85%B8%E9%87%8C%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/524.%E9%80%9A%E8%BF%87%E5%88%A0%E9%99%A4%E5%AD%97%E6%AF%8D%E5%8C%B9%E9%85%8D%E5%88%B0%E5%AD%97%E5%85%B8%E9%87%8C%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D/</guid><description>通过删除字母匹配到字典里最长单词 Category Difficulty Likes Dislikes algorithms Medium (44.88%) 57 - Tags two-pointers | sort Companies google 给定一个字符串和一个字符串字典，找到字典里面最长的字符串，该字符串可以通过删除</description></item></channel></rss>