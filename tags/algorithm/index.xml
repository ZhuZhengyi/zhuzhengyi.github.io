<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithm on Justice的小站</title><link>https://justice.bj.cn/tags/algorithm/</link><description>Recent content in algorithm on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 07 Mar 2024 11:58:54 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>并发</title><link>https://justice.bj.cn/post/13.algorithm/concurrent/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/concurrent/</guid><description>并发 进程 进程间通信 管道(Pipe) 共享内存(SharedMemory) 消息队列(MQ) 文件(File) socket 线程 线程间同步 互斥量(mutex) 条</description></item><item><title>排序算法</title><link>https://justice.bj.cn/post/13.algorithm/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid><description>排序算法 概述 排序是将无序的序列变成有序的序列的计算过程，是计算机程序设计中最基础算法之一。 分类 排序算法一般分为两大类： 比较类排序：通过比较操</description></item><item><title>查找算法</title><link>https://justice.bj.cn/post/13.algorithm/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</guid><description>查找算法 简介 查找算法是计算机科学中最基本的算法之一，其用途在查找给定序列中的特定值。 二分查找 二分查找法是对有序序列的快速查找方法，其时间复杂</description></item><item><title>算法基础</title><link>https://justice.bj.cn/post/13.algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</guid><description>算法基础 算法定义 算法评估 空间复杂度 时间复杂度 常用算法 排序 比较类 冒泡排序 选择排序 插入排序 归并排序 希尔排序 快速排序 堆排序 非比较类 计数排序 桶排序 基</description></item><item><title>纠删码(ErasureCode)</title><link>https://justice.bj.cn/post/13.algorithm/erasurecode/</link><pubDate>Thu, 07 Mar 2024 11:58:54 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/erasurecode/</guid><description>纠删码(ErasureCode) 简介 纠删码是通过利用纠删码算法将原始的数据进行编码得到校验，并将数据和校验一并存储起来，以达到容错的目的; 其</description></item><item><title>基数排序</title><link>https://justice.bj.cn/post/13.algorithm/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</link><pubDate>Sat, 10 Dec 2022 15:56:56 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/</guid><description>基数排序 简介 基数排序（Radix sort）是一种非比较型整数排序算法。 基本思想 原理是将整数按位数切割成不同的数字，然后按每个位数分别比较。基</description></item><item><title>Kademlia算法</title><link>https://justice.bj.cn/post/13.algorithm/kademlia%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 12 Jun 2022 20:44:24 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/kademlia%E7%AE%97%E6%B3%95/</guid><description>Kademlia算法 简介 Kademlia算法是2002年由Petar Maymounkov 和 David Mazières 所设计，以异或距离来对哈希表进行分层是其特点 Kad</description></item><item><title>clock缓存置换算法</title><link>https://justice.bj.cn/post/13.algorithm/clock%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 21 May 2022 21:27:53 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/clock%E7%AE%97%E6%B3%95/</guid><description>clock缓存置换算法 简介 clock缓存置换算法(时钟置换算法)是LRU算法的一个变种，其使用环形数组代替链表； clock缓存置换算法的性能</description></item><item><title>SnowFlake 算法</title><link>https://justice.bj.cn/post/13.algorithm/snowflake%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 30 Apr 2022 19:40:36 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/snowflake%E7%AE%97%E6%B3%95/</guid><description>SnowFlake 算法 概述 Snowflake 算法是 Twitter 发明的一种算法，用于在分布式的高并发环境中，生成 64 位自增 ID。这种算法产生的背景是，Twitter 每秒钟能产生上万条信息</description></item><item><title>Jump一致性哈希算法</title><link>https://justice.bj.cn/post/13.algorithm/jumpconsistenthash%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 30 Apr 2022 17:04:39 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/jumpconsistenthash%E7%AE%97%E6%B3%95/</guid><description>Jump一致性哈希算法 简介 Jump consistent hash是一种一致性哈希算法, 此算法零内存消耗，均匀分配，快速，并且只有5行代码。 这个算法是 Google 的 John Lamping 和 Eric Veach 创造</description></item><item><title>KMP算法</title><link>https://justice.bj.cn/post/13.algorithm/kmp%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 30 Apr 2022 17:04:39 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/kmp%E7%AE%97%E6%B3%95/</guid><description>KMP算法 简介 KMP算法是一种改进的字符串匹配算法，由D.E.Knuth，J.H.Morris和V.R.Pratt共同发明； KMP算法的关键</description></item><item><title>一致性哈希算法</title><link>https://justice.bj.cn/post/13.algorithm/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95/</link><pubDate>Sat, 30 Apr 2022 17:04:39 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E4%B8%80%E8%87%B4%E6%80%A7hash%E7%AE%97%E6%B3%95/</guid><description>一致性哈希算法 一致性哈希算法在 1997 年由麻省理工学院的 Karger 等人在解决分布式 Cache 中提出的，设计目标是为了解决因特网中的热点(Hot spot)问题，初衷</description></item><item><title>设计模式及准则</title><link>https://justice.bj.cn/post/13.algorithm/design_pattern/</link><pubDate>Sat, 30 Apr 2022 17:04:39 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/design_pattern/</guid><description>设计模式及准则 设计准则 单一职责原则(SDP): 一个类自有一个引起变化的原因。 开发封闭原则(ODP): 对扩展开发, 对修改封闭。 依赖倒置原则(D</description></item><item><title>PForDelta算法</title><link>https://justice.bj.cn/post/13.algorithm/pfordelta%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 10 Oct 2021 13:44:29 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/pfordelta%E7%AE%97%E6%B3%95/</guid><description>PForDelta算法 简介 由于倒排索引文件往往占用巨大的磁盘空间，我们自然想到对数据进行压缩。同时，引进压缩算法后，使得磁盘占用减少，操作系</description></item><item><title>股票买卖算法</title><link>https://justice.bj.cn/post/13.algorithm/%E8%82%A1%E7%A5%A8%E4%B9%B0%E5%8D%96%E7%AE%97%E6%B3%95/</link><pubDate>Sun, 26 Sep 2021 23:23:46 +0800</pubDate><guid>https://justice.bj.cn/post/13.algorithm/%E8%82%A1%E7%A5%A8%E4%B9%B0%E5%8D%96%E7%AE%97%E6%B3%95/</guid><description>股票买卖算法 核心代码 1 2 3 4 5 6 for (let i = 1; i &amp;lt; n; i++) { //卖出时利润：求最大值（上次交易卖出时利润，本次交易卖出时利润） profit_out = Math.max(profit_out, profit_in + prices[i]); //买入时</description></item></channel></rss>