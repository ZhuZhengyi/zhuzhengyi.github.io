<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>string on Justice的小站</title><link>https://justice.bj.cn/tags/string/</link><description>Recent content in string on Justice的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 02 May 2022 14:53:34 +0800</lastBuildDate><atom:link href="https://justice.bj.cn/tags/string/index.xml" rel="self" type="application/rss+xml"/><item><title>有效数字</title><link>https://justice.bj.cn/post/leetcode/doc/65.%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97/</link><pubDate>Mon, 02 May 2022 14:53:34 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/65.%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97/</guid><description>有效数字 Category Difficulty Likes Dislikes algorithms Hard (27.34%) 310 - Tags math | string Companies linkedin 有效数字（按顺序）可以分成以下几个部分： 一个 小数 或者 整数 （可选）一个 'e' 或 'E' ，后面跟着一个 整数 小数（按顺</description></item><item><title>字母异位词分组</title><link>https://justice.bj.cn/post/leetcode/doc/49.%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/</link><pubDate>Sun, 01 May 2022 18:25:57 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/49.%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/</guid><description>字母异位词分组 Category Difficulty Likes Dislikes algorithms Medium (67.20%) 1117 - Tags hash-table | string Companies amazon | bloomberg | facebook | uber | yelp 给你一个字符串数组，请你将 字母异位词 组合在一起。可以按任意顺序返回结果列表。 字母</description></item><item><title>最长公共前缀</title><link>https://justice.bj.cn/post/leetcode/doc/14.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</link><pubDate>Sat, 30 Apr 2022 21:01:56 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/14.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</guid><description>最长公共前缀 Category Difficulty Likes Dislikes algorithms Easy (42.24%) 2215 - Tags string Companies yelp 编写一个函数来查找字符串数组中的最长公共前缀。 如果不存在公共前缀，返回空字符串 &amp;quot;&amp;quot;</description></item><item><title>验证回文串</title><link>https://justice.bj.cn/post/leetcode/doc/125.%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/</link><pubDate>Sat, 30 Apr 2022 21:01:56 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/125.%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/</guid><description>验证回文串 Category Difficulty Likes Dislikes algorithms Easy (46.93%) 523 - Tags two-pointers | string Companies facebook | microsoft | uber | zenefits 给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。 **说明</description></item><item><title>反转字符串</title><link>https://justice.bj.cn/post/leetcode/doc/344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</link><pubDate>Sat, 30 Apr 2022 19:40:36 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/344.%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid><description>反转字符串 Category Difficulty Likes Dislikes algorithms Easy (78.41%) 580 - Tags two-pointers | string Companies Unknown 编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。 不要给另外的数组分配</description></item><item><title>字符串中的第一个唯一字符</title><link>https://justice.bj.cn/post/leetcode/doc/387.%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%94%AF%E4%B8%80%E5%AD%97%E7%AC%A6/</link><pubDate>Sat, 30 Apr 2022 19:40:36 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/387.%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%94%AF%E4%B8%80%E5%AD%97%E7%AC%A6/</guid><description>字符串中的第一个唯一字符 Category Difficulty Likes Dislikes algorithms Easy (54.73%) 548 - Tags hash-table | string Companies amazon | bloomberg | microsoft 给定一个字符串 s ，找到 它的第一个不重复的字符，并返回它的索引 。如果不存在，则返</description></item><item><title>括号生成</title><link>https://justice.bj.cn/post/leetcode/doc/22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</link><pubDate>Tue, 26 Apr 2022 12:29:18 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</guid><description>括号生成 Category Difficulty Likes Dislikes algorithms Medium (73.37%) 770 - Tags string | backtracking Companies google | uber | zenefits 给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。 例如，给</description></item><item><title>电话号码的字母组合</title><link>https://justice.bj.cn/post/leetcode/doc/17.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</link><pubDate>Tue, 26 Apr 2022 12:29:18 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/17.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</guid><description>电话号码的字母组合 Category Difficulty Likes Dislikes algorithms Medium (57.75%) 1863 - Tags string | backtracking Companies amazon | dropbox | facebook | google | uber 给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序</description></item><item><title>正则表达式匹配</title><link>https://justice.bj.cn/post/leetcode/doc/10.%E6%AD%A3%E5%88%99%E5%BC%8F%E5%8C%B9%E9%85%8D/</link><pubDate>Mon, 25 Apr 2022 16:00:02 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/10.%E6%AD%A3%E5%88%99%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid><description>正则表达式匹配 Category Difficulty Likes Dislikes algorithms Hard (31.61%) 2932 - Tags string | dynamic-programming | backtracking Companies airbnb | facebook | google | twitter | uber 给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 '.' 和 '*' 的正则表达式匹配。</description></item><item><title>最长回文子串</title><link>https://justice.bj.cn/post/leetcode/doc/5.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</link><pubDate>Mon, 11 Apr 2022 22:34:17 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/5.%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</guid><description>最长回文子串 Category Difficulty Likes Dislikes algorithms Medium (28.58%) 1805 - Tags string | dynamic-programming Companies amazon | bloomberg | microsoft 给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。 示例 1： 1 2 3</description></item><item><title>无重复字符的最长子串</title><link>https://justice.bj.cn/post/leetcode/doc/3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</link><pubDate>Thu, 17 Mar 2022 09:56:25 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</guid><description>无重复字符的最长子串 Category Difficulty Likes Dislikes algorithms Medium (32.18%) 2861 - Tags hash-table | two-pointers | string | sliding-window Companies adobe | amazon | bloomberg | yelp 给定一个字符串，请你找出其中不含有重复字符的 **最长子串 **的长度。 示</description></item><item><title>外观数列</title><link>https://justice.bj.cn/post/leetcode/doc/38.%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</link><pubDate>Fri, 25 Feb 2022 11:34:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/38.%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</guid><description>外观数列 Category Difficulty Likes Dislikes algorithms Medium (59.80%) 869 - Tags string Companies facebook 给定一个正整数 n ，输出外观数列的第 n 项。 「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一</description></item><item><title>字符串相乘</title><link>https://justice.bj.cn/post/leetcode/doc/43.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/</link><pubDate>Fri, 25 Feb 2022 11:34:58 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/43.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/</guid><description>字符串相乘 Category Difficulty Likes Dislikes algorithms Medium (44.98%) 838 - Tags math | string Companies facebook | twitter 给定两个以字符串形式表示的非负整数 num1 和 num2，返回 num1 和 num2 的乘积，它们的乘积也表示为字符串形式。</description></item><item><title>最小覆盖子串</title><link>https://justice.bj.cn/post/leetcode/doc/76.%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/</link><pubDate>Thu, 20 Jan 2022 09:40:30 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/76.%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/</guid><description>最小覆盖子串 Category Difficulty Likes Dislikes algorithms Hard (43.18%) 1565 - Tags hash-table | two-pointers | string | sliding-window Companies facebook | linkedin | snapchat | uber 给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存</description></item><item><title>有效的括号</title><link>https://justice.bj.cn/post/leetcode/doc/20.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</link><pubDate>Sun, 14 Nov 2021 21:52:07 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/20.%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</guid><description>有效的括号 Category Difficulty Likes Dislikes algorithms Easy (40.21%) 1262 - Tags string | stack Companies 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。 有效字符串需</description></item><item><title>Z 字形变换</title><link>https://justice.bj.cn/post/leetcode/doc/6.z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/6.z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</guid><description>Z 字形变换 Category Difficulty Likes Dislikes algorithms Medium (45.86%) 564 - Tags string Companies Unknown 将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。 比如输入字符串为 &amp;quot;LEETCODEISHIRING&amp;quot; 行数为 3 时，排列如</description></item><item><title>字符串转换整数 (atoi)</title><link>https://justice.bj.cn/post/leetcode/doc/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</guid><description>字符串转换整数 (atoi) Category Difficulty Likes Dislikes algorithms Medium (19.14%) 561 - Tags math | string Companies amazon | bloomberg | microsoft | uber 请你来实现一个 atoi 函数，使其能将字符串转换成整数。 首先，该函数会根据需要丢弃无用的开</description></item><item><title>字符串转换整数 (atoi)</title><link>https://justice.bj.cn/post/leetcode/doc/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/8.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0/</guid><description>字符串转换整数 (atoi) Category Difficulty Likes Dislikes algorithms Medium (19.14%) 561 - Tags math | string Companies amazon | bloomberg | microsoft | uber 请你来实现一个 atoi 函数，使其能将字符串转换成整数。 首先，该函数会根据需要丢弃无用的开</description></item><item><title>最长有效括号</title><link>https://justice.bj.cn/post/leetcode/doc/32.%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</link><pubDate>Sat, 23 Oct 2021 20:27:22 +0800</pubDate><guid>https://justice.bj.cn/post/leetcode/doc/32.%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7/</guid><description>最长有效括号 Category Difficulty Likes Dislikes algorithms Hard (29.67%) 543 - Tags string | dynamic-programming Companies Unknown 给定一个只包含 '(' 和 ')' 的字符串，找出最长的包含有效括号的子串的长度。 示例 1: 1 2 3 输入: &amp;#34;(()&amp;#34; 输出: 2 解释</description></item></channel></rss>